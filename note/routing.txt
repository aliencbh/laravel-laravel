exclude the actions that you do not want a route to handle
Route::resource('book', 'BookController', ['except' => [
   'create', 'store', 'update', 'destroy'
]]);


use view()
Route::get('/', function ()  
 {      
return view ('welcome');  
});  

without route parameters
Route::get('/about', function()  
{  
  return "This is a about us page";   
} 

with route parameters
Route::get('/post/{id}', function($id)  
{  
  return "id number is : ". $id;   
}  
); 

with route parameters optional parameters
Route::get('user/{name?}', function ($name=name) {  
    return "name is : ". $name;  
});  

with multiple route parameters
Route::get('/post/{id}/{name}', function($id,$name)  
{  
  return "id number is : ". $id ." ".$name;   
}  
);  

route parameter that contains only alphabetical characters
Route::get('user/{name?}', function ($name=null) {  
    return "name is : ".$name;  
})->where('name','[a-zA-Z]+'); 

route parameter that accepts only numeric values
Route::get('user/{id?}', function ($id=null) {  
    return "id is : ". $id;  
}->where('id','[0-9]+');  

route parameter that accepts alphanumeric characters
Route::get('user/{id}/{name}', function ($id,$name) {  
    return "id is : ". $id ." ,".  "Name is : ".$name ;  
})->where(['id'=>'[0-9]+', 'name'=>'[a-zA-Z]+']);  

name route
Route::get('student/details', function()  
{  
    //  
}) -> name('student_details');  

named routes for controller
Route::get('student/details', 'studentcontroller@showdetails') -> name('student_details');

Parameters in Named routes
Route::get('user/{id}/profile',function($id)  
{  
   $url=route('profile',['id'=>100]);  
    return $url;  
})->name('profile');  

Available Router Methods
Route::get($uri, $callback);
Route::post($uri, $callback);
Route::put($uri, $callback);
Route::patch($uri, $callback);
Route::delete($uri, $callback);
Route::options($uri, $callback);

route that responds to multiple HTTP verbs
Route::match(['get', 'post'], '/', function () {
    // ...
});

route that responds to all HTTP verbs using the any method
Route::any('/', function () {
    // ...
});

Route::get('/user/{id}/{name}', function (string $id, string $name) {
    // ...
})->whereNumber('id')->whereAlpha('name');
 
Route::get('/user/{name}', function (string $name) {
    // ...
})->whereAlphaNumeric('name');
 
Route::get('/user/{id}', function (string $id) {
    // ...
})->whereUuid('id');
 
Route::get('/user/{id}', function (string $id) {
    //
})->whereUlid('id');
 
Route::get('/category/{category}', function (string $category) {
    // ...
})->whereIn('category', ['movie', 'song', 'painting']);