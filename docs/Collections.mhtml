From: <Saved by Blink>
Snapshot-Content-Location: https://laravel.com/docs/10.x/collections#available-methods
Subject: Collections - Laravel 10.x - The PHP Framework For Web Artisans
Date: Thu, 2 Nov 2023 20:11:35 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----"


------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/html
Content-ID: <frame-B6FD7BD7427EC095DD328AA25E7296D6@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/docs/10.x/collections#available-methods

<!DOCTYPE html>
<html lang="en" data-theme="light" color-theme="system"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="cid:css-14cda33d-2049-4b5c-97ae-c2cc6336289e@mhtml.blink"><link rel="stylesheet" type="text/css" href="cid:css-9eceb86c-5834-4337-9660-156b735dc59e@mhtml.blink"><link rel="stylesheet" type="text/css" href="cid:css-f699fad2-7473-41a5-b3cb-31d5cfb52a68@mhtml.blink"><link rel="stylesheet" type="text/css" href="cid:css-1b37c8cf-fe57-45d2-b4bc-b4b880b11757@mhtml.blink">
        <title>Collections - Laravel 10.x - The PHP Framework For Web Artisans</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">
        <link rel="canonical" href="https://laravel.com/docs/10.x/collections">
    <!-- Primary Meta Tags -->
    <meta name="title" content="Laravel - The PHP Framework For Web Artisans">
    <meta name="description" content="Laravel is a PHP web application framework with expressive, elegant syntax. We’ve already laid the foundation — freeing you to create without sweating the small things.">
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://laravel.com/">
    <meta property="og:title" content="Laravel - The PHP Framework For Web Artisans">
    <meta property="og:description" content="Laravel is a PHP web application framework with expressive, elegant syntax. We’ve already laid the foundation — freeing you to create without sweating the small things.">
    <meta property="og:image" content="https://laravel.com/img/og-image.jpg">
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://laravel.com/">
    <meta property="twitter:title" content="Laravel - The PHP Framework For Web Artisans">
    <meta property="twitter:description" content="Laravel is a PHP web application framework with expressive, elegant syntax. We’ve already laid the foundation — freeing you to create without sweating the small things.">
    <meta property="twitter:image" content="https://laravel.com/img/og-image.jpg">
    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="https://laravel.com/img/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://laravel.com/img/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://laravel.com/img/favicon/favicon-16x16.png">
    <link rel="manifest" href="https://laravel.com/img/favicon/site.webmanifest">
    <link rel="mask-icon" href="https://laravel.com/img/favicon/safari-pinned-tab.svg" color="#ff2d20">
    <link rel="shortcut icon" href="https://laravel.com/img/favicon/favicon.ico">
    <meta name="msapplication-TileColor" content="#ff2d20">
    <meta name="msapplication-config" content="/img/favicon/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">
    <meta name="color-scheme" content="light">
    <link rel="preconnect" href="https://e3mirnpjh5-dsn.algolia.net/" crossorigin="">
    <link rel="stylesheet" href="https://use.typekit.net/ins2wgm.css">
    <link rel="preload" as="style" href="https://laravel.com/build/assets/app-8aa4d27a.css"><link rel="modulepreload" href="https://laravel.com/build/assets/app-c412b7b5.js"><link rel="stylesheet" href="https://laravel.com/build/assets/app-8aa4d27a.css">
            <!-- Fathom - beautiful, simple website analytics -->
                <!-- / Fathom -->
</head>
<body>
<div class="relative overflow-auto dark:bg-dark-700" id="docsScreen">
        <div class="relative lg:flex lg:items-start">
<section class="flex-1 dark:bg-dark-700">
                <div class="max-w-screen-lg px-8 sm:px-16 lg:px-24">
<section class="mt-8 md:mt-16">
                        <section class="docs_main max-w-prose">
<div id="main-content">
<h2 id="available-methods"><a href="https://laravel.com/docs/10.x/collections#available-methods">Available Methods</a></h2>
<p>For the majority of the remaining collection documentation, we'll discuss each method available on the <code>Collection</code> class. Remember, all of these methods may be chained to fluently manipulate the underlying array. Furthermore, almost every method returns a new <code>Collection</code> instance, allowing you to preserve the original copy of the collection when necessary:</p>
<div class="collection-method-list" markdown="1">
<p><a href="https://laravel.com/docs/10.x/collections#method-all">all</a>
<a href="https://laravel.com/docs/10.x/collections#method-average">average</a>
<a href="https://laravel.com/docs/10.x/collections#method-avg">avg</a>
<a href="https://laravel.com/docs/10.x/collections#method-chunk">chunk</a>
<a href="https://laravel.com/docs/10.x/collections#method-chunkwhile">chunkWhile</a>
<a href="https://laravel.com/docs/10.x/collections#method-collapse">collapse</a>
<a href="https://laravel.com/docs/10.x/collections#method-collect">collect</a>
<a href="https://laravel.com/docs/10.x/collections#method-combine">combine</a>
<a href="https://laravel.com/docs/10.x/collections#method-concat">concat</a>
<a href="https://laravel.com/docs/10.x/collections#method-contains">contains</a>
<a href="https://laravel.com/docs/10.x/collections#method-containsoneitem">containsOneItem</a>
<a href="https://laravel.com/docs/10.x/collections#method-containsstrict">containsStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-count">count</a>
<a href="https://laravel.com/docs/10.x/collections#method-countBy">countBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-crossjoin">crossJoin</a>
<a href="https://laravel.com/docs/10.x/collections#method-dd">dd</a>
<a href="https://laravel.com/docs/10.x/collections#method-diff">diff</a>
<a href="https://laravel.com/docs/10.x/collections#method-diffassoc">diffAssoc</a>
<a href="https://laravel.com/docs/10.x/collections#method-diffassocusing">diffAssocUsing</a>
<a href="https://laravel.com/docs/10.x/collections#method-diffkeys">diffKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-doesntcontain">doesntContain</a>
<a href="https://laravel.com/docs/10.x/collections#method-dot">dot</a>
<a href="https://laravel.com/docs/10.x/collections#method-dump">dump</a>
<a href="https://laravel.com/docs/10.x/collections#method-duplicates">duplicates</a>
<a href="https://laravel.com/docs/10.x/collections#method-duplicatesstrict">duplicatesStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-each">each</a>
<a href="https://laravel.com/docs/10.x/collections#method-eachspread">eachSpread</a>
<a href="https://laravel.com/docs/10.x/collections#method-ensure">ensure</a>
<a href="https://laravel.com/docs/10.x/collections#method-every">every</a>
<a href="https://laravel.com/docs/10.x/collections#method-except">except</a>
<a href="https://laravel.com/docs/10.x/collections#method-filter">filter</a>
<a href="https://laravel.com/docs/10.x/collections#method-first">first</a>
<a href="https://laravel.com/docs/10.x/collections#method-first-or-fail">firstOrFail</a>
<a href="https://laravel.com/docs/10.x/collections#method-first-where">firstWhere</a>
<a href="https://laravel.com/docs/10.x/collections#method-flatmap">flatMap</a>
<a href="https://laravel.com/docs/10.x/collections#method-flatten">flatten</a>
<a href="https://laravel.com/docs/10.x/collections#method-flip">flip</a>
<a href="https://laravel.com/docs/10.x/collections#method-forget">forget</a>
<a href="https://laravel.com/docs/10.x/collections#method-forpage">forPage</a>
<a href="https://laravel.com/docs/10.x/collections#method-get">get</a>
<a href="https://laravel.com/docs/10.x/collections#method-groupby">groupBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-has">has</a>
<a href="https://laravel.com/docs/10.x/collections#method-hasany">hasAny</a>
<a href="https://laravel.com/docs/10.x/collections#method-implode">implode</a>
<a href="https://laravel.com/docs/10.x/collections#method-intersect">intersect</a>
<a href="https://laravel.com/docs/10.x/collections#method-intersectAssoc">intersectAssoc</a>
<a href="https://laravel.com/docs/10.x/collections#method-intersectbykeys">intersectByKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-isempty">isEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-isnotempty">isNotEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-join">join</a>
<a href="https://laravel.com/docs/10.x/collections#method-keyby">keyBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-keys">keys</a>
<a href="https://laravel.com/docs/10.x/collections#method-last">last</a>
<a href="https://laravel.com/docs/10.x/collections#method-lazy">lazy</a>
<a href="https://laravel.com/docs/10.x/collections#method-macro">macro</a>
<a href="https://laravel.com/docs/10.x/collections#method-make">make</a>
<a href="https://laravel.com/docs/10.x/collections#method-map">map</a>
<a href="https://laravel.com/docs/10.x/collections#method-mapinto">mapInto</a>
<a href="https://laravel.com/docs/10.x/collections#method-mapspread">mapSpread</a>
<a href="https://laravel.com/docs/10.x/collections#method-maptogroups">mapToGroups</a>
<a href="https://laravel.com/docs/10.x/collections#method-mapwithkeys">mapWithKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-max">max</a>
<a href="https://laravel.com/docs/10.x/collections#method-median">median</a>
<a href="https://laravel.com/docs/10.x/collections#method-merge">merge</a>
<a href="https://laravel.com/docs/10.x/collections#method-mergerecursive">mergeRecursive</a>
<a href="https://laravel.com/docs/10.x/collections#method-min">min</a>
<a href="https://laravel.com/docs/10.x/collections#method-mode">mode</a>
<a href="https://laravel.com/docs/10.x/collections#method-nth">nth</a>
<a href="https://laravel.com/docs/10.x/collections#method-only">only</a>
<a href="https://laravel.com/docs/10.x/collections#method-pad">pad</a>
<a href="https://laravel.com/docs/10.x/collections#method-partition">partition</a>
<a href="https://laravel.com/docs/10.x/collections#method-percentage">percentage</a>
<a href="https://laravel.com/docs/10.x/collections#method-pipe">pipe</a>
<a href="https://laravel.com/docs/10.x/collections#method-pipeinto">pipeInto</a>
<a href="https://laravel.com/docs/10.x/collections#method-pipethrough">pipeThrough</a>
<a href="https://laravel.com/docs/10.x/collections#method-pluck">pluck</a>
<a href="https://laravel.com/docs/10.x/collections#method-pop">pop</a>
<a href="https://laravel.com/docs/10.x/collections#method-prepend">prepend</a>
<a href="https://laravel.com/docs/10.x/collections#method-pull">pull</a>
<a href="https://laravel.com/docs/10.x/collections#method-push">push</a>
<a href="https://laravel.com/docs/10.x/collections#method-put">put</a>
<a href="https://laravel.com/docs/10.x/collections#method-random">random</a>
<a href="https://laravel.com/docs/10.x/collections#method-range">range</a>
<a href="https://laravel.com/docs/10.x/collections#method-reduce">reduce</a>
<a href="https://laravel.com/docs/10.x/collections#method-reduce-spread">reduceSpread</a>
<a href="https://laravel.com/docs/10.x/collections#method-reject">reject</a>
<a href="https://laravel.com/docs/10.x/collections#method-replace">replace</a>
<a href="https://laravel.com/docs/10.x/collections#method-replacerecursive">replaceRecursive</a>
<a href="https://laravel.com/docs/10.x/collections#method-reverse">reverse</a>
<a href="https://laravel.com/docs/10.x/collections#method-search">search</a>
<a href="https://laravel.com/docs/10.x/collections#method-shift">shift</a>
<a href="https://laravel.com/docs/10.x/collections#method-shuffle">shuffle</a>
<a href="https://laravel.com/docs/10.x/collections#method-skip">skip</a>
<a href="https://laravel.com/docs/10.x/collections#method-skipuntil">skipUntil</a>
<a href="https://laravel.com/docs/10.x/collections#method-skipwhile">skipWhile</a>
<a href="https://laravel.com/docs/10.x/collections#method-slice">slice</a>
<a href="https://laravel.com/docs/10.x/collections#method-sliding">sliding</a>
<a href="https://laravel.com/docs/10.x/collections#method-sole">sole</a>
<a href="https://laravel.com/docs/10.x/collections#method-some">some</a>
<a href="https://laravel.com/docs/10.x/collections#method-sort">sort</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortby">sortBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortbydesc">sortByDesc</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortdesc">sortDesc</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortkeys">sortKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortkeysdesc">sortKeysDesc</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortkeysusing">sortKeysUsing</a>
<a href="https://laravel.com/docs/10.x/collections#method-splice">splice</a>
<a href="https://laravel.com/docs/10.x/collections#method-split">split</a>
<a href="https://laravel.com/docs/10.x/collections#method-splitin">splitIn</a>
<a href="https://laravel.com/docs/10.x/collections#method-sum">sum</a>
<a href="https://laravel.com/docs/10.x/collections#method-take">take</a>
<a href="https://laravel.com/docs/10.x/collections#method-takeuntil">takeUntil</a>
<a href="https://laravel.com/docs/10.x/collections#method-takewhile">takeWhile</a>
<a href="https://laravel.com/docs/10.x/collections#method-tap">tap</a>
<a href="https://laravel.com/docs/10.x/collections#method-times">times</a>
<a href="https://laravel.com/docs/10.x/collections#method-toarray">toArray</a>
<a href="https://laravel.com/docs/10.x/collections#method-tojson">toJson</a>
<a href="https://laravel.com/docs/10.x/collections#method-transform">transform</a>
<a href="https://laravel.com/docs/10.x/collections#method-undot">undot</a>
<a href="https://laravel.com/docs/10.x/collections#method-union">union</a>
<a href="https://laravel.com/docs/10.x/collections#method-unique">unique</a>
<a href="https://laravel.com/docs/10.x/collections#method-uniquestrict">uniqueStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-unless">unless</a>
<a href="https://laravel.com/docs/10.x/collections#method-unlessempty">unlessEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-unlessnotempty">unlessNotEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-unwrap">unwrap</a>
<a href="https://laravel.com/docs/10.x/collections#method-value">value</a>
<a href="https://laravel.com/docs/10.x/collections#method-values">values</a>
<a href="https://laravel.com/docs/10.x/collections#method-when">when</a>
<a href="https://laravel.com/docs/10.x/collections#method-whenempty">whenEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-whennotempty">whenNotEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-where">where</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherestrict">whereStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherebetween">whereBetween</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherein">whereIn</a>
<a href="https://laravel.com/docs/10.x/collections#method-whereinstrict">whereInStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-whereinstanceof">whereInstanceOf</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotbetween">whereNotBetween</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotin">whereNotIn</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotinstrict">whereNotInStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotnull">whereNotNull</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenull">whereNull</a>
<a href="https://laravel.com/docs/10.x/collections#method-wrap">wrap</a>
<a href="https://laravel.com/docs/10.x/collections#method-zip">zip</a></p>
</div>
<p></p>
<h2 id="method-listing"><a href="https://laravel.com/docs/10.x/collections#method-listing">Method Listing</a></h2>

<p></p>
<h4 class="collection-method first-collection-method" id="method-all"><a href="https://laravel.com/docs/10.x/collections#method-all"><code>all()</code></a></h4>
<p>The <code>all</code> method returns the underlying array represented by the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-4"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3]</span></div></code></pre><button id="clipButton-4" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-4"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-average"><a href="https://laravel.com/docs/10.x/collections#method-average"><code>average()</code></a></h4>
<p>Alias for the <a href="https://laravel.com/docs/10.x/collections#method-avg"><code>avg</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-avg"><a href="https://laravel.com/docs/10.x/collections#method-avg"><code>avg()</code></a></h4>
<p>The <code>avg</code> method returns the <a href="https://en.wikipedia.org/wiki/Average">average value</a> of a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-5"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$average</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">40</span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">avg</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 20</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$average</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">avg</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 2</span></div></code></pre><button id="clipButton-5" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-5"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-chunk"><a href="https://laravel.com/docs/10.x/collections#method-chunk"><code>chunk()</code></a></h4>
<p>The <code>chunk</code> method breaks the collection into multiple, smaller collections of a given size:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-6"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">chunk</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [[1, 2, 3, 4], [5, 6, 7]]</span></div></code></pre><button id="clipButton-6" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-6"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>This method is especially useful in <a href="https://laravel.com/docs/10.x/views">views</a> when working with a grid system such as <a href="https://getbootstrap.com/docs/4.1/layout/grid/">Bootstrap</a>. For example, imagine you have a collection of <a href="https://laravel.com/docs/10.x/eloquent">Eloquent</a> models you want to display in a grid:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="blade" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-7"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">@foreach </span><span style="color: #BFC7D5;">(</span><span style="color: #BEC5D4;">$products</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">chunk</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">) </span><span style="color: #C792EA;">as</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">&lt;</span><span style="color: #FF5572;">div</span><span style="color: #89DDFF;"> </span><span style="color: #FFCB6B;">class</span><span style="color: #89DDFF;">=</span><span style="color: #D9F5DD;">"</span><span style="color: #C3E88D;">row</span><span style="color: #D9F5DD;">"</span><span style="color: #89DDFF;">&gt;</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">@foreach </span><span style="color: #BFC7D5;">(</span><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">as</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$product</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">            </span><span style="color: #89DDFF;">&lt;</span><span style="color: #FF5572;">div</span><span style="color: #89DDFF;"> </span><span style="color: #FFCB6B;">class</span><span style="color: #89DDFF;">=</span><span style="color: #D9F5DD;">"</span><span style="color: #C3E88D;">col-xs-4</span><span style="color: #D9F5DD;">"</span><span style="color: #89DDFF;">&gt;{{</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$product</span><span style="color: #89DDFF;">-&gt;name</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">}}&lt;/</span><span style="color: #FF5572;">div</span><span style="color: #89DDFF;">&gt;</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">@endforeach</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">&lt;/</span><span style="color: #FF5572;">div</span><span style="color: #89DDFF;">&gt;</span></div><div class="line"><span style="color: #C792EA;">@endforeach</span></div></code></pre><button id="clipButton-7" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-7"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-chunkwhile"><a href="https://laravel.com/docs/10.x/collections#method-chunkwhile"><code>chunkWhile()</code></a></h4>
<p>The <code>chunkWhile</code> method breaks the collection into multiple, smaller collections based on the evaluation of the given callback. The <code>$chunk</code> variable passed to the closure may be used to inspect the previous element:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-8"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">(</span><span style="color: #89DDFF;">str_split</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">AABBCCCD</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">));</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">chunkWhile</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">string</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #BFC7D5;">, </span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$chunk</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">===</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">last</span><span style="color: #BFC7D5;">();</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [['A', 'A'], ['B', 'B'], ['C', 'C', 'C'], ['D']]</span></div></code></pre><button id="clipButton-8" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-8"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-collapse"><a href="https://laravel.com/docs/10.x/collections#method-collapse"><code>collapse()</code></a></h4>
<p>The <code>collapse</code> method collapses a collection of arrays into a single, flat collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-9"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collapsed</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">collapse</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collapsed</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></div></code></pre><button id="clipButton-9" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-9"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-collect"><a href="https://laravel.com/docs/10.x/collections#method-collect"><code>collect()</code></a></h4>
<p>The <code>collect</code> method returns a new <code>Collection</code> instance with the items currently in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-10"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collectionA</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collectionB</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collectionA</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collectionB</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3]</span></div></code></pre><button id="clipButton-10" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-10"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>collect</code> method is primarily useful for converting <a href="https://laravel.com/docs/10.x/collections#lazy-collections">lazy collections</a> into standard <code>Collection</code> instances:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-11"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">make</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">()</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">yield</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">yield</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">yield</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">::</span><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 'Illuminate\Support\Collection'</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3]</span></div></code></pre><button id="clipButton-11" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-11"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">The <code>collect</code> method is especially useful when you have an instance of <code>Enumerable</code> and need a non-lazy collection instance. Since <code>collect()</code> is part of the <code>Enumerable</code> contract, you can safely use it to get a <code>Collection</code> instance.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-combine"><a href="https://laravel.com/docs/10.x/collections#method-combine"><code>combine()</code></a></h4>
<p>The <code>combine</code> method combines the values of the collection, as keys, with the values of another array or collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-12"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$combined</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">combine</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">George</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">29</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$combined</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['name' =&gt; 'George', 'age' =&gt; 29]</span></div></code></pre><button id="clipButton-12" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-12"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-concat"><a href="https://laravel.com/docs/10.x/collections#method-concat"><code>concat()</code></a></h4>
<p>The <code>concat</code> method appends the given <code>array</code> or collection's values onto the end of another collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-13"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$concatenated</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">concat</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jane Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">concat</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Johnny Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$concatenated</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe', 'Jane Doe', 'Johnny Doe']</span></div></code></pre><button id="clipButton-13" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-13"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>concat</code> method numerically reindexes keys for items concatenated onto the original collection. To maintain keys in associative collections, see the <a href="https://laravel.com/docs/10.x/collections#method-merge">merge</a> method.</p>
<p></p>
<h4 class="collection-method" id="method-contains"><a href="https://laravel.com/docs/10.x/collections#method-contains"><code>contains()</code></a></h4>
<p>The <code>contains</code> method determines whether the collection contains a given item. You may pass a closure to the <code>contains</code> method to determine if an element exists in the collection matching a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-14"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">contains</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-14" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-14"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may pass a string to the <code>contains</code> method to determine whether the collection contains a given item value:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-15"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">contains</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">contains</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">New York</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-15" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-15"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a key / value pair to the <code>contains</code> method, which will determine if the given pair exists in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-16"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">contains</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-16" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-16"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>contains</code> method uses "loose" comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the <a href="https://laravel.com/docs/10.x/collections#method-containsstrict"><code>containsStrict</code></a> method to filter using "strict" comparisons.</p>
<p>For the inverse of <code>contains</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-doesntcontain">doesntContain</a> method.</p>
<p></p>
<h4 class="collection-method" id="method-containsoneitem"><a href="https://laravel.com/docs/10.x/collections#method-containsoneitem"><code>containsOneItem()</code></a></h4>
<p>The <code>containsOneItem</code> method determines whether the collection contains a single item:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-17"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">containsOneItem</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">1</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">containsOneItem</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">1</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">2</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">containsOneItem</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-17" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-17"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-containsstrict"><a href="https://laravel.com/docs/10.x/collections#method-containsstrict"><code>containsStrict()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-contains"><code>contains</code></a> method; however, all values are compared using "strict" comparisons.</p>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">This method's behavior is modified when using <a href="https://laravel.com/docs/10.x/eloquent-collections#method-contains">Eloquent Collections</a>.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-count"><a href="https://laravel.com/docs/10.x/collections#method-count"><code>count()</code></a></h4>
<p>The <code>count</code> method returns the total number of items in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-18"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">count</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 4</span></div></code></pre><button id="clipButton-18" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-18"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-countBy"><a href="https://laravel.com/docs/10.x/collections#method-countBy"><code>countBy()</code></a></h4>
<p>The <code>countBy</code> method counts the occurrences of values in the collection. By default, the method counts the occurrences of every element, allowing you to count certain "types" of elements in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-19"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$counted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">countBy</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$counted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1 =&gt; 1, 2 =&gt; 3, 3 =&gt; 1]</span></div></code></pre><button id="clipButton-19" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-19"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You pass a closure to the <code>countBy</code> method to count all items by a custom value:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-20"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">alice@gmail.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">bob@yahoo.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">carlos@gmail.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$counted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">countBy</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">string</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$email</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">substr</span><span style="color: #BFC7D5;">(</span><span style="color: #89DDFF;">strrchr</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">email</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">"</span><span style="color: #C3E88D;">@</span><span style="color: #D9F5DD;">"</span><span style="color: #BFC7D5;">),</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$counted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['gmail.com' =&gt; 2, 'yahoo.com' =&gt; 1]</span></div></code></pre><button id="clipButton-20" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-20"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-crossjoin"><a href="https://laravel.com/docs/10.x/collections#method-crossjoin"><code>crossJoin()</code></a></h4>
<p>The <code>crossJoin</code> method cross joins the collection's values among the given arrays or collections, returning a Cartesian product with all possible permutations:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-21"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$matrix</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">crossJoin</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$matrix</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        [1, 'a'],</span></div><div class="line"><span style="color: #697098;">        [1, 'b'],</span></div><div class="line"><span style="color: #697098;">        [2, 'a'],</span></div><div class="line"><span style="color: #697098;">        [2, 'b'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$matrix</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">crossJoin</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">], [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">I</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">II</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$matrix</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        [1, 'a', 'I'],</span></div><div class="line"><span style="color: #697098;">        [1, 'a', 'II'],</span></div><div class="line"><span style="color: #697098;">        [1, 'b', 'I'],</span></div><div class="line"><span style="color: #697098;">        [1, 'b', 'II'],</span></div><div class="line"><span style="color: #697098;">        [2, 'a', 'I'],</span></div><div class="line"><span style="color: #697098;">        [2, 'a', 'II'],</span></div><div class="line"><span style="color: #697098;">        [2, 'b', 'I'],</span></div><div class="line"><span style="color: #697098;">        [2, 'b', 'II'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-21" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-21"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-dd"><a href="https://laravel.com/docs/10.x/collections#method-dd"><code>dd()</code></a></h4>
<p>The <code>dd</code> method dumps the collection's items and ends execution of the script:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-22"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jane Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">dd</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    Collection {</span></div><div class="line"><span style="color: #697098;">        #items: array:2 [</span></div><div class="line"><span style="color: #697098;">            0 =&gt; "John Doe"</span></div><div class="line"><span style="color: #697098;">            1 =&gt; "Jane Doe"</span></div><div class="line"><span style="color: #697098;">        ]</span></div><div class="line"><span style="color: #697098;">    }</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-22" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-22"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you do not want to stop executing the script, use the <a href="https://laravel.com/docs/10.x/collections#method-dump"><code>dump</code></a> method instead.</p>
<p></p>
<h4 class="collection-method" id="method-diff"><a href="https://laravel.com/docs/10.x/collections#method-diff"><code>diff()</code></a></h4>
<p>The <code>diff</code> method compares the collection against another collection or a plain PHP <code>array</code> based on its values. This method will return the values in the original collection that are not present in the given collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-23"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">diff</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 3, 5]</span></div></code></pre><button id="clipButton-23" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-23"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">This method's behavior is modified when using <a href="https://laravel.com/docs/10.x/eloquent-collections#method-diff">Eloquent Collections</a>.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-diffassoc"><a href="https://laravel.com/docs/10.x/collections#method-diffassoc"><code>diffAssoc()</code></a></h4>
<p>The <code>diffAssoc</code> method compares the collection against another collection or a plain PHP <code>array</code> based on its keys and values. This method will return the key / value pairs in the original collection that are not present in the given collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-24"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">orange</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">fruit</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">remain</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">diffAssoc</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">yellow</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">fruit</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">remain</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">used</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['color' =&gt; 'orange', 'remain' =&gt; 6]</span></div></code></pre><button id="clipButton-24" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-24"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-diffassocusing"><a href="https://laravel.com/docs/10.x/collections#method-diffassocusing"><code>diffAssocUsing()</code></a></h4>
<p>Unlike <code>diffAssoc</code>, <code>diffAssocUsing</code> accepts a user supplied callback function for the indices comparison:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-25"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">orange</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">fruit</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">remain</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">diffAssocUsing</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Color</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">yellow</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Type</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">fruit</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Remain</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">], </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">strnatcasecmp</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['color' =&gt; 'orange', 'remain' =&gt; 6]</span></div></code></pre><button id="clipButton-25" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-25"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The callback must be a comparison function that returns an integer less than, equal to, or greater than zero. For more information, refer to the PHP documentation on <a href="https://www.php.net/array_diff_uassoc#refsect1-function.array-diff-uassoc-parameters"><code>array_diff_uassoc</code></a>, which is the PHP function that the <code>diffAssocUsing</code> method utilizes internally.</p>
<p></p>
<h4 class="collection-method" id="method-diffkeys"><a href="https://laravel.com/docs/10.x/collections#method-diffkeys"><code>diffKeys()</code></a></h4>
<p>The <code>diffKeys</code> method compares the collection against another collection or a plain PHP <code>array</code> based on its keys. This method will return the key / value pairs in the original collection that are not present in the given collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-26"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">one</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">two</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">three</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">30</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">four</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">40</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">five</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">50</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">diffKeys</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">two</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">four</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">six</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">eight</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$diff</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['one' =&gt; 10, 'three' =&gt; 30, 'five' =&gt; 50]</span></div></code></pre><button id="clipButton-26" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-26"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-doesntcontain"><a href="https://laravel.com/docs/10.x/collections#method-doesntcontain"><code>doesntContain()</code></a></h4>
<p>The <code>doesntContain</code> method determines whether the collection does not contain a given item. You may pass a closure to the <code>doesntContain</code> method to determine if an element does not exist in the collection matching a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-27"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">doesntContain</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&lt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-27" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-27"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may pass a string to the <code>doesntContain</code> method to determine whether the collection does not contain a given item value:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-28"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">doesntContain</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Table</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">doesntContain</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-28" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-28"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a key / value pair to the <code>doesntContain</code> method, which will determine if the given pair does not exist in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-29"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">doesntContain</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div></code></pre><button id="clipButton-29" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-29"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>doesntContain</code> method uses "loose" comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value.</p>
<p></p>
<h4 class="collection-method" id="method-dot"><a href="https://laravel.com/docs/10.x/collections#method-dot"><code>dot()</code></a></h4>
<p>The <code>dot</code> method flattens a multi-dimensional collection into a single level collection that uses "dot" notation to indicate depth:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-30"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">products</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">desk</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">]]]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flattened</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">dot</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flattened</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['products.desk.price' =&gt; 100]</span></div></code></pre><button id="clipButton-30" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-30"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-dump"><a href="https://laravel.com/docs/10.x/collections#method-dump"><code>dump()</code></a></h4>
<p>The <code>dump</code> method dumps the collection's items:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-31"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jane Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">dump</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    Collection {</span></div><div class="line"><span style="color: #697098;">        #items: array:2 [</span></div><div class="line"><span style="color: #697098;">            0 =&gt; "John Doe"</span></div><div class="line"><span style="color: #697098;">            1 =&gt; "Jane Doe"</span></div><div class="line"><span style="color: #697098;">        ]</span></div><div class="line"><span style="color: #697098;">    }</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-31" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-31"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you want to stop executing the script after dumping the collection, use the <a href="https://laravel.com/docs/10.x/collections#method-dd"><code>dd</code></a> method instead.</p>
<p></p>
<h4 class="collection-method" id="method-duplicates"><a href="https://laravel.com/docs/10.x/collections#method-duplicates"><code>duplicates()</code></a></h4>
<p>The <code>duplicates</code> method retrieves and returns duplicate values from the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-32"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">c</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">duplicates</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [2 =&gt; 'a', 4 =&gt; 'b']</span></div></code></pre><button id="clipButton-32" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-32"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If the collection contains arrays or objects, you can pass the key of the attributes that you wish to check for duplicate values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-33"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$employees</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">abigail@example.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">position</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Developer</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">james@example.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">position</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Designer</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">victoria@example.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">position</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Developer</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$employees</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">duplicates</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">position</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [2 =&gt; 'Developer']</span></div></code></pre><button id="clipButton-33" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-33"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-duplicatesstrict"><a href="https://laravel.com/docs/10.x/collections#method-duplicatesstrict"><code>duplicatesStrict()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-duplicates"><code>duplicates</code></a> method; however, all values are compared using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-each"><a href="https://laravel.com/docs/10.x/collections#method-each"><code>each()</code></a></h4>
<p>The <code>each</code> method iterates over the items in the collection and passes each item to a closure:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-34"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">each</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #697098;">//</span><span style="color: #697098;"> ...</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-34" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-34"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you would like to stop iterating through the items, you may return <code>false</code> from your closure:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-35"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">each</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">if</span><span style="color: #BFC7D5;"> (</span><span style="color: #697098;">/*</span><span style="color: #697098;"> condition </span><span style="color: #697098;">*/</span><span style="color: #BFC7D5;">) {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">    }</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-35" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-35"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-eachspread"><a href="https://laravel.com/docs/10.x/collections#method-eachspread"><code>eachSpread()</code></a></h4>
<p>The <code>eachSpread</code> method iterates over the collection's items, passing each nested item value into the given callback:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-36"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">35</span><span style="color: #BFC7D5;">],</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jane Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">33</span><span style="color: #BFC7D5;">]]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">eachSpread</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">string</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$name</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$age</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #697098;">//</span><span style="color: #697098;"> ...</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-36" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-36"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may stop iterating through the items by returning <code>false</code> from the callback:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-37"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">eachSpread</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">string</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$name</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$age</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-37" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-37"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-ensure"><a href="https://laravel.com/docs/10.x/collections#method-ensure"><code>ensure()</code></a></h4>
<p>The <code>ensure</code> method may be used to verify that all elements of a collection are of a given type. Otherwise, an <code>UnexpectedValueException</code> will be thrown:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-38"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">ensure</span><span style="color: #BFC7D5;">(</span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;">);</span></div></code></pre><button id="clipButton-38" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-38"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Primitive types such as <code>string</code>, <code>int</code>, <code>float</code>, <code>bool</code>, and <code>array</code> may also be specified:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-39"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">ensure</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">int</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div></code></pre><button id="clipButton-39" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-39"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">
The <code>ensure</code> method does not guarantee that elements of different types will not be added to the collection at a later time.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-every"><a href="https://laravel.com/docs/10.x/collections#method-every"><code>every()</code></a></h4>
<p>The <code>every</code> method may be used to verify that all elements of a collection pass a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-40"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">every</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-40" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-40"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If the collection is empty, the <code>every</code> method will return true:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-41"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">every</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div></code></pre><button id="clipButton-41" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-41"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-except"><a href="https://laravel.com/docs/10.x/collections#method-except"><code>except()</code></a></h4>
<p>The <code>except</code> method returns all items in the collection except for those with the specified keys:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-42"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">discount</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> false</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">except</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">discount</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product_id' =&gt; 1]</span></div></code></pre><button id="clipButton-42" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-42"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>except</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-only">only</a> method.</p>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">This method's behavior is modified when using <a href="https://laravel.com/docs/10.x/eloquent-collections#method-except">Eloquent Collections</a>.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-filter"><a href="https://laravel.com/docs/10.x/collections#method-filter"><code>filter()</code></a></h4>
<p>The <code>filter</code> method filters the collection using the given callback, keeping only those items that pass a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-43"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">filter</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 4]</span></div></code></pre><button id="clipButton-43" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-43"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If no callback is supplied, all entries of the collection that are equivalent to <code>false</code> will be removed:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-44"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> null</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> false</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">''</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[]]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">filter</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3]</span></div></code></pre><button id="clipButton-44" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-44"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>filter</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-reject">reject</a> method.</p>
<p></p>
<h4 class="collection-method" id="method-first"><a href="https://laravel.com/docs/10.x/collections#method-first"><code>first()</code></a></h4>
<p>The <code>first</code> method returns the first element in the collection that passes a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-45"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">first</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 3</span></div></code></pre><button id="clipButton-45" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-45"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also call the <code>first</code> method with no arguments to get the first element in the collection. If the collection is empty, <code>null</code> is returned:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-46"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">first</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div></code></pre><button id="clipButton-46" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-46"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-first-or-fail"><a href="https://laravel.com/docs/10.x/collections#method-first-or-fail"><code>firstOrFail()</code></a></h4>
<p>The <code>firstOrFail</code> method is identical to the <code>first</code> method; however, if no result is found, an <code>Illuminate\Support\ItemNotFoundException</code> exception will be thrown:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-47"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">firstOrFail</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> Throws ItemNotFoundException...</span></div></code></pre><button id="clipButton-47" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-47"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also call the <code>firstOrFail</code> method with no arguments to get the first element in the collection. If the collection is empty, an <code>Illuminate\Support\ItemNotFoundException</code> exception will be thrown:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-48"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">firstOrFail</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> Throws ItemNotFoundException...</span></div></code></pre><button id="clipButton-48" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-48"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-first-where"><a href="https://laravel.com/docs/10.x/collections#method-first-where"><code>firstWhere()</code></a></h4>
<p>The <code>firstWhere</code> method returns the first element in the collection with the given key / value pair:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-49"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Regena</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> null</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Linda</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">14</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Diego</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">23</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Linda</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">84</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">firstWhere</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Linda</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['name' =&gt; 'Linda', 'age' =&gt; 14]</span></div></code></pre><button id="clipButton-49" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-49"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also call the <code>firstWhere</code> method with a comparison operator:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-50"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">firstWhere</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">&gt;=</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">18</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['name' =&gt; 'Diego', 'age' =&gt; 23]</span></div></code></pre><button id="clipButton-50" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-50"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Like the <a href="https://laravel.com/docs/10.x/collections#method-where">where</a> method, you may pass one argument to the <code>firstWhere</code> method. In this scenario, the <code>firstWhere</code> method will return the first item where the given item key's value is "truthy":</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-51"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">firstWhere</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['name' =&gt; 'Linda', 'age' =&gt; 14]</span></div></code></pre><button id="clipButton-51" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-51"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-flatmap"><a href="https://laravel.com/docs/10.x/collections#method-flatmap"><code>flatMap()</code></a></h4>
<p>The <code>flatMap</code> method iterates through the collection and passes each value to the given closure. The closure is free to modify the item and return it, thus forming a new collection of modified items. Then, the array is flattened by one level:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-52"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sally</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">school</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Arkansas</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">28</span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flattened</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">flatMap</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$values</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">array_map</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">strtoupper</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">$</span><span style="color: #BEC5D4;">values</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flattened</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['name' =&gt; 'SALLY', 'school' =&gt; 'ARKANSAS', 'age' =&gt; '28'];</span></div></code></pre><button id="clipButton-52" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-52"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-flatten"><a href="https://laravel.com/docs/10.x/collections#method-flatten"><code>flatten()</code></a></h4>
<p>The <code>flatten</code> method flattens a multi-dimensional collection into a single dimension:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-53"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">languages</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">php</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">javascript</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flattened</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">flatten</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flattened</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['taylor', 'php', 'javascript'];</span></div></code></pre><button id="clipButton-53" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-53"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If necessary, you may pass the <code>flatten</code> method a "depth" argument:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-54"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Apple</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">            </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">iPhone 6S</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">            </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Apple</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Samsung</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">            </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Galaxy S7</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">            </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Samsung</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$products</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">flatten</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$products</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'iPhone 6S', 'brand' =&gt; 'Apple'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Galaxy S7', 'brand' =&gt; 'Samsung'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-54" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-54"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>In this example, calling <code>flatten</code> without providing the depth would have also flattened the nested arrays, resulting in <code>['iPhone 6S', 'Apple', 'Galaxy S7', 'Samsung']</code>. Providing a depth allows you to specify the number of levels nested arrays will be flattened.</p>
<p></p>
<h4 class="collection-method" id="method-flip"><a href="https://laravel.com/docs/10.x/collections#method-flip"><code>flip()</code></a></h4>
<p>The <code>flip</code> method swaps the collection's keys with their corresponding values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-55"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">framework</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">laravel</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flipped</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">flip</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$flipped</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['taylor' =&gt; 'name', 'laravel' =&gt; 'framework']</span></div></code></pre><button id="clipButton-55" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-55"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-forget"><a href="https://laravel.com/docs/10.x/collections#method-forget"><code>forget()</code></a></h4>
<p>The <code>forget</code> method removes an item from the collection by its key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-56"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">framework</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">laravel</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">forget</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['framework' =&gt; 'laravel']</span></div></code></pre><button id="clipButton-56" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-56"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">Unlike most other collection methods, <code>forget</code> does not return a new modified collection; it modifies the collection it is called on.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-forpage"><a href="https://laravel.com/docs/10.x/collections#method-forpage"><code>forPage()</code></a></h4>
<p>The <code>forPage</code> method returns a new collection containing the items that would be present on a given page number. The method accepts the page number as its first argument and the number of items to show per page as its second argument:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-57"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">forPage</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [4, 5, 6]</span></div></code></pre><button id="clipButton-57" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-57"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-get"><a href="https://laravel.com/docs/10.x/collections#method-get"><code>get()</code></a></h4>
<p>The <code>get</code> method returns the item at a given key. If the key does not exist, <code>null</code> is returned:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-58"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">framework</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">laravel</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> taylor</span></div></code></pre><button id="clipButton-58" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-58"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may optionally pass a default value as the second argument:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-59"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">framework</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">laravel</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">34</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 34</span></div></code></pre><button id="clipButton-59" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-59"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may even pass a callback as the method's default value. The result of the callback will be returned if the specified key does not exist:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-60"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">()</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor@example.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> taylor@example.com</span></div></code></pre><button id="clipButton-60" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-60"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-groupby"><a href="https://laravel.com/docs/10.x/collections#method-groupby"><code>groupBy()</code></a></h4>
<p>The <code>groupBy</code> method groups the collection's items by a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-61"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account-x10</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account-x10</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account-x11</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">groupBy</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'account-x10' =&gt; [</span></div><div class="line"><span style="color: #697098;">            ['account_id' =&gt; 'account-x10', 'product' =&gt; 'Chair'],</span></div><div class="line"><span style="color: #697098;">            ['account_id' =&gt; 'account-x10', 'product' =&gt; 'Bookcase'],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">        'account-x11' =&gt; [</span></div><div class="line"><span style="color: #697098;">            ['account_id' =&gt; 'account-x11', 'product' =&gt; 'Desk'],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-61" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-61"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Instead of passing a string <code>key</code>, you may pass a callback. The callback should return the value you wish to key the group by:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-62"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">groupBy</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">substr</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">-</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'x10' =&gt; [</span></div><div class="line"><span style="color: #697098;">            ['account_id' =&gt; 'account-x10', 'product' =&gt; 'Chair'],</span></div><div class="line"><span style="color: #697098;">            ['account_id' =&gt; 'account-x10', 'product' =&gt; 'Bookcase'],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">        'x11' =&gt; [</span></div><div class="line"><span style="color: #697098;">            ['account_id' =&gt; 'account-x11', 'product' =&gt; 'Desk'],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-62" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-62"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Multiple grouping criteria may be passed as an array. Each array element will be applied to the corresponding level within a multi-dimensional array:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-63"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$data</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">new</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">user</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">skill</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">roles</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Role_1</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Role_3</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">user</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">skill</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">roles</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Role_1</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Role_2</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #F78C6C;">30</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">user</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">skill</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">roles</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Role_1</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #F78C6C;">40</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">user</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">skill</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">roles</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Role_2</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$result</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$data</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">groupBy</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">skill</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">roles</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">];</span></div><div class="line"><span style="color: #BFC7D5;">}], preserveKeys: </span><span style="color: #82AAFF;">true</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">[</span></div><div class="line"><span style="color: #697098;">    1 =&gt; [</span></div><div class="line"><span style="color: #697098;">        'Role_1' =&gt; [</span></div><div class="line"><span style="color: #697098;">            10 =&gt; ['user' =&gt; 1, 'skill' =&gt; 1, 'roles' =&gt; ['Role_1', 'Role_3']],</span></div><div class="line"><span style="color: #697098;">            20 =&gt; ['user' =&gt; 2, 'skill' =&gt; 1, 'roles' =&gt; ['Role_1', 'Role_2']],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">        'Role_2' =&gt; [</span></div><div class="line"><span style="color: #697098;">            20 =&gt; ['user' =&gt; 2, 'skill' =&gt; 1, 'roles' =&gt; ['Role_1', 'Role_2']],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">        'Role_3' =&gt; [</span></div><div class="line"><span style="color: #697098;">            10 =&gt; ['user' =&gt; 1, 'skill' =&gt; 1, 'roles' =&gt; ['Role_1', 'Role_3']],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">    ],</span></div><div class="line"><span style="color: #697098;">    2 =&gt; [</span></div><div class="line"><span style="color: #697098;">        'Role_1' =&gt; [</span></div><div class="line"><span style="color: #697098;">            30 =&gt; ['user' =&gt; 3, 'skill' =&gt; 2, 'roles' =&gt; ['Role_1']],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">        'Role_2' =&gt; [</span></div><div class="line"><span style="color: #697098;">            40 =&gt; ['user' =&gt; 4, 'skill' =&gt; 2, 'roles' =&gt; ['Role_2']],</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">    ],</span></div><div class="line"><span style="color: #697098;">];</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-63" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-63"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-has"><a href="https://laravel.com/docs/10.x/collections#method-has"><code>has()</code></a></h4>
<p>The <code>has</code> method determines if a given key exists in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-64"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">amount</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">has</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">has</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">amount</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">has</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">amount</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-64" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-64"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-hasany"><a href="https://laravel.com/docs/10.x/collections#method-hasany"><code>hasAny()</code></a></h4>
<p>The <code>hasAny</code> method determines whether any of the given keys exist in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-65"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">amount</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">hasAny</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">hasAny</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-65" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-65"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-implode"><a href="https://laravel.com/docs/10.x/collections#method-implode"><code>implode()</code></a></h4>
<p>The <code>implode</code> method joins items in a collection. Its arguments depend on the type of items in the collection. If the collection contains arrays or objects, you should pass the key of the attributes you wish to join, and the "glue" string you wish to place between the values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-66"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">account_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">implode</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> Desk, Chair</span></div></code></pre><button id="clipButton-66" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-66"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If the collection contains simple strings or numeric values, you should pass the "glue" as the only argument to the method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-67"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">implode</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">-</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> '1-2-3-4-5'</span></div></code></pre><button id="clipButton-67" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-67"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may pass a closure to the <code>implode</code> method if you would like to format the values being imploded:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-68"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">implode</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">strtoupper</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line"><span style="color: #BFC7D5;">}, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> DESK, CHAIR</span></div></code></pre><button id="clipButton-68" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-68"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-intersect"><a href="https://laravel.com/docs/10.x/collections#method-intersect"><code>intersect()</code></a></h4>
<p>The <code>intersect</code> method removes any values from the original collection that are not present in the given <code>array</code> or collection. The resulting collection will preserve the original collection's keys:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-69"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sofa</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$intersect</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">intersect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$intersect</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [0 =&gt; 'Desk', 2 =&gt; 'Chair']</span></div></code></pre><button id="clipButton-69" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-69"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">This method's behavior is modified when using <a href="https://laravel.com/docs/10.x/eloquent-collections#method-intersect">Eloquent Collections</a>.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-intersectAssoc"><a href="https://laravel.com/docs/10.x/collections#method-intersectAssoc"><code>intersectAssoc()</code></a></h4>
<p>The <code>intersectAssoc</code> method compares the original collection against another collection or <code>array</code>, returning the key / value pairs that are present in all of the given collections:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-70"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">red</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">size</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">M</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">material</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">cotton</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$intersect</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">intersectAssoc</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">blue</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">size</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">M</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">material</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">polyester</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$intersect</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['size' =&gt; 'M']</span></div></code></pre><button id="clipButton-70" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-70"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-intersectbykeys"><a href="https://laravel.com/docs/10.x/collections#method-intersectbykeys"><code>intersectByKeys()</code></a></h4>
<p>The <code>intersectByKeys</code> method removes any keys and their corresponding values from the original collection that are not present in the given <code>array</code> or collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-71"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">serial</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">UX301</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">screen</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">year</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2009</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$intersect</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">intersectByKeys</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">reference</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">UX404</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">tab</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">year</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2011</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$intersect</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['type' =&gt; 'screen', 'year' =&gt; 2009]</span></div></code></pre><button id="clipButton-71" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-71"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-isempty"><a href="https://laravel.com/docs/10.x/collections#method-isempty"><code>isEmpty()</code></a></h4>
<p>The <code>isEmpty</code> method returns <code>true</code> if the collection is empty; otherwise, <code>false</code> is returned:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-72"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">isEmpty</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> true</span></div></code></pre><button id="clipButton-72" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-72"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-isnotempty"><a href="https://laravel.com/docs/10.x/collections#method-isnotempty"><code>isNotEmpty()</code></a></h4>
<p>The <code>isNotEmpty</code> method returns <code>true</code> if the collection is not empty; otherwise, <code>false</code> is returned:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-73"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">isNotEmpty</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-73" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-73"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-join"><a href="https://laravel.com/docs/10.x/collections#method-join"><code>join()</code></a></h4>
<p>The <code>join</code> method joins the collection's values with a string. Using this method's second argument, you may also specify how the final element should be appended to the string:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-74"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">c</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">join</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">); </span><span style="color: #697098;">//</span><span style="color: #697098;"> 'a, b, c'</span></div><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">c</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">join</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, and </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">); </span><span style="color: #697098;">//</span><span style="color: #697098;"> 'a, b, and c'</span></div><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">join</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;"> and </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">); </span><span style="color: #697098;">//</span><span style="color: #697098;"> 'a and b'</span></div><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">join</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;"> and </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">); </span><span style="color: #697098;">//</span><span style="color: #697098;"> 'a'</span></div><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">join</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;"> and </span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">); </span><span style="color: #697098;">//</span><span style="color: #697098;"> ''</span></div></code></pre><button id="clipButton-74" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-74"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-keyby"><a href="https://laravel.com/docs/10.x/collections#method-keyby"><code>keyBy()</code></a></h4>
<p>The <code>keyBy</code> method keys the collection by the given key. If multiple items have the same key, only the last one will appear in the new collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-75"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-100</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-200</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keyed</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">keyBy</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keyed</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'prod-100' =&gt; ['product_id' =&gt; 'prod-100', 'name' =&gt; 'Desk'],</span></div><div class="line"><span style="color: #697098;">        'prod-200' =&gt; ['product_id' =&gt; 'prod-200', 'name' =&gt; 'Chair'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-75" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-75"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a callback to the method. The callback should return the value to key the collection by:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-76"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$keyed</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">keyBy</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">strtoupper</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keyed</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'PROD-100' =&gt; ['product_id' =&gt; 'prod-100', 'name' =&gt; 'Desk'],</span></div><div class="line"><span style="color: #697098;">        'PROD-200' =&gt; ['product_id' =&gt; 'prod-200', 'name' =&gt; 'Chair'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-76" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-76"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-keys"><a href="https://laravel.com/docs/10.x/collections#method-keys"><code>keys()</code></a></h4>
<p>The <code>keys</code> method returns all of the collection's keys:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-77"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-100</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-100</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-200</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-200</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keys</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">keys</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keys</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['prod-100', 'prod-200']</span></div></code></pre><button id="clipButton-77" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-77"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-last"><a href="https://laravel.com/docs/10.x/collections#method-last"><code>last()</code></a></h4>
<p>The <code>last</code> method returns the last element in the collection that passes a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-78"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">last</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&lt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 2</span></div></code></pre><button id="clipButton-78" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-78"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also call the <code>last</code> method with no arguments to get the last element in the collection. If the collection is empty, <code>null</code> is returned:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-79"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">last</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 4</span></div></code></pre><button id="clipButton-79" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-79"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-lazy"><a href="https://laravel.com/docs/10.x/collections#method-lazy"><code>lazy()</code></a></h4>
<p>The <code>lazy</code> method returns a new <a href="https://laravel.com/docs/10.x/collections#lazy-collections"><code>LazyCollection</code></a> instance from the underlying array of items:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-80"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">lazy</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #89DDFF;">::</span><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> Illuminate\Support\LazyCollection</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4]</span></div></code></pre><button id="clipButton-80" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-80"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>This is especially useful when you need to perform transformations on a huge <code>Collection</code> that contains many items:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-81"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$count</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$hugeCollection</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">lazy</span><span style="color: #BFC7D5;">()</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">country</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">FR</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">balance</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">&gt;</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">100</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">count</span><span style="color: #BFC7D5;">();</span></div></code></pre><button id="clipButton-81" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-81"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>By converting the collection to a <code>LazyCollection</code>, we avoid having to allocate a ton of additional memory. Though the original collection still keeps <em>its</em> values in memory, the subsequent filters will not. Therefore, virtually no additional memory will be allocated when filtering the collection's results.</p>
<p></p>
<h4 class="collection-method" id="method-macro"><a href="https://laravel.com/docs/10.x/collections#method-macro"><code>macro()</code></a></h4>
<p>The static <code>macro</code> method allows you to add methods to the <code>Collection</code> class at run time. Refer to the documentation on <a href="https://laravel.com/docs/10.x/collections#extending-collections">extending collections</a> for more information.</p>
<p></p>
<h4 class="collection-method" id="method-make"><a href="https://laravel.com/docs/10.x/collections#method-make"><code>make()</code></a></h4>
<p>The static <code>make</code> method creates a new collection instance. See the <a href="https://laravel.com/docs/10.x/collections#creating-collections">Creating Collections</a> section.</p>
<p></p>
<h4 class="collection-method" id="method-map"><a href="https://laravel.com/docs/10.x/collections#method-map"><code>map()</code></a></h4>
<p>The <code>map</code> method iterates through the collection and passes each value to the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-82"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$multiplied</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">map</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">*</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$multiplied</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [2, 4, 6, 8, 10]</span></div></code></pre><button id="clipButton-82" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-82"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">Like most other collection methods, <code>map</code> returns a new collection instance; it does not modify the collection it is called on. If you want to transform the original collection, use the <a href="https://laravel.com/docs/10.x/collections#method-transform"><code>transform</code></a> method.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-mapinto"><a href="https://laravel.com/docs/10.x/collections#method-mapinto"><code>mapInto()</code></a></h4>
<p>The <code>mapInto()</code> method iterates over the collection, creating a new instance of the given class by passing the value into the constructor:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-83"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB6B;">Currency</span></div><div class="line"><span style="color: #BFC7D5;">{</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #697098;">/**</span></div><div class="line"><span style="color: #697098;">     * Create a new currency instance.</span></div><div class="line"><span style="color: #697098;">     </span><span style="color: #697098;">*/</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">__construct</span><span style="color: #D9F5DD;">(</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">public</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">string</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$code</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {}</span></div><div class="line"><span style="color: #BFC7D5;">}</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">USD</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">EUR</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">GBP</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$currencies</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mapInto</span><span style="color: #BFC7D5;">(</span><span style="color: #FFCB8B;">Currency</span><span style="color: #89DDFF;">::</span><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$currencies</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [Currency('USD'), Currency('EUR'), Currency('GBP')]</span></div></code></pre><button id="clipButton-83" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-83"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-mapspread"><a href="https://laravel.com/docs/10.x/collections#method-mapspread"><code>mapSpread()</code></a></h4>
<p>The <code>mapSpread</code> method iterates over the collection's items, passing each nested item value into the given closure. The closure is free to modify the item and return it, thus forming a new collection of modified items:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-84"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">chunk</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sequence</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$chunks</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mapSpread</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$even</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$odd</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$even</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">+</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$odd</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sequence</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 5, 9, 13, 17]</span></div></code></pre><button id="clipButton-84" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-84"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-maptogroups"><a href="https://laravel.com/docs/10.x/collections#method-maptogroups"><code>mapToGroups()</code></a></h4>
<p>The <code>mapToGroups</code> method groups the collection's items by the given closure. The closure should return an associative array containing a single key / value pair, thus forming a new collection of grouped values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-85"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">department</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sales</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jane Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">department</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sales</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Johnny Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">department</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Marketing</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mapToGroups</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> [</span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">department</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">] </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]];</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'Sales' =&gt; ['John Doe', 'Jane Doe'],</span></div><div class="line"><span style="color: #697098;">        'Marketing' =&gt; ['Johnny Doe'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$grouped</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sales</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe', 'Jane Doe']</span></div></code></pre><button id="clipButton-85" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-85"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-mapwithkeys"><a href="https://laravel.com/docs/10.x/collections#method-mapwithkeys"><code>mapWithKeys()</code></a></h4>
<p>The <code>mapWithKeys</code> method iterates through the collection and passes each value to the given callback. The callback should return an associative array containing a single key / value pair:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-86"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">department</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sales</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">john@example.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jane</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">department</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Marketing</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">jane@example.com</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keyed</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mapWithKeys</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> [</span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">email</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">] </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]];</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$keyed</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'john@example.com' =&gt; 'John',</span></div><div class="line"><span style="color: #697098;">        'jane@example.com' =&gt; 'Jane',</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-86" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-86"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-max"><a href="https://laravel.com/docs/10.x/collections#method-max"><code>max()</code></a></h4>
<p>The <code>max</code> method returns the maximum value of a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-87"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$max</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">max</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 20</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$max</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">max</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 5</span></div></code></pre><button id="clipButton-87" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-87"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-median"><a href="https://laravel.com/docs/10.x/collections#method-median"><code>median()</code></a></h4>
<p>The <code>median</code> method returns the <a href="https://en.wikipedia.org/wiki/Median">median value</a> of a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-88"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$median</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">40</span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">median</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 15</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$median</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">median</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1.5</span></div></code></pre><button id="clipButton-88" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-88"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-merge"><a href="https://laravel.com/docs/10.x/collections#method-merge"><code>merge()</code></a></h4>
<p>The <code>merge</code> method merges the given array or collection with the original collection. If a string key in the given items matches a string key in the original collection, the given item's value will overwrite the value in the original collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-89"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$merged</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">merge</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">discount</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$merged</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product_id' =&gt; 1, 'price' =&gt; 200, 'discount' =&gt; false]</span></div></code></pre><button id="clipButton-89" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-89"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If the given item's keys are numeric, the values will be appended to the end of the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-90"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$merged</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">merge</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Door</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$merged</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Desk', 'Chair', 'Bookcase', 'Door']</span></div></code></pre><button id="clipButton-90" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-90"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-mergerecursive"><a href="https://laravel.com/docs/10.x/collections#method-mergerecursive"><code>mergeRecursive()</code></a></h4>
<p>The <code>mergeRecursive</code> method merges the given array or collection recursively with the original collection. If a string key in the given items matches a string key in the original collection, then the values for these keys are merged together into an array, and this is done recursively:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-91"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$merged</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mergeRecursive</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">discount</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">false</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$merged</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product_id' =&gt; [1, 2], 'price' =&gt; [100, 200], 'discount' =&gt; false]</span></div></code></pre><button id="clipButton-91" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-91"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-min"><a href="https://laravel.com/docs/10.x/collections#method-min"><code>min()</code></a></h4>
<p>The <code>min</code> method returns the minimum value of a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-92"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$min</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">]])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">min</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 10</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$min</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">min</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div></code></pre><button id="clipButton-92" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-92"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-mode"><a href="https://laravel.com/docs/10.x/collections#method-mode"><code>mode()</code></a></h4>
<p>The <code>mode</code> method returns the <a href="https://en.wikipedia.org/wiki/Mode_(statistics)">mode value</a> of a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-93"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$mode</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">40</span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mode</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">foo</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [10]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$mode</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mode</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$mode</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">mode</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-93" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-93"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-nth"><a href="https://laravel.com/docs/10.x/collections#method-nth"><code>nth()</code></a></h4>
<p>The <code>nth</code> method creates a new collection consisting of every n-th element:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-94"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">c</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">d</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">e</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">f</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">nth</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['a', 'e']</span></div></code></pre><button id="clipButton-94" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-94"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may optionally pass a starting offset as the second argument:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-95"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">nth</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['b', 'f']</span></div></code></pre><button id="clipButton-95" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-95"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-only"><a href="https://laravel.com/docs/10.x/collections#method-only"><code>only()</code></a></h4>
<p>The <code>only</code> method returns the items in the collection with the specified keys:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-96"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">discount</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> false</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">only</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product_id' =&gt; 1, 'name' =&gt; 'Desk']</span></div></code></pre><button id="clipButton-96" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-96"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>only</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-except">except</a> method.</p>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">This method's behavior is modified when using <a href="https://laravel.com/docs/10.x/eloquent-collections#method-only">Eloquent Collections</a>.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-pad"><a href="https://laravel.com/docs/10.x/collections#method-pad"><code>pad()</code></a></h4>
<p>The <code>pad</code> method will fill the array with the given value until the array reaches the specified size. This method behaves like the <a href="https://secure.php.net/manual/en/function.array-pad.php">array_pad</a> PHP function.</p>
<p>To pad to the left, you should specify a negative size. No padding will take place if the absolute value of the given size is less than or equal to the length of the array:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-97"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">A</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">B</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">C</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pad</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['A', 'B', 'C', 0, 0]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pad</span><span style="color: #BFC7D5;">(</span><span style="color: #89DDFF;">-</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [0, 0, 'A', 'B', 'C']</span></div></code></pre><button id="clipButton-97" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-97"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-partition"><a href="https://laravel.com/docs/10.x/collections#method-partition"><code>partition()</code></a></h4>
<p>The <code>partition</code> method may be combined with PHP array destructuring to separate elements that pass a given truth test from those that do not:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-98"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BFC7D5;">[</span><span style="color: #BEC5D4;">$underThree</span><span style="color: #BFC7D5;">, </span><span style="color: #BEC5D4;">$equalOrAboveThree</span><span style="color: #BFC7D5;">] </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">partition</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$i</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$i</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&lt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$underThree</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$equalOrAboveThree</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 4, 5, 6]</span></div></code></pre><button id="clipButton-98" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-98"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-percentage"><a href="https://laravel.com/docs/10.x/collections#method-percentage"><code>percentage()</code></a></h4>
<p>The <code>percentage</code> method may be used to quickly determine the percentage of items in the collection that pass a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-99"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$percentage</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">percentage</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">fn</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #BEC5D4;">$value</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> =&gt; </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">===</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 33.33</span></div></code></pre><button id="clipButton-99" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-99"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>By default, the percentage will be rounded to two decimal places. However, you may customize this behavior by providing a second argument to the method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-100"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$percentage</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">percentage</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">fn</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #BEC5D4;">$value</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> =&gt; </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">===</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">, precision: </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 33.333</span></div></code></pre><button id="clipButton-100" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-100"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-pipe"><a href="https://laravel.com/docs/10.x/collections#method-pipe"><code>pipe()</code></a></h4>
<p>The <code>pipe</code> method passes the collection to the given closure and returns the result of the executed closure:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-101"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$piped</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pipe</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sum</span><span style="color: #BFC7D5;">();</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 6</span></div></code></pre><button id="clipButton-101" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-101"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-pipeinto"><a href="https://laravel.com/docs/10.x/collections#method-pipeinto"><code>pipeInto()</code></a></h4>
<p>The <code>pipeInto</code> method creates a new instance of the given class and passes the collection into the constructor:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-102"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB6B;">ResourceCollection</span></div><div class="line"><span style="color: #BFC7D5;">{</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #697098;">/**</span></div><div class="line"><span style="color: #697098;">     * Create a new ResourceCollection instance.</span></div><div class="line"><span style="color: #697098;">     </span><span style="color: #697098;">*/</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">public</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">__construct</span><span style="color: #D9F5DD;">(</span></div><div class="line"><span style="color: #BFC7D5;">      </span><span style="color: #C792EA;">public</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {}</span></div><div class="line"><span style="color: #BFC7D5;">}</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$resource</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pipeInto</span><span style="color: #BFC7D5;">(</span><span style="color: #FFCB8B;">ResourceCollection</span><span style="color: #89DDFF;">::</span><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$resource</span><span style="color: #89DDFF;">-&gt;collection-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3]</span></div></code></pre><button id="clipButton-102" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-102"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-pipethrough"><a href="https://laravel.com/docs/10.x/collections#method-pipethrough"><code>pipeThrough()</code></a></h4>
<p>The <code>pipeThrough</code> method passes the collection to the given array of closures and returns the result of the executed closures:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-103"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> Illuminate\Support\</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$result</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pipeThrough</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">merge</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line"><span style="color: #BFC7D5;">    },</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sum</span><span style="color: #BFC7D5;">();</span></div><div class="line"><span style="color: #BFC7D5;">    },</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 15</span></div></code></pre><button id="clipButton-103" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-103"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-pluck"><a href="https://laravel.com/docs/10.x/collections#method-pluck"><code>pluck()</code></a></h4>
<p>The <code>pluck</code> method retrieves all of the values for a given key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-104"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-100</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-200</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pluck</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Desk', 'Chair']</span></div></code></pre><button id="clipButton-104" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-104"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also specify how you wish the resulting collection to be keyed:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-105"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pluck</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['prod-100' =&gt; 'Desk', 'prod-200' =&gt; 'Chair']</span></div></code></pre><button id="clipButton-105" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-105"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>pluck</code> method also supports retrieving nested values using "dot" notation:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-106"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Laracon</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">speakers</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">            </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">first_day</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Rosa</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Judith</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">VueConf</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">speakers</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">            </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">first_day</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Joey</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pluck</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">speakers.first_day</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [['Rosa', 'Judith'], ['Abigail', 'Joey']]</span></div></code></pre><button id="clipButton-106" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-106"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If duplicate keys exist, the last matching element will be inserted into the plucked collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-107"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Tesla</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;">  </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">red</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Pagani</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">white</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Tesla</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;">  </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">black</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Pagani</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">orange</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pluck</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">color</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$plucked</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Tesla' =&gt; 'black', 'Pagani' =&gt; 'orange']</span></div></code></pre><button id="clipButton-107" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-107"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-pop"><a href="https://laravel.com/docs/10.x/collections#method-pop"><code>pop()</code></a></h4>
<p>The <code>pop</code> method removes and returns the last item from the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-108"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pop</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 5</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4]</span></div></code></pre><button id="clipButton-108" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-108"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may pass an integer to the <code>pop</code> method to remove and return multiple items from the end of a collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-109"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pop</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> collect([5, 4, 3])</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-109" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-109"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-prepend"><a href="https://laravel.com/docs/10.x/collections#method-prepend"><code>prepend()</code></a></h4>
<p>The <code>prepend</code> method adds an item to the beginning of the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-110"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">prepend</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [0, 1, 2, 3, 4, 5]</span></div></code></pre><button id="clipButton-110" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-110"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a second argument to specify the key of the prepended item:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-111"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">one</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">two</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">prepend</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">zero</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['zero' =&gt; 0, 'one' =&gt; 1, 'two' =&gt; 2]</span></div></code></pre><button id="clipButton-111" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-111"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-pull"><a href="https://laravel.com/docs/10.x/collections#method-pull"><code>pull()</code></a></h4>
<p>The <code>pull</code> method removes and returns an item from the collection by its key:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-112"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">prod-100</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">pull</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 'Desk'</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product_id' =&gt; 'prod-100']</span></div></code></pre><button id="clipButton-112" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-112"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-push"><a href="https://laravel.com/docs/10.x/collections#method-push"><code>push()</code></a></h4>
<p>The <code>push</code> method appends an item to the end of the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-113"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4, 5]</span></div></code></pre><button id="clipButton-113" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-113"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-put"><a href="https://laravel.com/docs/10.x/collections#method-put"><code>put()</code></a></h4>
<p>The <code>put</code> method sets the given key and value in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-114"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product_id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">put</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product_id' =&gt; 1, 'name' =&gt; 'Desk', 'price' =&gt; 100]</span></div></code></pre><button id="clipButton-114" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-114"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-random"><a href="https://laravel.com/docs/10.x/collections#method-random"><code>random()</code></a></h4>
<p>The <code>random</code> method returns a random item from the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-115"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">random</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 4 - (retrieved randomly)</span></div></code></pre><button id="clipButton-115" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-115"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may pass an integer to <code>random</code> to specify how many items you would like to randomly retrieve. A collection of items is always returned when explicitly passing the number of items you wish to receive:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-116"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$random</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">random</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$random</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [2, 4, 5] - (retrieved randomly)</span></div></code></pre><button id="clipButton-116" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-116"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If the collection instance has fewer items than requested, the <code>random</code> method will throw an <code>InvalidArgumentException</code>.</p>
<p>The <code>random</code> method also accepts a closure, which will receive the current collection instance:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-117"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> Illuminate\Support\</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$random</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">random</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">fn</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$items</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> =&gt; </span><span style="color: #89DDFF;">min</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">count</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">items</span><span style="color: #BFC7D5;">)));</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$random</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4, 5] - (retrieved randomly)</span></div></code></pre><button id="clipButton-117" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-117"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-range"><a href="https://laravel.com/docs/10.x/collections#method-range"><code>range()</code></a></h4>
<p>The <code>range</code> method returns a collection containing integers between the specified range:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-118"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">range</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 4, 5, 6]</span></div></code></pre><button id="clipButton-118" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-118"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-reduce"><a href="https://laravel.com/docs/10.x/collections#method-reduce"><code>reduce()</code></a></h4>
<p>The <code>reduce</code> method reduces the collection to a single value, passing the result of each iteration into the subsequent iteration:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-119"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$total</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">reduce</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #89DDFF;">?</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$carry</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$carry</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">+</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 6</span></div></code></pre><button id="clipButton-119" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-119"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The value for <code>$carry</code> on the first iteration is <code>null</code>; however, you may specify its initial value by passing a second argument to <code>reduce</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-120"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">reduce</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$carry</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$carry</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">+</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">}, </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 10</span></div></code></pre><button id="clipButton-120" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-120"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>reduce</code> method also passes array keys in associative collections to the given callback:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-121"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">usd</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1400</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">gbp</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1200</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">eur</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1000</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$ratio</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> [</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">usd</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">gbp</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1.37</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">eur</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">1.22</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">];</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">reduce</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$carry</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #BEC5D4;">$ratio</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$carry</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">+</span><span style="color: #BFC7D5;"> (</span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">*</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$ratio</span><span style="color: #BFC7D5;">[</span><span style="color: #BEC5D4;">$key</span><span style="color: #BFC7D5;">]);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 4264</span></div></code></pre><button id="clipButton-121" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-121"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-reduce-spread"><a href="https://laravel.com/docs/10.x/collections#method-reduce-spread"><code>reduceSpread()</code></a></h4>
<p>The <code>reduceSpread</code> method reduces the collection to an array of values, passing the results of each iteration into the subsequent iteration. This method is similar to the <code>reduce</code> method; however, it can accept multiple initial values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-122"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BFC7D5;">[</span><span style="color: #BEC5D4;">$creditsRemaining</span><span style="color: #BFC7D5;">, </span><span style="color: #BEC5D4;">$batch</span><span style="color: #BFC7D5;">] </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Image</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">status</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">unprocessed</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">()</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">reduceSpread</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$creditsRemaining</span><span style="color: #BFC7D5;">, </span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$batch</span><span style="color: #BFC7D5;">, </span><span style="color: #FFCB8B;">Image</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$image</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">if</span><span style="color: #BFC7D5;"> (</span><span style="color: #BEC5D4;">$creditsRemaining</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$image</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">creditsRequired</span><span style="color: #BFC7D5;">()) {</span></div><div class="line"><span style="color: #BFC7D5;">            </span><span style="color: #BEC5D4;">$batch</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #BEC5D4;">$image</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BFC7D5;">            </span><span style="color: #BEC5D4;">$creditsRemaining</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">-=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$image</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">creditsRequired</span><span style="color: #BFC7D5;">();</span></div><div class="line"><span style="color: #BFC7D5;">        }</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> [</span><span style="color: #BEC5D4;">$creditsRemaining</span><span style="color: #BFC7D5;">, </span><span style="color: #BEC5D4;">$batch</span><span style="color: #BFC7D5;">];</span></div><div class="line"><span style="color: #BFC7D5;">    }, </span><span style="color: #BEC5D4;">$creditsAvailable</span><span style="color: #BFC7D5;">, </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">());</span></div></code></pre><button id="clipButton-122" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-122"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-reject"><a href="https://laravel.com/docs/10.x/collections#method-reject"><code>reject()</code></a></h4>
<p>The <code>reject</code> method filters the collection using the given closure. The closure should return <code>true</code> if the item should be removed from the resulting collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-123"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">reject</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-123" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-123"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of the <code>reject</code> method, see the <a href="https://laravel.com/docs/10.x/collections#method-filter"><code>filter</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-replace"><a href="https://laravel.com/docs/10.x/collections#method-replace"><code>replace()</code></a></h4>
<p>The <code>replace</code> method behaves similarly to <code>merge</code>; however, in addition to overwriting matching items that have string keys, the <code>replace</code> method will also overwrite items in the collection that have matching numeric keys:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-124"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">James</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$replaced</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">replace</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Victoria</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Finn</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$replaced</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Taylor', 'Victoria', 'James', 'Finn']</span></div></code></pre><button id="clipButton-124" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-124"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-replacerecursive"><a href="https://laravel.com/docs/10.x/collections#method-replacerecursive"><code>replaceRecursive()</code></a></h4>
<p>This method works like <code>replace</code>, but it will recur into arrays and apply the same replacement process to the inner values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-125"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">James</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Victoria</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">        </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Finn</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$replaced</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">replaceRecursive</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Charlie</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">King</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$replaced</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Charlie', 'Abigail', ['James', 'King', 'Finn']]</span></div></code></pre><button id="clipButton-125" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-125"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-reverse"><a href="https://laravel.com/docs/10.x/collections#method-reverse"><code>reverse()</code></a></h4>
<p>The <code>reverse</code> method reverses the order of the collection's items, preserving the original keys:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-126"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">c</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">d</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">e</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$reversed</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">reverse</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$reversed</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        4 =&gt; 'e',</span></div><div class="line"><span style="color: #697098;">        3 =&gt; 'd',</span></div><div class="line"><span style="color: #697098;">        2 =&gt; 'c',</span></div><div class="line"><span style="color: #697098;">        1 =&gt; 'b',</span></div><div class="line"><span style="color: #697098;">        0 =&gt; 'a',</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-126" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-126"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-search"><a href="https://laravel.com/docs/10.x/collections#method-search"><code>search()</code></a></h4>
<p>The <code>search</code> method searches the collection for the given value and returns its key if found. If the item is not found, <code>false</code> is returned:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-127"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">search</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div></code></pre><button id="clipButton-127" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-127"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The search is done using a "loose" comparison, meaning a string with an integer value will be considered equal to an integer of the same value. To use "strict" comparison, pass <code>true</code> as the second argument to the method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-128"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">search</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">4</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #BEC5D4;">$strict</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">true</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> false</span></div></code></pre><button id="clipButton-128" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-128"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may provide your own closure to search for the first item that passes a given truth test:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-129"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">search</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 2</span></div></code></pre><button id="clipButton-129" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-129"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-shift"><a href="https://laravel.com/docs/10.x/collections#method-shift"><code>shift()</code></a></h4>
<p>The <code>shift</code> method removes and returns the first item from the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-130"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">shift</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [2, 3, 4, 5]</span></div></code></pre><button id="clipButton-130" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-130"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may pass an integer to the <code>shift</code> method to remove and return multiple items from the beginning of a collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-131"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">shift</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> collect([1, 2, 3])</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [4, 5]</span></div></code></pre><button id="clipButton-131" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-131"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-shuffle"><a href="https://laravel.com/docs/10.x/collections#method-shuffle"><code>shuffle()</code></a></h4>
<p>The <code>shuffle</code> method randomly shuffles the items in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-132"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$shuffled</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">shuffle</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$shuffled</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 2, 5, 1, 4] - (generated randomly)</span></div></code></pre><button id="clipButton-132" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-132"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-skip"><a href="https://laravel.com/docs/10.x/collections#method-skip"><code>skip()</code></a></h4>
<p>The <code>skip</code> method returns a new collection, with the given number of elements removed from the beginning of the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-133"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">skip</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [5, 6, 7, 8, 9, 10]</span></div></code></pre><button id="clipButton-133" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-133"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-skipuntil"><a href="https://laravel.com/docs/10.x/collections#method-skipuntil"><code>skipUntil()</code></a></h4>
<p>The <code>skipUntil</code> method skips over items from the collection until the given callback returns <code>true</code> and then returns the remaining items in the collection as a new collection instance:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-134"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">skipUntil</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;=</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 4]</span></div></code></pre><button id="clipButton-134" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-134"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a simple value to the <code>skipUntil</code> method to skip all items until the given value is found:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-135"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">skipUntil</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 4]</span></div></code></pre><button id="clipButton-135" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-135"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">If the given value is not found or the callback never returns <code>true</code>, the <code>skipUntil</code> method will return an empty collection.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-skipwhile"><a href="https://laravel.com/docs/10.x/collections#method-skipwhile"><code>skipWhile()</code></a></h4>
<p>The <code>skipWhile</code> method skips over items from the collection while the given callback returns <code>true</code> and then returns the remaining items in the collection as a new collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-136"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">skipWhile</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&lt;=</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [4]</span></div></code></pre><button id="clipButton-136" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-136"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">If the callback never returns <code>false</code>, the <code>skipWhile</code> method will return an empty collection.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-slice"><a href="https://laravel.com/docs/10.x/collections#method-slice"><code>slice()</code></a></h4>
<p>The <code>slice</code> method returns a slice of the collection starting at the given index:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-137"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$slice</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">slice</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$slice</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [5, 6, 7, 8, 9, 10]</span></div></code></pre><button id="clipButton-137" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-137"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you would like to limit the size of the returned slice, pass the desired size as the second argument to the method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-138"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$slice</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">slice</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$slice</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [5, 6]</span></div></code></pre><button id="clipButton-138" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-138"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The returned slice will preserve keys by default. If you do not wish to preserve the original keys, you can use the <a href="https://laravel.com/docs/10.x/collections#method-values"><code>values</code></a> method to reindex them.</p>
<p></p>
<h4 class="collection-method" id="method-sliding"><a href="https://laravel.com/docs/10.x/collections#method-sliding"><code>sliding()</code></a></h4>
<p>The <code>sliding</code> method returns a new collection of chunks representing a "sliding window" view of the items in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-139"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sliding</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">toArray</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [[1, 2], [2, 3], [3, 4], [4, 5]]</span></div></code></pre><button id="clipButton-139" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-139"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>This is especially useful in conjunction with the <a href="https://laravel.com/docs/10.x/collections#method-eachspread"><code>eachSpread</code></a> method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-140"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$transactions</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sliding</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">eachSpread</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$previous</span><span style="color: #BFC7D5;">, </span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$current</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #BEC5D4;">$current</span><span style="color: #89DDFF;">-&gt;total</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$previous</span><span style="color: #89DDFF;">-&gt;total</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">+</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$current</span><span style="color: #89DDFF;">-&gt;amount</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-140" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-140"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may optionally pass a second "step" value, which determines the distance between the first item of every chunk:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-141"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sliding</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">, step: </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunks</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">toArray</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [[1, 2, 3], [3, 4, 5]]</span></div></code></pre><button id="clipButton-141" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-141"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-sole"><a href="https://laravel.com/docs/10.x/collections#method-sole"><code>sole()</code></a></h4>
<p>The <code>sole</code> method returns the first element in the collection that passes a given truth test, but only if the truth test matches exactly one element:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-142"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sole</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">===</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 2</span></div></code></pre><button id="clipButton-142" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-142"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a key / value pair to the <code>sole</code> method, which will return the first element in the collection that matches the given pair, but only if it exactly one element matches:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-143"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sole</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product' =&gt; 'Chair', 'price' =&gt; 100]</span></div></code></pre><button id="clipButton-143" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-143"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may also call the <code>sole</code> method with no argument to get the first element in the collection if there is only one element:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-144"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sole</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['product' =&gt; 'Desk', 'price' =&gt; 200]</span></div></code></pre><button id="clipButton-144" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-144"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If there are no elements in the collection that should be returned by the <code>sole</code> method, an <code>\Illuminate\Collections\ItemNotFoundException</code> exception will be thrown. If there is more than one element that should be returned, an <code>\Illuminate\Collections\MultipleItemsFoundException</code> will be thrown.</p>
<p></p>
<h4 class="collection-method" id="method-some"><a href="https://laravel.com/docs/10.x/collections#method-some"><code>some()</code></a></h4>
<p>Alias for the <a href="https://laravel.com/docs/10.x/collections#method-contains"><code>contains</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-sort"><a href="https://laravel.com/docs/10.x/collections#method-sort"><code>sort()</code></a></h4>
<p>The <code>sort</code> method sorts the collection. The sorted collection keeps the original array keys, so in the following example we will use the <a href="https://laravel.com/docs/10.x/collections#method-values"><code>values</code></a> method to reset the keys to consecutively numbered indexes:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-145"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sort</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4, 5]</span></div></code></pre><button id="clipButton-145" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-145"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If your sorting needs are more advanced, you may pass a callback to <code>sort</code> with your own algorithm. Refer to the PHP documentation on <a href="https://secure.php.net/manual/en/function.uasort.php#refsect1-function.uasort-parameters"><code>uasort</code></a>, which is what the collection's <code>sort</code> method calls utilizes internally.</p>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">If you need to sort a collection of nested arrays or objects, see the <a href="https://laravel.com/docs/10.x/collections#method-sortby"><code>sortBy</code></a> and <a href="https://laravel.com/docs/10.x/collections#method-sortbydesc"><code>sortByDesc</code></a> methods.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-sortby"><a href="https://laravel.com/docs/10.x/collections#method-sortby"><code>sortBy()</code></a></h4>
<p>The <code>sortBy</code> method sorts the collection by the given key. The sorted collection keeps the original array keys, so in the following example we will use the <a href="https://laravel.com/docs/10.x/collections#method-values"><code>values</code></a> method to reset the keys to consecutively numbered indexes:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-146"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortBy</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Chair', 'price' =&gt; 100],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Bookcase', 'price' =&gt; 150],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Desk', 'price' =&gt; 200],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-146" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-146"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>sortBy</code> method accepts <a href="https://www.php.net/manual/en/function.sort.php">sort flags</a> as its second argument:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-147"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">title</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Item 1</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">title</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Item 12</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">title</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Item 3</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortBy</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">title</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #82AAFF;">SORT_NATURAL</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['title' =&gt; 'Item 1'],</span></div><div class="line"><span style="color: #697098;">        ['title' =&gt; 'Item 3'],</span></div><div class="line"><span style="color: #697098;">        ['title' =&gt; 'Item 12'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-147" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-147"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may pass your own closure to determine how to sort the collection's values:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-148"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Black</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Mahogany</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Black</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Red</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Beige</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Brown</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortBy</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$product</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">count</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">product</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Chair', 'colors' =&gt; ['Black']],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Desk', 'colors' =&gt; ['Black', 'Mahogany']],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Bookcase', 'colors' =&gt; ['Red', 'Beige', 'Brown']],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-148" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-148"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you would like to sort your collection by multiple attributes, you may pass an array of sort operations to the <code>sortBy</code> method. Each sort operation should be an array consisting of the attribute that you wish to sort by and the direction of the desired sort:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-149"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">34</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">30</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">36</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">32</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortBy</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">asc</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">    [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">desc</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Abigail Otwell', 'age' =&gt; 32],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Abigail Otwell', 'age' =&gt; 30],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Taylor Otwell', 'age' =&gt; 36],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Taylor Otwell', 'age' =&gt; 34],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-149" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-149"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>When sorting a collection by multiple attributes, you may also provide closures that define each sort operation:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-150"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">34</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">30</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">36</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Abigail Otwell</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">32</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortBy</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">fn</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$a</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$b</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> =&gt; </span><span style="color: #BEC5D4;">$a</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">] </span><span style="color: #C792EA;">&lt;=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$b</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">fn</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$a</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$b</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> =&gt; </span><span style="color: #BEC5D4;">$b</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">] </span><span style="color: #C792EA;">&lt;=&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$a</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">age</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Abigail Otwell', 'age' =&gt; 32],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Abigail Otwell', 'age' =&gt; 30],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Taylor Otwell', 'age' =&gt; 36],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Taylor Otwell', 'age' =&gt; 34],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-150" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-150"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-sortbydesc"><a href="https://laravel.com/docs/10.x/collections#method-sortbydesc"><code>sortByDesc()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-sortby"><code>sortBy</code></a> method, but will sort the collection in the opposite order.</p>
<p></p>
<h4 class="collection-method" id="method-sortdesc"><a href="https://laravel.com/docs/10.x/collections#method-sortdesc"><code>sortDesc()</code></a></h4>
<p>This method will sort the collection in the opposite order as the <a href="https://laravel.com/docs/10.x/collections#method-sort"><code>sort</code></a> method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-151"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortDesc</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [5, 4, 3, 2, 1]</span></div></code></pre><button id="clipButton-151" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-151"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Unlike <code>sort</code>, you may not pass a closure to <code>sortDesc</code>. Instead, you should use the <a href="https://laravel.com/docs/10.x/collections#method-sort"><code>sort</code></a> method and invert your comparison.</p>
<p></p>
<h4 class="collection-method" id="method-sortkeys"><a href="https://laravel.com/docs/10.x/collections#method-sortkeys"><code>sortKeys()</code></a></h4>
<p>The <code>sortKeys</code> method sorts the collection by the keys of the underlying associative array:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-152"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">id</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">22345</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">first</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">last</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortKeys</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'first' =&gt; 'John',</span></div><div class="line"><span style="color: #697098;">        'id' =&gt; 22345,</span></div><div class="line"><span style="color: #697098;">        'last' =&gt; 'Doe',</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-152" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-152"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-sortkeysdesc"><a href="https://laravel.com/docs/10.x/collections#method-sortkeysdesc"><code>sortKeysDesc()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-sortkeys"><code>sortKeys</code></a> method, but will sort the collection in the opposite order.</p>
<p></p>
<h4 class="collection-method" id="method-sortkeysusing"><a href="https://laravel.com/docs/10.x/collections#method-sortkeysusing"><code>sortKeysUsing()</code></a></h4>
<p>The <code>sortKeysUsing</code> method sorts the collection by the keys of the underlying associative array using a callback:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-153"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">ID</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">22345</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">first</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">last</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sortKeysUsing</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">strnatcasecmp</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$sorted</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        'first' =&gt; 'John',</span></div><div class="line"><span style="color: #697098;">        'ID' =&gt; 22345,</span></div><div class="line"><span style="color: #697098;">        'last' =&gt; 'Doe',</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-153" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-153"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The callback must be a comparison function that returns an integer less than, equal to, or greater than zero. For more information, refer to the PHP documentation on <a href="https://www.php.net/manual/en/function.uksort.php#refsect1-function.uksort-parameters"><code>uksort</code></a>, which is the PHP function that <code>sortKeysUsing</code> method utilizes internally.</p>
<p></p>
<h4 class="collection-method" id="method-splice"><a href="https://laravel.com/docs/10.x/collections#method-splice"><code>splice()</code></a></h4>
<p>The <code>splice</code> method removes and returns a slice of items starting at the specified index:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-154"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">splice</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3, 4, 5]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-154" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-154"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may pass a second argument to limit the size of the resulting collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-155"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">splice</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 4, 5]</span></div></code></pre><button id="clipButton-155" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-155"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>In addition, you may pass a third argument containing the new items to replace the items removed from the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-156"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">splice</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">, [</span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">11</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [3]</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 10, 11, 4, 5]</span></div></code></pre><button id="clipButton-156" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-156"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-split"><a href="https://laravel.com/docs/10.x/collections#method-split"><code>split()</code></a></h4>
<p>The <code>split</code> method breaks a collection into the given number of groups:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-157"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$groups</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">split</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$groups</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [[1, 2], [3, 4], [5]]</span></div></code></pre><button id="clipButton-157" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-157"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-splitin"><a href="https://laravel.com/docs/10.x/collections#method-splitin"><code>splitIn()</code></a></h4>
<p>The <code>splitIn</code> method breaks a collection into the given number of groups, filling non-terminal groups completely before allocating the remainder to the final group:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-158"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">6</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">7</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">8</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$groups</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">splitIn</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$groups</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10]]</span></div></code></pre><button id="clipButton-158" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-158"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-sum"><a href="https://laravel.com/docs/10.x/collections#method-sum"><code>sum()</code></a></h4>
<p>The <code>sum</code> method returns the sum of all items in the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-159"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">])</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sum</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 15</span></div></code></pre><button id="clipButton-159" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-159"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If the collection contains nested arrays or objects, you should pass a key that will be used to determine which values to sum:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-160"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">JavaScript: The Good Parts</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">pages</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">176</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">JavaScript: The Definitive Guide</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">pages</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1096</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sum</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">pages</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1272</span></div></code></pre><button id="clipButton-160" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-160"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>In addition, you may pass your own closure to determine which values of the collection to sum:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-161"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Black</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Black</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Mahogany</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Red</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Beige</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Brown</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sum</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$product</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">count</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">product</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">colors</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 6</span></div></code></pre><button id="clipButton-161" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-161"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-take"><a href="https://laravel.com/docs/10.x/collections#method-take"><code>take()</code></a></h4>
<p>The <code>take</code> method returns a new collection with the specified number of items:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-162"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">take</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [0, 1, 2]</span></div></code></pre><button id="clipButton-162" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-162"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a negative integer to take the specified number of items from the end of the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-163"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">0</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">take</span><span style="color: #BFC7D5;">(</span><span style="color: #89DDFF;">-</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$chunk</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [4, 5]</span></div></code></pre><button id="clipButton-163" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-163"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-takeuntil"><a href="https://laravel.com/docs/10.x/collections#method-takeuntil"><code>takeUntil()</code></a></h4>
<p>The <code>takeUntil</code> method returns items in the collection until the given callback returns <code>true</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-164"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">takeUntil</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;=</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-164" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-164"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also pass a simple value to the <code>takeUntil</code> method to get the items until the given value is found:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-165"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">takeUntil</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-165" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-165"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">If the given value is not found or the callback never returns <code>true</code>, the <code>takeUntil</code> method will return all items in the collection.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-takewhile"><a href="https://laravel.com/docs/10.x/collections#method-takewhile"><code>takeWhile()</code></a></h4>
<p>The <code>takeWhile</code> method returns items in the collection until the given callback returns <code>false</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-166"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">takeWhile</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&lt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$subset</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2]</span></div></code></pre><button id="clipButton-166" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-166"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">If the callback never returns <code>false</code>, the <code>takeWhile</code> method will return all items in the collection.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-tap"><a href="https://laravel.com/docs/10.x/collections#method-tap"><code>tap()</code></a></h4>
<p>The <code>tap</code> method passes the collection to the given callback, allowing you to "tap" into the collection at a specific point and do something with the items while not affecting the collection itself. The collection is then returned by the <code>tap</code> method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-167"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">])</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">sort</span><span style="color: #BFC7D5;">()</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">tap</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #FFCB8B;">Log</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">debug</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Values after sorting</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">());</span></div><div class="line"><span style="color: #BFC7D5;">    })</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">shift</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div></code></pre><button id="clipButton-167" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-167"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-times"><a href="https://laravel.com/docs/10.x/collections#method-times"><code>times()</code></a></h4>
<p>The static <code>times</code> method creates a new collection by invoking the given closure a specified number of times:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-168"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">times</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">10</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$number</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$number</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">*</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">9</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [9, 18, 27, 36, 45, 54, 63, 72, 81, 90]</span></div></code></pre><button id="clipButton-168" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-168"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-toarray"><a href="https://laravel.com/docs/10.x/collections#method-toarray"><code>toArray()</code></a></h4>
<p>The <code>toArray</code> method converts the collection into a plain PHP <code>array</code>. If the collection's values are <a href="https://laravel.com/docs/10.x/eloquent">Eloquent</a> models, the models will also be converted to arrays:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-169"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">toArray</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Desk', 'price' =&gt; 200],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-169" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-169"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6"><code>toArray</code> also converts all of the collection's nested objects that are an instance of <code>Arrayable</code> to an array. If you want to get the raw array underlying the collection, use the <a href="https://laravel.com/docs/10.x/collections#method-all"><code>all</code></a> method instead.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-tojson"><a href="https://laravel.com/docs/10.x/collections#method-tojson"><code>toJson()</code></a></h4>
<p>The <code>toJson</code> method converts the collection into a JSON serialized string:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-170"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">toJson</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> '{"name":"Desk", "price":200}'</span></div></code></pre><button id="clipButton-170" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-170"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-transform"><a href="https://laravel.com/docs/10.x/collections#method-transform"><code>transform()</code></a></h4>
<p>The <code>transform</code> method iterates over the collection and calls the given callback with each item in the collection. The items in the collection will be replaced by the values returned by the callback:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-171"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">transform</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$key</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">*</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [2, 4, 6, 8, 10]</span></div></code></pre><button id="clipButton-171" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-171"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">Unlike most other collection methods, <code>transform</code> modifies the collection itself. If you wish to create a new collection instead, use the <a href="https://laravel.com/docs/10.x/collections#method-map"><code>map</code></a> method.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-undot"><a href="https://laravel.com/docs/10.x/collections#method-undot"><code>undot()</code></a></h4>
<p>The <code>undot</code> method expands a single-dimensional collection that uses "dot" notation into a multi-dimensional collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-172"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$person</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name.first_name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Marie</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name.last_name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Valentine</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">address.line_1</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">2992 Eagle Drive</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">address.line_2</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">''</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">address.suburb</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Detroit</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">address.state</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">MI</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">address.postcode</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">48219</span><span style="color: #D9F5DD;">'</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$person</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$person</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">undot</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$person</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">toArray</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        "name" =&gt; [</span></div><div class="line"><span style="color: #697098;">            "first_name" =&gt; "Marie",</span></div><div class="line"><span style="color: #697098;">            "last_name" =&gt; "Valentine",</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">        "address" =&gt; [</span></div><div class="line"><span style="color: #697098;">            "line_1" =&gt; "2992 Eagle Drive",</span></div><div class="line"><span style="color: #697098;">            "line_2" =&gt; "",</span></div><div class="line"><span style="color: #697098;">            "suburb" =&gt; "Detroit",</span></div><div class="line"><span style="color: #697098;">            "state" =&gt; "MI",</span></div><div class="line"><span style="color: #697098;">            "postcode" =&gt; "48219",</span></div><div class="line"><span style="color: #697098;">        ],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-172" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-172"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-union"><a href="https://laravel.com/docs/10.x/collections#method-union"><code>union()</code></a></h4>
<p>The <code>union</code> method adds the given array to the collection. If the given array contains keys that are already in the original collection, the original collection's values will be preferred:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-173"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">a</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">b</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$union</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">union</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">c</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">], </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #BFC7D5;"> [</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">d</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$union</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1 =&gt; ['a'], 2 =&gt; ['b'], 3 =&gt; ['c']]</span></div></code></pre><button id="clipButton-173" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-173"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-unique"><a href="https://laravel.com/docs/10.x/collections#method-unique"><code>unique()</code></a></h4>
<p>The <code>unique</code> method returns all of the unique items in the collection. The returned collection keeps the original array keys, so in the following example we will use the <a href="https://laravel.com/docs/10.x/collections#method-values"><code>values</code></a> method to reset the keys to consecutively numbered indexes:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-174"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$unique</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">unique</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$unique</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4]</span></div></code></pre><button id="clipButton-174" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-174"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>When dealing with nested arrays or objects, you may specify the key used to determine uniqueness:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-175"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">iPhone 6</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Apple</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">phone</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">iPhone 5</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Apple</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">phone</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Apple Watch</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Apple</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">watch</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Galaxy S6</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Samsung</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">phone</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Galaxy Gear</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Samsung</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">watch</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$unique</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">unique</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$unique</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'iPhone 6', 'brand' =&gt; 'Apple', 'type' =&gt; 'phone'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Galaxy S6', 'brand' =&gt; 'Samsung', 'type' =&gt; 'phone'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-175" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-175"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Finally, you may also pass your own closure to the <code>unique</code> method to specify which value should determine an item's uniqueness:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-176"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$unique</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">unique</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">brand</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]</span><span style="color: #89DDFF;">.</span><span style="color: #BEC5D4;">$item</span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">type</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">];</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$unique</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'iPhone 6', 'brand' =&gt; 'Apple', 'type' =&gt; 'phone'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Apple Watch', 'brand' =&gt; 'Apple', 'type' =&gt; 'watch'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Galaxy S6', 'brand' =&gt; 'Samsung', 'type' =&gt; 'phone'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Galaxy Gear', 'brand' =&gt; 'Samsung', 'type' =&gt; 'watch'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-176" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-176"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>unique</code> method uses "loose" comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the <a href="https://laravel.com/docs/10.x/collections#method-uniquestrict"><code>uniqueStrict</code></a> method to filter using "strict" comparisons.</p>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-purple-600 lg:mb-0"><img src="https://laravel.com/img/callouts/lightbulb.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">This method's behavior is modified when using <a href="https://laravel.com/docs/10.x/eloquent-collections#method-unique">Eloquent Collections</a>.</p></div>
</blockquote>
<p></p>
<h4 class="collection-method" id="method-uniquestrict"><a href="https://laravel.com/docs/10.x/collections#method-uniquestrict"><code>uniqueStrict()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-unique"><code>unique</code></a> method; however, all values are compared using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-unless"><a href="https://laravel.com/docs/10.x/collections#method-unless"><code>unless()</code></a></h4>
<p>The <code>unless</code> method will execute the given callback unless the first argument given to the method evaluates to <code>true</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-177"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">unless</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">true</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">unless</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 5]</span></div></code></pre><button id="clipButton-177" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-177"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A second callback may be passed to the <code>unless</code> method. The second callback will be executed when the first argument given to the <code>unless</code> method evaluates to <code>true</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-178"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">unless</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">true</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">}, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 5]</span></div></code></pre><button id="clipButton-178" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-178"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>unless</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-when"><code>when</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-unlessempty"><a href="https://laravel.com/docs/10.x/collections#method-unlessempty"><code>unlessEmpty()</code></a></h4>
<p>Alias for the <a href="https://laravel.com/docs/10.x/collections#method-whennotempty"><code>whenNotEmpty</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-unlessnotempty"><a href="https://laravel.com/docs/10.x/collections#method-unlessnotempty"><code>unlessNotEmpty()</code></a></h4>
<p>Alias for the <a href="https://laravel.com/docs/10.x/collections#method-whenempty"><code>whenEmpty</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-unwrap"><a href="https://laravel.com/docs/10.x/collections#method-unwrap"><code>unwrap()</code></a></h4>
<p>The static <code>unwrap</code> method returns the collection's underlying items from the given value when applicable:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-179"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">unwrap</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">));</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe']</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">unwrap</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe']</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">unwrap</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 'John Doe'</span></div></code></pre><button id="clipButton-179" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-179"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-value"><a href="https://laravel.com/docs/10.x/collections#method-value"><code>value()</code></a></h4>
<p>The <code>value</code> method retrieves a given value from the first element of the collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-180"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Speaker</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">400</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$value</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">value</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 200</span></div></code></pre><button id="clipButton-180" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-180"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-values"><a href="https://laravel.com/docs/10.x/collections#method-values"><code>values()</code></a></h4>
<p>The <code>values</code> method returns a new collection with the keys reset to consecutive integers:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-181"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #F78C6C;">10</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #F78C6C;">11</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$values</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">values</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$values</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        0 =&gt; ['product' =&gt; 'Desk', 'price' =&gt; 200],</span></div><div class="line"><span style="color: #697098;">        1 =&gt; ['product' =&gt; 'Desk', 'price' =&gt; 200],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-181" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-181"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-when"><a href="https://laravel.com/docs/10.x/collections#method-when"><code>when()</code></a></h4>
<p>The <code>when</code> method will execute the given callback when the first argument given to the method evaluates to <code>true</code>. The collection instance and the first argument given to the <code>when</code> method will be provided to the closure:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-182"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">when</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">true</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">when</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 4]</span></div></code></pre><button id="clipButton-182" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-182"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A second callback may be passed to the <code>when</code> method. The second callback will be executed when the first argument given to the <code>when</code> method evaluates to <code>false</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-183"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">2</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">when</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;">, </span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">}, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [1, 2, 3, 5]</span></div></code></pre><button id="clipButton-183" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-183"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>when</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-unless"><code>unless</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-whenempty"><a href="https://laravel.com/docs/10.x/collections#method-whenempty"><code>whenEmpty()</code></a></h4>
<p>The <code>whenEmpty</code> method will execute the given callback when the collection is empty:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-184"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Michael</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Tom</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whenEmpty</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Adam</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Michael', 'Tom']</span></div><div class="line">&nbsp;</div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whenEmpty</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Adam</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Adam']</span></div></code></pre><button id="clipButton-184" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-184"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A second closure may be passed to the <code>whenEmpty</code> method that will be executed when the collection is not empty:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-185"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Michael</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Tom</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whenEmpty</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Adam</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">}, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['Michael', 'Tom', 'Taylor']</span></div></code></pre><button id="clipButton-185" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-185"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>whenEmpty</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-whennotempty"><code>whenNotEmpty</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-whennotempty"><a href="https://laravel.com/docs/10.x/collections#method-whennotempty"><code>whenNotEmpty()</code></a></h4>
<p>The <code>whenNotEmpty</code> method will execute the given callback when the collection is not empty:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-186"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">michael</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">tom</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whenNotEmpty</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">adam</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['michael', 'tom', 'adam']</span></div><div class="line">&nbsp;</div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whenNotEmpty</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">adam</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> []</span></div></code></pre><button id="clipButton-186" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-186"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A second closure may be passed to the <code>whenNotEmpty</code> method that will be executed when the collection is empty:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-187"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whenNotEmpty</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">adam</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">}, </span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">push</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">taylor</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['taylor']</span></div></code></pre><button id="clipButton-187" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-187"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>whenNotEmpty</code>, see the <a href="https://laravel.com/docs/10.x/collections#method-whenempty"><code>whenEmpty</code></a> method.</p>
<p></p>
<h4 class="collection-method" id="method-where"><a href="https://laravel.com/docs/10.x/collections#method-where"><code>where()</code></a></h4>
<p>The <code>where</code> method filters the collection by a given key / value pair:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-188"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Door</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Chair', 'price' =&gt; 100],</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Door', 'price' =&gt; 100],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-188" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-188"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>where</code> method uses "loose" comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the <a href="https://laravel.com/docs/10.x/collections#method-wherestrict"><code>whereStrict</code></a> method to filter using "strict" comparisons.</p>
<p>Optionally, you may pass a comparison operator as the second parameter. Supported operators are: '===', '!==', '!=', '==', '=', '&lt;&gt;', '&gt;', '&lt;', '&gt;=', and '&lt;=':</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-189"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Jim</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">deleted_at</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">2019-01-01 00:00:00</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sally</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">deleted_at</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">2019-01-02 00:00:00</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Sue</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">deleted_at</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> null</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">deleted_at</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">!=</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #82AAFF;">null</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Jim', 'deleted_at' =&gt; '2019-01-01 00:00:00'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Sally', 'deleted_at' =&gt; '2019-01-02 00:00:00'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-189" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-189"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-wherestrict"><a href="https://laravel.com/docs/10.x/collections#method-wherestrict"><code>whereStrict()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-where"><code>where</code></a> method; however, all values are compared using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-wherebetween"><a href="https://laravel.com/docs/10.x/collections#method-wherebetween"><code>whereBetween()</code></a></h4>
<p>The <code>whereBetween</code> method filters the collection by determining if a specified item value is within a given range:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-190"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">80</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Pencil</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">30</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Door</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereBetween</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, [</span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Desk', 'price' =&gt; 200],</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Bookcase', 'price' =&gt; 150],</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Door', 'price' =&gt; 100],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-190" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-190"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-wherein"><a href="https://laravel.com/docs/10.x/collections#method-wherein"><code>whereIn()</code></a></h4>
<p>The <code>whereIn</code> method removes elements from the collection that do not have a specified item value that is contained within the given array:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-191"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Door</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereIn</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, [</span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Desk', 'price' =&gt; 200],</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Bookcase', 'price' =&gt; 150],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-191" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-191"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>whereIn</code> method uses "loose" comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the <a href="https://laravel.com/docs/10.x/collections#method-whereinstrict"><code>whereInStrict</code></a> method to filter using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-whereinstrict"><a href="https://laravel.com/docs/10.x/collections#method-whereinstrict"><code>whereInStrict()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-wherein"><code>whereIn</code></a> method; however, all values are compared using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-whereinstanceof"><a href="https://laravel.com/docs/10.x/collections#method-whereinstanceof"><code>whereInstanceOf()</code></a></h4>
<p>The <code>whereInstanceOf</code> method filters the collection by a given class type:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-192"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">Post</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #89DDFF;">new</span><span style="color: #82AAFF;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #89DDFF;">new</span><span style="color: #82AAFF;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #89DDFF;">new</span><span style="color: #82AAFF;"> </span><span style="color: #FFCB8B;">Post</span><span style="color: #BFC7D5;">,</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereInstanceOf</span><span style="color: #BFC7D5;">(</span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #C792EA;">class</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [App\Models\User, App\Models\User]</span></div></code></pre><button id="clipButton-192" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-192"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-wherenotbetween"><a href="https://laravel.com/docs/10.x/collections#method-wherenotbetween"><code>whereNotBetween()</code></a></h4>
<p>The <code>whereNotBetween</code> method filters the collection by determining if a specified item value is outside of a given range:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-193"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">80</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Pencil</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">30</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Door</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereNotBetween</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, [</span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Chair', 'price' =&gt; 80],</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Pencil', 'price' =&gt; 30],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-193" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-193"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-wherenotin"><a href="https://laravel.com/docs/10.x/collections#method-wherenotin"><code>whereNotIn()</code></a></h4>
<p>The <code>whereNotIn</code> method removes elements from the collection that have a specified item value that is contained within the given array:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-194"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">product</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Door</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereNotIn</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">price</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, [</span><span style="color: #F78C6C;">150</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Chair', 'price' =&gt; 100],</span></div><div class="line"><span style="color: #697098;">        ['product' =&gt; 'Door', 'price' =&gt; 100],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-194" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-194"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>whereNotIn</code> method uses "loose" comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the <a href="https://laravel.com/docs/10.x/collections#method-wherenotinstrict"><code>whereNotInStrict</code></a> method to filter using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-wherenotinstrict"><a href="https://laravel.com/docs/10.x/collections#method-wherenotinstrict"><code>whereNotInStrict()</code></a></h4>
<p>This method has the same signature as the <a href="https://laravel.com/docs/10.x/collections#method-wherenotin"><code>whereNotIn</code></a> method; however, all values are compared using "strict" comparisons.</p>
<p></p>
<h4 class="collection-method" id="method-wherenotnull"><a href="https://laravel.com/docs/10.x/collections#method-wherenotnull"><code>whereNotNull()</code></a></h4>
<p>The <code>whereNotNull</code> method returns items from the collection where the given key is not <code>null</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-195"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> null</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereNotNull</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Desk'],</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; 'Bookcase'],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-195" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-195"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-wherenull"><a href="https://laravel.com/docs/10.x/collections#method-wherenull"><code>whereNull()</code></a></h4>
<p>The <code>whereNull</code> method returns items from the collection where the given key is <code>null</code>:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-196"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> null</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #82AAFF;">    </span><span style="color: #BFC7D5;">[</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #82AAFF;"> </span><span style="color: #89DDFF;">=&gt;</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Bookcase</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">],</span></div><div class="line"><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">whereNull</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">name</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$filtered</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">/*</span></div><div class="line"><span style="color: #697098;">    [</span></div><div class="line"><span style="color: #697098;">        ['name' =&gt; null],</span></div><div class="line"><span style="color: #697098;">    ]</span></div><div class="line"><span style="color: #697098;">*/</span></div></code></pre><button id="clipButton-196" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-196"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-wrap"><a href="https://laravel.com/docs/10.x/collections#method-wrap"><code>wrap()</code></a></h4>
<p>The static <code>wrap</code> method wraps the given value in a collection when applicable:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-197"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> Illuminate\Support\</span><span style="color: #FFCB8B;">Collection</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">wrap</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe']</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">wrap</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe']</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">Collection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">wrap</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">John Doe</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">));</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ['John Doe']</span></div></code></pre><button id="clipButton-197" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-197"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-zip"><a href="https://laravel.com/docs/10.x/collections#method-zip"><code>zip()</code></a></h4>
<p>The <code>zip</code> method merges together the values of the given array with the values of the original collection at their corresponding index:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-198"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$collection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">collect</span><span style="color: #BFC7D5;">([</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Chair</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Desk</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$zipped</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$collection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">zip</span><span style="color: #BFC7D5;">([</span><span style="color: #F78C6C;">100</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">200</span><span style="color: #BFC7D5;">]);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$zipped</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> [['Chair', 100], ['Desk', 200]]</span></div></code></pre><button id="clipButton-198" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-198"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h2 id="higher-order-messages"><a href="https://laravel.com/docs/10.x/collections#higher-order-messages">Higher Order Messages</a></h2>
<p>Collections also provide support for "higher order messages", which are short-cuts for performing common actions on collections. The collection methods that provide higher order messages are: <a href="https://laravel.com/docs/10.x/collections#method-average"><code>average</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-avg"><code>avg</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-contains"><code>contains</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-each"><code>each</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-every"><code>every</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-filter"><code>filter</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-first"><code>first</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-flatmap"><code>flatMap</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-groupby"><code>groupBy</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-keyby"><code>keyBy</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-map"><code>map</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-max"><code>max</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-min"><code>min</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-partition"><code>partition</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-reject"><code>reject</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-skipuntil"><code>skipUntil</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-skipwhile"><code>skipWhile</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-some"><code>some</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-sortby"><code>sortBy</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-sortbydesc"><code>sortByDesc</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-sum"><code>sum</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-takeuntil"><code>takeUntil</code></a>, <a href="https://laravel.com/docs/10.x/collections#method-takewhile"><code>takeWhile</code></a>, and <a href="https://laravel.com/docs/10.x/collections#method-unique"><code>unique</code></a>.</p>
<p>Each higher order message can be accessed as a dynamic property on a collection instance. For instance, let's use the <code>each</code> higher order message to call a method on each object within a collection:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-199"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">votes</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">&gt;</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #F78C6C;">500</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #89DDFF;">-&gt;each-&gt;</span><span style="color: #82AAFF;">markAsVip</span><span style="color: #BFC7D5;">();</span></div></code></pre><button id="clipButton-199" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-199"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Likewise, we can use the <code>sum</code> higher order message to gather the total number of "votes" for a collection of users:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-200"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">where</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">group</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">Development</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">get</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$users</span><span style="color: #89DDFF;">-&gt;sum-&gt;votes</span><span style="color: #BFC7D5;">;</span></div></code></pre><button id="clipButton-200" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-200"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h2 id="lazy-collections"><a href="https://laravel.com/docs/10.x/collections#lazy-collections">Lazy Collections</a></h2>
<p></p>
<h3 id="lazy-collection-introduction"><a href="https://laravel.com/docs/10.x/collections#lazy-collection-introduction">Introduction</a></h3>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">Before learning more about Laravel's lazy collections, take some time to familiarize yourself with <a href="https://www.php.net/manual/en/language.generators.overview.php">PHP generators</a>.</p></div>
</blockquote>
<p>To supplement the already powerful <code>Collection</code> class, the <code>LazyCollection</code> class leverages PHP's <a href="https://www.php.net/manual/en/language.generators.overview.php">generators</a> to allow you to work with very large datasets while keeping memory usage low.</p>
<p>For example, imagine your application needs to process a multi-gigabyte log file while taking advantage of Laravel's collection methods to parse the logs. Instead of reading the entire file into memory at once, lazy collections may be used to keep only a small part of the file in memory at a given time:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-201"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">LogEntry</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> Illuminate\Support\</span><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">make</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">()</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #BEC5D4;">$handle</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">fopen</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">log.txt</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">r</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">while</span><span style="color: #BFC7D5;"> ((</span><span style="color: #BEC5D4;">$line</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">fgets</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">handle</span><span style="color: #BFC7D5;">)) </span><span style="color: #C792EA;">!==</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">) {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">yield</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$line</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">    }</span></div><div class="line"><span style="color: #BFC7D5;">})</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">chunk</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">4</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">map</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">array</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$lines</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">LogEntry</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">fromLines</span><span style="color: #BFC7D5;">(</span><span style="color: #BEC5D4;">$lines</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">})</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">each</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">LogEntry</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$logEntry</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #697098;">//</span><span style="color: #697098;"> Process the log entry...</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-201" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-201"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Or, imagine you need to iterate through 10,000 Eloquent models. When using traditional Laravel collections, all 10,000 Eloquent models must be loaded into memory at the same time:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-202"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">filter</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$user</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$user</span><span style="color: #89DDFF;">-&gt;id</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">500</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-202" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-202"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>However, the query builder's <code>cursor</code> method returns a <code>LazyCollection</code> instance. This allows you to still only run a single query against the database but also only keep one Eloquent model loaded in memory at a time. In this example, the <code>filter</code> callback is not executed until we actually iterate over each user individually, allowing for a drastic reduction in memory usage:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-203"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">cursor</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">filter</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">User</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$user</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">return</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$user</span><span style="color: #89DDFF;">-&gt;id</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">&gt;</span><span style="color: #BFC7D5;"> </span><span style="color: #F78C6C;">500</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #C792EA;">foreach</span><span style="color: #BFC7D5;"> (</span><span style="color: #BEC5D4;">$users</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">as</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$user</span><span style="color: #BFC7D5;">) {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">echo</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$user</span><span style="color: #89DDFF;">-&gt;id</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">}</span></div></code></pre><button id="clipButton-203" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-203"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h3 id="creating-lazy-collections"><a href="https://laravel.com/docs/10.x/collections#creating-lazy-collections">Creating Lazy Collections</a></h3>
<p>To create a lazy collection instance, you should pass a PHP generator function to the collection's <code>make</code> method:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-204"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> Illuminate\Support\</span><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">make</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">()</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #BEC5D4;">$handle</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">fopen</span><span style="color: #BFC7D5;">(</span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">log.txt</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">,</span><span style="color: #82AAFF;"> </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">r</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #C792EA;">while</span><span style="color: #BFC7D5;"> ((</span><span style="color: #BEC5D4;">$line</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #89DDFF;">fgets</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">handle</span><span style="color: #BFC7D5;">)) </span><span style="color: #C792EA;">!==</span><span style="color: #BFC7D5;"> </span><span style="color: #82AAFF;">false</span><span style="color: #BFC7D5;">) {</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #C792EA;">yield</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$line</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #BFC7D5;">    }</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div></code></pre><button id="clipButton-204" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-204"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h3 id="the-enumerable-contract"><a href="https://laravel.com/docs/10.x/collections#the-enumerable-contract">The Enumerable Contract</a></h3>
<p>Almost all methods available on the <code>Collection</code> class are also available on the <code>LazyCollection</code> class. Both of these classes implement the <code>Illuminate\Support\Enumerable</code> contract, which defines the following methods:</p>

<div class="collection-method-list" markdown="1">
<p><a href="https://laravel.com/docs/10.x/collections#method-all">all</a>
<a href="https://laravel.com/docs/10.x/collections#method-average">average</a>
<a href="https://laravel.com/docs/10.x/collections#method-avg">avg</a>
<a href="https://laravel.com/docs/10.x/collections#method-chunk">chunk</a>
<a href="https://laravel.com/docs/10.x/collections#method-chunkwhile">chunkWhile</a>
<a href="https://laravel.com/docs/10.x/collections#method-collapse">collapse</a>
<a href="https://laravel.com/docs/10.x/collections#method-collect">collect</a>
<a href="https://laravel.com/docs/10.x/collections#method-combine">combine</a>
<a href="https://laravel.com/docs/10.x/collections#method-concat">concat</a>
<a href="https://laravel.com/docs/10.x/collections#method-contains">contains</a>
<a href="https://laravel.com/docs/10.x/collections#method-containsstrict">containsStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-count">count</a>
<a href="https://laravel.com/docs/10.x/collections#method-countBy">countBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-crossjoin">crossJoin</a>
<a href="https://laravel.com/docs/10.x/collections#method-dd">dd</a>
<a href="https://laravel.com/docs/10.x/collections#method-diff">diff</a>
<a href="https://laravel.com/docs/10.x/collections#method-diffassoc">diffAssoc</a>
<a href="https://laravel.com/docs/10.x/collections#method-diffkeys">diffKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-dump">dump</a>
<a href="https://laravel.com/docs/10.x/collections#method-duplicates">duplicates</a>
<a href="https://laravel.com/docs/10.x/collections#method-duplicatesstrict">duplicatesStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-each">each</a>
<a href="https://laravel.com/docs/10.x/collections#method-eachspread">eachSpread</a>
<a href="https://laravel.com/docs/10.x/collections#method-every">every</a>
<a href="https://laravel.com/docs/10.x/collections#method-except">except</a>
<a href="https://laravel.com/docs/10.x/collections#method-filter">filter</a>
<a href="https://laravel.com/docs/10.x/collections#method-first">first</a>
<a href="https://laravel.com/docs/10.x/collections#method-first-or-fail">firstOrFail</a>
<a href="https://laravel.com/docs/10.x/collections#method-first-where">firstWhere</a>
<a href="https://laravel.com/docs/10.x/collections#method-flatmap">flatMap</a>
<a href="https://laravel.com/docs/10.x/collections#method-flatten">flatten</a>
<a href="https://laravel.com/docs/10.x/collections#method-flip">flip</a>
<a href="https://laravel.com/docs/10.x/collections#method-forpage">forPage</a>
<a href="https://laravel.com/docs/10.x/collections#method-get">get</a>
<a href="https://laravel.com/docs/10.x/collections#method-groupby">groupBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-has">has</a>
<a href="https://laravel.com/docs/10.x/collections#method-implode">implode</a>
<a href="https://laravel.com/docs/10.x/collections#method-intersect">intersect</a>
<a href="https://laravel.com/docs/10.x/collections#method-intersectAssoc">intersectAssoc</a>
<a href="https://laravel.com/docs/10.x/collections#method-intersectbykeys">intersectByKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-isempty">isEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-isnotempty">isNotEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-join">join</a>
<a href="https://laravel.com/docs/10.x/collections#method-keyby">keyBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-keys">keys</a>
<a href="https://laravel.com/docs/10.x/collections#method-last">last</a>
<a href="https://laravel.com/docs/10.x/collections#method-macro">macro</a>
<a href="https://laravel.com/docs/10.x/collections#method-make">make</a>
<a href="https://laravel.com/docs/10.x/collections#method-map">map</a>
<a href="https://laravel.com/docs/10.x/collections#method-mapinto">mapInto</a>
<a href="https://laravel.com/docs/10.x/collections#method-mapspread">mapSpread</a>
<a href="https://laravel.com/docs/10.x/collections#method-maptogroups">mapToGroups</a>
<a href="https://laravel.com/docs/10.x/collections#method-mapwithkeys">mapWithKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-max">max</a>
<a href="https://laravel.com/docs/10.x/collections#method-median">median</a>
<a href="https://laravel.com/docs/10.x/collections#method-merge">merge</a>
<a href="https://laravel.com/docs/10.x/collections#method-mergerecursive">mergeRecursive</a>
<a href="https://laravel.com/docs/10.x/collections#method-min">min</a>
<a href="https://laravel.com/docs/10.x/collections#method-mode">mode</a>
<a href="https://laravel.com/docs/10.x/collections#method-nth">nth</a>
<a href="https://laravel.com/docs/10.x/collections#method-only">only</a>
<a href="https://laravel.com/docs/10.x/collections#method-pad">pad</a>
<a href="https://laravel.com/docs/10.x/collections#method-partition">partition</a>
<a href="https://laravel.com/docs/10.x/collections#method-pipe">pipe</a>
<a href="https://laravel.com/docs/10.x/collections#method-pluck">pluck</a>
<a href="https://laravel.com/docs/10.x/collections#method-random">random</a>
<a href="https://laravel.com/docs/10.x/collections#method-reduce">reduce</a>
<a href="https://laravel.com/docs/10.x/collections#method-reject">reject</a>
<a href="https://laravel.com/docs/10.x/collections#method-replace">replace</a>
<a href="https://laravel.com/docs/10.x/collections#method-replacerecursive">replaceRecursive</a>
<a href="https://laravel.com/docs/10.x/collections#method-reverse">reverse</a>
<a href="https://laravel.com/docs/10.x/collections#method-search">search</a>
<a href="https://laravel.com/docs/10.x/collections#method-shuffle">shuffle</a>
<a href="https://laravel.com/docs/10.x/collections#method-skip">skip</a>
<a href="https://laravel.com/docs/10.x/collections#method-slice">slice</a>
<a href="https://laravel.com/docs/10.x/collections#method-sole">sole</a>
<a href="https://laravel.com/docs/10.x/collections#method-some">some</a>
<a href="https://laravel.com/docs/10.x/collections#method-sort">sort</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortby">sortBy</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortbydesc">sortByDesc</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortkeys">sortKeys</a>
<a href="https://laravel.com/docs/10.x/collections#method-sortkeysdesc">sortKeysDesc</a>
<a href="https://laravel.com/docs/10.x/collections#method-split">split</a>
<a href="https://laravel.com/docs/10.x/collections#method-sum">sum</a>
<a href="https://laravel.com/docs/10.x/collections#method-take">take</a>
<a href="https://laravel.com/docs/10.x/collections#method-tap">tap</a>
<a href="https://laravel.com/docs/10.x/collections#method-times">times</a>
<a href="https://laravel.com/docs/10.x/collections#method-toarray">toArray</a>
<a href="https://laravel.com/docs/10.x/collections#method-tojson">toJson</a>
<a href="https://laravel.com/docs/10.x/collections#method-union">union</a>
<a href="https://laravel.com/docs/10.x/collections#method-unique">unique</a>
<a href="https://laravel.com/docs/10.x/collections#method-uniquestrict">uniqueStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-unless">unless</a>
<a href="https://laravel.com/docs/10.x/collections#method-unlessempty">unlessEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-unlessnotempty">unlessNotEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-unwrap">unwrap</a>
<a href="https://laravel.com/docs/10.x/collections#method-values">values</a>
<a href="https://laravel.com/docs/10.x/collections#method-when">when</a>
<a href="https://laravel.com/docs/10.x/collections#method-whenempty">whenEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-whennotempty">whenNotEmpty</a>
<a href="https://laravel.com/docs/10.x/collections#method-where">where</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherestrict">whereStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherebetween">whereBetween</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherein">whereIn</a>
<a href="https://laravel.com/docs/10.x/collections#method-whereinstrict">whereInStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-whereinstanceof">whereInstanceOf</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotbetween">whereNotBetween</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotin">whereNotIn</a>
<a href="https://laravel.com/docs/10.x/collections#method-wherenotinstrict">whereNotInStrict</a>
<a href="https://laravel.com/docs/10.x/collections#method-wrap">wrap</a>
<a href="https://laravel.com/docs/10.x/collections#method-zip">zip</a></p>
</div>
<blockquote>
<div class="mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-center callout"><div class="w-20 h-20 mb-6 flex items-center justify-center shrink-0 bg-red-600 lg:mb-0"><img src="https://laravel.com/img/callouts/exclamation.min.svg" class="opacity-75"></div><p class="mb-0 lg:ml-6">Methods that mutate the collection (such as <code>shift</code>, <code>pop</code>, <code>prepend</code> etc.) are <strong>not</strong> available on the <code>LazyCollection</code> class.</p></div>
</blockquote>
<p></p>
<h3 id="lazy-collection-methods"><a href="https://laravel.com/docs/10.x/collections#lazy-collection-methods">Lazy Collection Methods</a></h3>
<p>In addition to the methods defined in the <code>Enumerable</code> contract, the <code>LazyCollection</code> class contains the following methods:</p>
<p></p>
<h4 class="collection-method" id="method-takeUntilTimeout"><a href="https://laravel.com/docs/10.x/collections#method-takeUntilTimeout"><code>takeUntilTimeout()</code></a></h4>
<p>The <code>takeUntilTimeout</code> method returns a new lazy collection that will enumerate values until the specified time. After that time, the collection will then stop enumerating:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-205"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">times</span><span style="color: #BFC7D5;">(</span><span style="color: #89DDFF;">INF</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">takeUntilTimeout</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">now</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">addMinute</span><span style="color: #BFC7D5;">());</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">each</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$number</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #82AAFF;">dump</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">number</span><span style="color: #BFC7D5;">);</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">sleep</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">1</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 2</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> ...</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 58</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 59</span></div></code></pre><button id="clipButton-205" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-205"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>To illustrate the usage of this method, imagine an application that submits invoices from the database using a cursor. You could define a <a href="https://laravel.com/docs/10.x/scheduling">scheduled task</a> that runs every 15 minutes and only processes invoices for a maximum of 14 minutes:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-206"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> App\Models\</span><span style="color: #FFCB8B;">Invoice</span><span style="color: #BFC7D5;">;</span></div><div class="line"><span style="color: #C792EA;">use</span><span style="color: #BFC7D5;"> Illuminate\Support\</span><span style="color: #FFCB8B;">Carbon</span><span style="color: #BFC7D5;">;</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #FFCB8B;">Invoice</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">pending</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">cursor</span><span style="color: #BFC7D5;">()</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">takeUntilTimeout</span><span style="color: #BFC7D5;">(</span></div><div class="line"><span style="color: #BFC7D5;">        </span><span style="color: #FFCB8B;">Carbon</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">createFromTimestamp</span><span style="color: #BFC7D5;">(</span><span style="color: #82AAFF;">LARAVEL_START</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">add</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">14</span><span style="color: #BFC7D5;">, </span><span style="color: #D9F5DD;">'</span><span style="color: #C3E88D;">minutes</span><span style="color: #D9F5DD;">'</span><span style="color: #BFC7D5;">)</span></div><div class="line"><span style="color: #BFC7D5;">    )</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">each</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">fn</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #FFCB8B;">Invoice</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$invoice</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> =&gt; </span><span style="color: #BEC5D4;">$invoice</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">submit</span><span style="color: #BFC7D5;">());</span></div></code></pre><button id="clipButton-206" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-206"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-tapEach"><a href="https://laravel.com/docs/10.x/collections#method-tapEach"><code>tapEach()</code></a></h4>
<p>While the <code>each</code> method calls the given callback for each item in the collection right away, the <code>tapEach</code> method only calls the given callback as the items are being pulled out of the list one by one:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-207"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> Nothing has been dumped so far...</span></div><div class="line"><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">LazyCollection</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">times</span><span style="color: #BFC7D5;">(</span><span style="color: #89DDFF;">INF</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">tapEach</span><span style="color: #BFC7D5;">(</span><span style="color: #C792EA;">function</span><span style="color: #BFC7D5;"> </span><span style="color: #D9F5DD;">(</span><span style="color: #C792EA;">int</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$value</span><span style="color: #D9F5DD;">)</span><span style="color: #BFC7D5;"> {</span></div><div class="line"><span style="color: #BFC7D5;">    </span><span style="color: #82AAFF;">dump</span><span style="color: #BFC7D5;">($</span><span style="color: #BEC5D4;">value</span><span style="color: #BFC7D5;">);</span></div><div class="line"><span style="color: #BFC7D5;">});</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> Three items are dumped...</span></div><div class="line"><span style="color: #BEC5D4;">$array</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #BEC5D4;">$lazyCollection</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">take</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">3</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 1</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 2</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> 3</span></div></code></pre><button id="clipButton-207" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-207"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class="collection-method" id="method-remember"><a href="https://laravel.com/docs/10.x/collections#method-remember"><code>remember()</code></a></h4>
<p>The <code>remember</code> method returns a new lazy collection that will remember any values that have already been enumerated and will not retrieve them again on subsequent collection enumerations:</p>
<div class="relative code-block-wrapper"><pre><code data-theme="olaolu-palenight" data-lang="php" class="torchlight" style="background-color: #292D3E; --theme-selection-background: #7580B850;" id="clipText-208"><!-- Syntax highlighted by torchlight.dev --><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> No query has been executed yet...</span></div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #BFC7D5;"> </span><span style="color: #C792EA;">=</span><span style="color: #BFC7D5;"> </span><span style="color: #FFCB8B;">User</span><span style="color: #89DDFF;">::</span><span style="color: #82AAFF;">cursor</span><span style="color: #BFC7D5;">()</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">remember</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> The query is executed...</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> The first 5 users are hydrated from the database...</span></div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">take</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">5</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div><div class="line">&nbsp;</div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> First 5 users come from the collection's cache...</span></div><div class="line"><span style="color: #697098;">//</span><span style="color: #697098;"> The rest are hydrated from the database...</span></div><div class="line"><span style="color: #BEC5D4;">$users</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">take</span><span style="color: #BFC7D5;">(</span><span style="color: #F78C6C;">20</span><span style="color: #BFC7D5;">)</span><span style="color: #89DDFF;">-&gt;</span><span style="color: #82AAFF;">all</span><span style="color: #BFC7D5;">();</span></div></code></pre><button id="clipButton-208" class="md:block hidden copyBtn" aria-label="Copy to Clipboard" title="Copy to Clipboard" data-clipboard-target="#clipText-208"><svg class="fill-current h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>


</div>
                        </section>
                    </section>
                </div>
            </section>
        </div>
    </div>
</body>
</html>



------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-14cda33d-2049-4b5c-97ae-c2cc6336289e@mhtml.blink

@charset "utf-8";

.collection-method-list > p { columns: 10.8em 3; }

.collection-method-list a { display: block; overflow: hidden; text-overflow=
: ellipsis; white-space: nowrap; }
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-9eceb86c-5834-4337-9660-156b735dc59e@mhtml.blink

@charset "utf-8";

.collection-method code { font-size: 14px; }

.collection-method:not(.first-collection-method) { margin-top: 50px; }
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-f699fad2-7473-41a5-b3cb-31d5cfb52a68@mhtml.blink

@charset "utf-8";

.collection-method-list > p { columns: 10.8em 3; }

.collection-method-list a { display: block; overflow: hidden; text-overflow=
: ellipsis; white-space: nowrap; }
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-1b37c8cf-fe57-45d2-b4bc-b4b880b11757@mhtml.blink

@charset "utf-8";

footer { background-color: var(--docsearch-hit-background); z-index: 101; }
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://use.typekit.net/ins2wgm.css

@charset "utf-8";

@import url("https://p.typekit.net/p.css?s=3D1&k=3Dins2wgm&ht=3Dtk&f=3D1745=
4.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3D3993700&app=3Dt=
ypekit&e=3Dcss");

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/398a64/00000000000000007735dc06/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/398a64/00000000000000007735dc06/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/398a64/0000000000=
0000007735dc06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto;=
 font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/b0fedd/00000000000000007735dc01/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/b0fedd/00000000000000007735dc01/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/b0fedd/0000000000=
0000007735dc01/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto;=
 font-style: italic; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/9c393a/00000000000000007735db08/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/9c393a/00000000000000007735db08/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n7&v=3D3") format("woff"), url("https://use.typekit.net/af/9c393a/000000000=
00000007735db08/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/47cb70/00000000000000007735db06/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/47cb70/00000000000000007735db06/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n5&v=3D3") format("woff"), url("https://use.typekit.net/af/47cb70/000000000=
00000007735db06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/3cdb9c/00000000000000007735db09/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/3cdb9c/00000000000000007735db09/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n4&v=3D3") format("woff"), url("https://use.typekit.net/af/3cdb9c/000000000=
00000007735db09/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/716155/00000000000000007735dd24/30/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/716155/00000000000000007735dd24/30/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=
=3D3") format("woff"), url("https://use.typekit.net/af/716155/0000000000000=
0007735dd24/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/7e0390/0000000000000000000158e4/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/7e0390/0000000000000000000158e4/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/7e0390/0000000000000=
000000158e4/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/4cf72c/0000000000000000000158e6/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/4cf72c/0000000000000000000158e6/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/4cf72c/0000000000000=
000000158e6/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/e3f590/0000000000000000000158e7/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/e3f590/0000000000000000000158e7/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/e3f590/0000000000000=
000000158e7/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/396f3b/0000000000000000000158e8/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/396f3b/0000000000000000000158e8/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/396f3b/0000000000000=
000000158e8/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 400; font-stretch: normal; }

.tk-source-code-pro { font-family: source-code-pro, monospace; }

.tk-scandia-line-web { font-family: scandia-line-web, sans-serif; }

.tk-scandia-web { font-family: scandia-web, sans-serif; }
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://p.typekit.net/p.css?s=1&k=ins2wgm&ht=tk&f=17454.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3993700&app=typekit&e=css

@charset "utf-8";
=0A
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/build/assets/app-8aa4d27a.css

@charset "utf-8";

*, ::before, ::after { box-sizing: border-box; border-width: 0px; border-st=
yle: solid; border-color: rgb(231, 232, 242); }

::before, ::after { --tw-content: ""; }

html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-family: =
scandia-web, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-feature-settings: normal; font-variation-settings: normal; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, samp, pre { font-family: source-code-pro, ui-monospace, SFMono-R=
egular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospac=
e; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; font-weight: inherit; line-height: inherit; color: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

button, [type=3D"button"], [type=3D"reset"], [type=3D"submit"] { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; padding: 0px; }

legend { padding: 0px; }

ol, ul, menu { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(181, 181=
, 189); }

button, [role=3D"button"] { cursor: pointer; }

:disabled { cursor: default; }

img, svg, video, canvas, audio, iframe, embed, object { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

[hidden] { display: none; }

*, ::before, ::after { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: =
; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-=
numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ri=
ng-offset-color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-off=
set-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000;=
 --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contr=
ast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ;=
 --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brig=
htness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdro=
p-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backd=
rop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: ; --tw-sla=
shed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fr=
action: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-=
color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-offset-shadow=
: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000; --tw-shad=
ow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --t=
w-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepi=
a: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; =
--tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rota=
te: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-satura=
te: ; --tw-backdrop-sepia: ; }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.docs_main h1, .docs_main h2, .docs_main h3, .docs_main h4, .docs_main h5, =
.docs_main h6 { font-weight: 500; margin-bottom: 0.75em; }

.docs_main h2, .docs_main h3 { margin-top: 2em; }

.docs_main h4 { margin-top: 1.5em; }

.docs_main h1 { font-size: 2em; letter-spacing: -1px; line-height: 1.125em;=
 margin-bottom: 0.65em; }

@media (min-width: 768px) {
  .docs_main h1 { font-size: 2.5em; }
}

@media (min-width: 1024px) {
  .docs_main h1 { font-size: 3em; }
}

@media (min-width: 1280px) {
  .docs_main h1 { font-size: 3.5em; }
}

@media (min-width: 1536px) {
  .docs_main h1 { font-size: 4em; }
}

.docs_main h2 { font-size: 1.75em; font-weight: 400; letter-spacing: -0.5px=
; line-height: 1.125em; }

@media (min-width: 768px) {
  .docs_main h2 { font-size: 2.25em; }
}

@media (min-width: 1024px) {
  .docs_main h2 { font-size: 3em; }
}

.docs_main h3 { font-size: 1.25em; font-weight: 500; line-height: 1.25em; l=
etter-spacing: -0.33px; }

@media (min-width: 640px) {
  .docs_main h3 { font-size: 1.75em; }
}

@media (min-width: 768px) {
  .docs_main h3 { font-size: 2em; }
}

.docs_main h4 { font-size: 1em; font-weight: 400; letter-spacing: -0.25px; =
}

@media (min-width: 640px) {
  .docs_main h4 { font-size: 1.5em; }
}

.docs_main h5 { font-size: 0.95em; font-weight: 700; line-height: 1.666em; =
color: rgb(86, 84, 84); }

@media (min-width: 640px) {
  .docs_main h5 { font-size: 1.125em; }
}

.docs_main h6 { font-size: 0.875em; font-weight: 500; color: rgb(119, 119, =
119); }

.docs_main a { position: relative; text-decoration: none; transition: all 0=
.3s ease 0s; }

.docs_main a.learn_more { color: rgb(235, 68, 50); font-weight: 500; }

.docs_main a.learn_more span { display: inline-block; transition: transform=
 0.3s ease 0s; }

.docs_main a.learn_more:hover span { transform: translate(0.5em); }

.docs_main p { font-size: 1em; line-height: 1.666em; color: rgb(86, 84, 84)=
; }

.docs_main p strong { font-weight: 500; }

.docs_main p.small { font-size: 0.75em; line-height: 1.714em; }

@media (min-width: 768px) {
  .docs_main p { font-size: 1.125em; }
  .docs_main p.small { font-size: 0.875em; }
}

.docs_main p + pre { margin-top: 0px; }

.docs_main p, .docs_main ul, .docs_main ol, .docs_main pre { margin-bottom:=
 1.5em; }

.docs_main p a, .docs_main ul a, .docs_main ol a, .docs_main pre a { color:=
 rgb(235, 68, 50); text-decoration: underline; word-break: break-word; }

.docs_main p a:hover, .docs_main ul a:hover, .docs_main ol a:hover, .docs_m=
ain pre a:hover { }

.docs_main q, .docs_main blockquote p { quotes: "=E2=80=9C" "=E2=80=9D" "=
=E2=80=98" "=E2=80=99"; }

@media (min-width: 640px) {
  .docs_main blockquote { margin-left: 0px; margin-right: 0px; }
}

.docs_main span.small_text { display: block; font-size: 0.625em; line-heigh=
t: 1.4em; color: rgb(86, 84, 84); }

.docs_main span.label, .docs_main label { display: block; font-size: 0.625e=
m; line-height: 1.4em; text-transform: uppercase; opacity: 0.4; margin-bott=
om: 0.875em; letter-spacing: 2.5px; }

.docs_main code { font-size: 0.875em; font-family: source-code-pro, ui-mono=
space, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier=
 New", monospace; line-height: 1.714em; color: rgb(35, 35, 35); }

.docs_main :not(pre) > code { background: rgb(251, 251, 253); color: rgb(20=
2, 71, 63); padding: 0px 0.25em; }

.list-custom li { position: relative; padding-left: 1rem; }

.list-custom li::before { content: ""; position: absolute; top: 0.15em; lef=
t: 0px; width: 9px; height: 10px; background: url("/img/icons/ul_marker.min=
.svg") 50% center / contain no-repeat; }

:not(pre) > code { color: rgb(35, 35, 35); background: none; text-align: le=
ft; white-space: pre; word-spacing: normal; word-break: normal; overflow-wr=
ap: normal; tab-size: 4; hyphens: none; }

.docs_main :not(pre) > code { display: inline-flex; padding: 0px 0.125rem; =
border-radius: 0.125rem; max-width: 100%; overflow-x: auto; vertical-align:=
 middle; }

:is(.dark .docs_main :not(pre) > code) { --tw-bg-opacity: 1; background-col=
or: rgb(37 42 55 / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: rgb(=
235 68 50 / var(--tw-text-opacity)); }

pre { margin-top: 1rem; margin-bottom: 1rem; overflow-x: auto; tab-size: 4;=
 white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap:=
 normal; box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 1px; position: relative; b=
order-radius: 0.5rem; --tw-bg-opacity: 1; background-color: rgb(37 42 55 / =
var(--tw-bg-opacity)); }

.code-block-wrapper .copyBtn { position: absolute; right: 0.5rem; top: 0.5r=
em; --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-text-opacity));=
 opacity: 0.25; outline: transparent solid 2px; outline-offset: 2px; }

.code-block-wrapper .copyBtn:hover { --tw-text-opacity: 1; color: rgb(147 1=
47 158 / var(--tw-text-opacity)); opacity: 1; }

pre .copyBtn:hover, pre .copyBtn:focus, pre .copyBtn:active { --tw-text-opa=
city: 1; color: rgb(255 255 255 / var(--tw-text-opacity)); outline: transpa=
rent solid 2px; outline-offset: 2px; }

pre code.torchlight { display: block; min-width: max-content; padding-top: =
1rem; padding-bottom: 1rem; --tw-bg-opacity: 1 !important; background-color=
: rgb(37 42 55 / var(--tw-bg-opacity)) !important; }

pre code.torchlight .line { padding-left: 1rem; padding-right: 1rem; }

pre code.torchlight .line-number { padding-right: 1rem; }

.docs_sidebar ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_sidebar ul li { display: block; padding: 0.65em 0px; white-space: now=
rap; }

.docs_sidebar ul li h2 { display: block; font-size: 0.875em; font-weight: 5=
00; color: rgb(35, 35, 35); text-decoration: none; margin-bottom: 0px; curs=
or: pointer; transition: all 0.3s ease 0s; }

.docs_sidebar ul li h2:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul li a { display: block; font-size: 0.875em; font-weight: 50=
0; color: rgb(35, 35, 35); text-decoration: none; transition: transform 0.3=
s ease 0s; }

.docs_sidebar ul li a:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul ul { overflow: hidden; max-height: 0px; transition: max-he=
ight 0.45s ease 0s; }

.docs_sidebar ul ul li a { position: relative; padding-left: 1em; font-weig=
ht: 400; line-height: 1.25; }

.docs_sidebar ul ul li.active a::before { content: ""; position: absolute; =
top: 0.25em; left: 0px; width: 0.5rem; height: 0.5rem; background: url("/im=
g/icons/active_marker.min.svg") center center no-repeat; }

.docs_sidebar ul .sub--on > h2 { margin-bottom: 1em; }

.docs_sidebar ul .sub--on ul { max-height: none; }

:root { --docsearch-primary-color: #5468ff; --docsearch-text-color: #1c1e21=
; --docsearch-spacing: 12px; --docsearch-icon-stroke-width: 1.4; --docsearc=
h-highlight-color: var(--docsearch-primary-color); --docsearch-muted-color:=
 #969faf; --docsearch-container-background: rgba(101,108,133,.8); --docsear=
ch-logo-color: #5468ff; --docsearch-modal-width: 560px; --docsearch-modal-h=
eight: 600px; --docsearch-modal-background: #f5f6f7; --docsearch-modal-shad=
ow: inset 1px 1px 0 0 hsla(0,0%,100%,.5),0 3px 8px 0 #555a64; --docsearch-s=
earchbox-height: 56px; --docsearch-searchbox-background: #ebedf0; --docsear=
ch-searchbox-focus-background: #fff; --docsearch-searchbox-shadow: inset 0 =
0 0 2px var(--docsearch-primary-color); --docsearch-hit-height: 56px; --doc=
search-hit-color: #444950; --docsearch-hit-active-color: #fff; --docsearch-=
hit-background: #fff; --docsearch-hit-shadow: 0 1px 3px 0 #d4d9e1; --docsea=
rch-key-gradient: linear-gradient(-225deg,#d5dbe4,#f8f8f8); --docsearch-key=
-shadow: inset 0 -2px 0 0 #cdcde6,inset 0 0 1px 1px #fff,0 1px 2px 1px rgba=
(30,35,90,.4); --docsearch-footer-height: 44px; --docsearch-footer-backgrou=
nd: #fff; --docsearch-footer-shadow: 0 -1px 0 0 #e0e3e8,0 -3px 6px 0 rgba(6=
9,98,155,.12); }

html[data-theme=3D"dark"] { --docsearch-text-color: #f5f6f7; --docsearch-co=
ntainer-background: rgba(9,10,17,.8); --docsearch-modal-background: #15172a=
; --docsearch-modal-shadow: inset 1px 1px 0 0 #2c2e40,0 3px 8px 0 #000309; =
--docsearch-searchbox-background: #090a11; --docsearch-searchbox-focus-back=
ground: #000; --docsearch-hit-color: #bec3c9; --docsearch-hit-shadow: none;=
 --docsearch-hit-background: #090a11; --docsearch-key-gradient: linear-grad=
ient(-26.5deg,#565872,#31355b); --docsearch-key-shadow: inset 0 -2px 0 0 #2=
82d55,inset 0 0 1px 1px #51577d,0 2px 2px 0 rgba(3,4,9,.3); --docsearch-foo=
ter-background: #1e2136; --docsearch-footer-shadow: inset 0 1px 0 0 rgba(73=
,76,106,.5),0 -4px 8px 0 rgba(0,0,0,.2); --docsearch-logo-color: #fff; --do=
csearch-muted-color: #7f8497; }

.DocSearch--active { overflow: hidden !important; }

.DocSearch-Container, .DocSearch-Container * { box-sizing: border-box; }

.DocSearch-Container { background-color: var(--docsearch-container-backgrou=
nd); height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw; z-i=
ndex: 200; }

.DocSearch-Container a { text-decoration: none; }

.DocSearch-Link { appearance: none; background: none; border: 0px; color: v=
ar(--docsearch-highlight-color); cursor: pointer; font: inherit; margin: 0p=
x; padding: 0px; }

.DocSearch-Modal { background: var(--docsearch-modal-background); border-ra=
dius: 6px; box-shadow: var(--docsearch-modal-shadow); flex-direction: colum=
n; margin: 60px auto auto; max-width: var(--docsearch-modal-width); positio=
n: relative; }

.DocSearch-SearchBar { display: flex; padding: var(--docsearch-spacing) var=
(--docsearch-spacing) 0; }

.DocSearch-Form { align-items: center; background: var(--docsearch-searchbo=
x-focus-background); border-radius: 4px; box-shadow: var(--docsearch-search=
box-shadow); display: flex; height: var(--docsearch-searchbox-height); marg=
in: 0px; padding: 0 var(--docsearch-spacing); position: relative; width: 10=
0%; }

.DocSearch-Input { appearance: none; background: transparent; border: 0px; =
color: var(--docsearch-text-color); flex: 1 1 0%; font-style: inherit; font=
-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height=
: inherit; font-family: inherit; font-optical-sizing: inherit; font-kerning=
: inherit; font-feature-settings: inherit; font-variation-settings: inherit=
; font-size: 1.2em; height: 100%; outline: none; padding: 0px 0px 0px 8px; =
width: 80%; }

.DocSearch-Input::placeholder { color: var(--docsearch-muted-color); opacit=
y: 1; }

.DocSearch-Input::-webkit-search-cancel-button, .DocSearch-Input::-webkit-s=
earch-decoration, .DocSearch-Input::-webkit-search-results-button, .DocSear=
ch-Input::-webkit-search-results-decoration { display: none; }

.DocSearch-LoadingIndicator, .DocSearch-MagnifierLabel, .DocSearch-Reset { =
margin: 0px; padding: 0px; }

.DocSearch-MagnifierLabel, .DocSearch-Reset { align-items: center; color: v=
ar(--docsearch-highlight-color); display: flex; justify-content: center; }

.DocSearch-Container--Stalled .DocSearch-MagnifierLabel, .DocSearch-Loading=
Indicator { display: none; }

.DocSearch-Container--Stalled .DocSearch-LoadingIndicator { align-items: ce=
nter; color: var(--docsearch-highlight-color); display: flex; justify-conte=
nt: center; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Reset { animation: auto ease 0s 1 normal none running none; ap=
pearance: none; background: none; border: 0px; border-radius: 50%; color: v=
ar(--docsearch-icon-color); cursor: pointer; right: 0px; stroke-width: var(=
--docsearch-icon-stroke-width); }
}

.DocSearch-Reset { animation: 0.1s ease-in 0s 1 normal forwards running fad=
e-in; appearance: none; background: none; border: 0px; border-radius: 50%; =
color: var(--docsearch-icon-color); cursor: pointer; padding: 2px; right: 0=
px; stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Reset[hidden] { display: none; }

.DocSearch-Reset:hover { color: var(--docsearch-highlight-color); }

.DocSearch-LoadingIndicator svg, .DocSearch-MagnifierLabel svg { height: 24=
px; width: 24px; }

.DocSearch-Cancel { display: none; }

.DocSearch-Dropdown { max-height: calc(var(--docsearch-modal-height) - var(=
--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch-=
footer-height)); min-height: var(--docsearch-spacing); overflow-y: overlay;=
 padding: 0 var(--docsearch-spacing); }

.DocSearch-Dropdown::-webkit-scrollbar { width: 12px; }

.DocSearch-Dropdown::-webkit-scrollbar-track { background: transparent; }

.DocSearch-Dropdown::-webkit-scrollbar-thumb { background-color: var(--docs=
earch-muted-color); border: 3px solid var(--docsearch-modal-background); bo=
rder-radius: 20px; }

.DocSearch-Dropdown ul { list-style: none; margin: 0px; padding: 0px; }

.DocSearch-Label { font-size: 0.75em; line-height: 1.6em; }

.DocSearch-Help, .DocSearch-Label { color: var(--docsearch-muted-color); }

.DocSearch-Help { font-size: 0.9em; margin: 0px; user-select: none; }

.DocSearch-Title { font-size: 1.2em; }

.DocSearch-Logo a { display: flex; }

.DocSearch-Logo svg { color: var(--docsearch-logo-color); margin-left: 8px;=
 }

.DocSearch-Hits:last-of-type { margin-bottom: 24px; }

.DocSearch-Hits mark { background: none; color: var(--docsearch-highlight-c=
olor); }

.DocSearch-HitsFooter { color: var(--docsearch-muted-color); display: flex;=
 font-size: 0.85em; justify-content: center; margin-bottom: var(--docsearch=
-spacing); padding: var(--docsearch-spacing); }

.DocSearch-HitsFooter a { border-bottom: 1px solid; color: inherit; }

.DocSearch-Hit { border-radius: 4px; display: flex; padding-bottom: 4px; po=
sition: relative; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--deleting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--deleting { opacity: 0; transition: all 0.25s linear 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--favoriting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--favoriting { transform: scale(0); transform-origin: center =
top; transition: all 0.25s linear 0.25s; }

.DocSearch-Hit a { background: var(--docsearch-hit-background); border-radi=
us: 4px; box-shadow: var(--docsearch-hit-shadow); display: block; padding-l=
eft: var(--docsearch-spacing); width: 100%; }

.DocSearch-Hit-source { background: var(--docsearch-modal-background); colo=
r: var(--docsearch-highlight-color); font-size: 0.85em; font-weight: 600; l=
ine-height: 32px; margin: 0px -4px; padding: 8px 4px 0px; position: sticky;=
 top: 0px; z-index: 10; }

.DocSearch-Hit-Tree { color: var(--docsearch-muted-color); height: var(--do=
csearch-hit-height); opacity: 0.5; stroke-width: var(--docsearch-icon-strok=
e-width); width: 24px; }

.DocSearch-Hit[aria-selected=3D"true"] a { background-color: var(--docsearc=
h-highlight-color); }

.DocSearch-Hit[aria-selected=3D"true"] mark { text-decoration: underline; }

.DocSearch-Hit-Container { align-items: center; color: var(--docsearch-hit-=
color); display: flex; flex-direction: row; height: var(--docsearch-hit-hei=
ght); padding: 0 var(--docsearch-spacing) 0 0; }

.DocSearch-Hit-icon { height: 20px; width: 20px; }

.DocSearch-Hit-action, .DocSearch-Hit-icon { color: var(--docsearch-muted-c=
olor); stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Hit-action { align-items: center; display: flex; height: 22px; w=
idth: 22px; }

.DocSearch-Hit-action svg { display: block; height: 18px; width: 18px; }

.DocSearch-Hit-action + .DocSearch-Hit-action { margin-left: 6px; }

.DocSearch-Hit-action-button { appearance: none; background: none; border: =
0px; border-radius: 50%; color: inherit; cursor: pointer; padding: 2px; }

svg.DocSearch-Hit-Select-Icon { display: none; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Select-Icon { display=
: block; }

.DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { ba=
ckground: rgba(0, 0, 0, 0.2); transition: background-color 0.1s ease-in 0s;=
 }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
transition: none 0s ease 0s; }
}

.DocSearch-Hit-action-button:focus path, .DocSearch-Hit-action-button:hover=
 path { fill: rgb(255, 255, 255); }

.DocSearch-Hit-content-wrapper { display: flex; flex: 1 1 auto; flex-direct=
ion: column; font-weight: 500; justify-content: center; line-height: 1.2em;=
 margin: 0px 8px; overflow-x: hidden; position: relative; text-overflow: el=
lipsis; white-space: nowrap; width: 80%; }

.DocSearch-Hit-title { font-size: 0.9em; }

.DocSearch-Hit-path { color: var(--docsearch-muted-color); font-size: 0.75e=
m; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-action, .DocSearch-Hi=
t[aria-selected=3D"true"] .DocSearch-Hit-icon, .DocSearch-Hit[aria-selected=
=3D"true"] .DocSearch-Hit-path, .DocSearch-Hit[aria-selected=3D"true"] .Doc=
Search-Hit-text, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-titl=
e, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Tree, .DocSearch-H=
it[aria-selected=3D"true"] mark { color: var(--docsearch-hit-active-color) =
!important; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
background: rgba(0, 0, 0, 0.2); transition: none 0s ease 0s; }
}

.DocSearch-ErrorScreen, .DocSearch-NoResults, .DocSearch-StartScreen { font=
-size: 0.9em; margin: 0px auto; padding: 36px 0px; text-align: center; widt=
h: 80%; }

.DocSearch-Screen-Icon { color: var(--docsearch-muted-color); padding-botto=
m: 12px; }

.DocSearch-NoResults-Prefill-List { display: inline-block; padding-bottom: =
24px; text-align: left; }

.DocSearch-NoResults-Prefill-List ul { display: inline-block; padding: 8px =
0px 0px; }

.DocSearch-NoResults-Prefill-List li { list-style-position: inside; list-st=
yle-type: "=C2=BB "; }

.DocSearch-Prefill { appearance: none; background: none; border: 0px; borde=
r-radius: 1em; color: var(--docsearch-highlight-color); cursor: pointer; di=
splay: inline-block; font-size: 1em; font-weight: 700; padding: 0px; }

.DocSearch-Prefill:focus, .DocSearch-Prefill:hover { outline: none; text-de=
coration: underline; }

.DocSearch-Footer { align-items: center; background: var(--docsearch-footer=
-background); border-radius: 0px 0px 8px 8px; box-shadow: var(--docsearch-f=
ooter-shadow); display: flex; flex-direction: row-reverse; flex-shrink: 0; =
height: var(--docsearch-footer-height); justify-content: space-between; pad=
ding: 0 var(--docsearch-spacing); position: relative; user-select: none; wi=
dth: 100%; z-index: 300; }

.DocSearch-Commands { color: var(--docsearch-muted-color); display: flex; l=
ist-style: none; margin: 0px; padding: 0px; }

.DocSearch-Commands li { align-items: center; display: flex; }

.DocSearch-Commands li:not(:last-of-type) { margin-right: 0.8em; }

.DocSearch-Commands-Key { align-items: center; background: var(--docsearch-=
key-gradient); border-radius: 2px; box-shadow: var(--docsearch-key-shadow);=
 display: flex; height: 18px; justify-content: center; margin-right: 0.4em;=
 padding: 0px 0px 1px; color: var(--docsearch-muted-color); border: 0px; wi=
dth: 20px; }

@media (max-width: 768px) {
  :root { --docsearch-spacing: 10px; --docsearch-footer-height: 40px; }
  .DocSearch-Dropdown { height: 100%; }
  .DocSearch-Container { height: calc(var(--docsearch-vh, 1vh)*100); positi=
on: absolute; }
  .DocSearch-Footer { border-radius: 0px; bottom: 0px; position: absolute; =
}
  .DocSearch-Hit-content-wrapper { display: flex; position: relative; width=
: 80%; }
  .DocSearch-Modal { border-radius: 0px; box-shadow: none; height: calc(var=
(--docsearch-vh, 1vh)*100); margin: 0px; max-width: 100%; width: 100%; }
  .DocSearch-Dropdown { max-height: calc(var(--docsearch-vh, 1vh)*100 - var=
(--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch=
-footer-height)); }
  .DocSearch-Cancel { appearance: none; background: none; border: 0px; colo=
r: var(--docsearch-highlight-color); cursor: pointer; display: inline-block=
; flex: 0 0 auto; font-style: inherit; font-variant: inherit; font-stretch:=
 inherit; line-height: inherit; font-family: inherit; font-optical-sizing: =
inherit; font-kerning: inherit; font-feature-settings: inherit; font-variat=
ion-settings: inherit; font-size: 1em; font-weight: 500; margin-left: var(-=
-docsearch-spacing); outline: none; overflow: hidden; padding: 0px; user-se=
lect: none; white-space: nowrap; }
  .DocSearch-Commands, .DocSearch-Hit-Tree { display: none; }
}

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

:root { --docsearch-primary-color: #F9322C; }

html[data-theme=3D"dark"]:root { --docsearch-primary-color: #F9322C; }

.DocSearch-Button { width: 100%; text-align: left; }

.DocSearch-Button-Container { display: inline-block; margin-right: 5px; }

.DocSearch-Search-Icon { display: inline-block; margin-right: 14px; margin-=
top: -2px; width: 15px; height: 15px; stroke-width: 2; }

.main-header .DocSearch-Button-Placeholder, .DocSearch-Button-Keys { displa=
y: none; }

.main-header .DocSearch-Button-Container { margin-right: 0px; }

.main-header .DocSearch-Search-Icon { color: rgb(35, 35, 35); width: 20px; =
height: 20px; stroke-width: 1.5; }

.callout p { margin-bottom: 0px; }

.docs_main a[name] { position: relative; display: block; visibility: hidden=
; top: -45px; }

.docs_main table { border-collapse: collapse; width: 100%; font-size: 13px;=
 margin-bottom: 2em; }

.docs_main table th, .docs_main table td { border: 1px solid rgb(215, 215, =
220); padding: 10px; text-align: left; }

.docs_main table th { font-size: 16px; }

@media (min-width: 640px) {
  .docs_main a[name] { position: relative; display: block; visibility: hidd=
en; top: -30px; }
}

.docs_main .page_title { display: none; }

.docs_main h1 { font-size: 2.5em; letter-spacing: 0em; }

.docs_main h2 { font-size: 1.75em; letter-spacing: 0px; }

.docs_main h3 { font-size: 1.25em; letter-spacing: 0px; font-weight: 500; }

.docs_main h4 { font-size: 1em; font-weight: 500; letter-spacing: 0px; }

.docs_main h4 a, .docs_main h3 a, .docs_main h2 a { color: rgb(35, 35, 35);=
 }

.docs_main h4 a::before, .docs_main h3 a::before, .docs_main h2 a::before {=
 content: "#"; font-weight: 400; position: absolute; color: rgb(235, 68, 50=
); opacity: 0.6; }

.docs_main h3 a::before, .docs_main h2 a::before { margin-left: -25px; font=
-size: 28px; }

.docs_main h4 a::before { margin-left: -18px; font-size: 17px; }

.docs_main code { font-size: 0.8rem; font-weight: 500; line-height: 1.9; co=
lor: rgb(35, 35, 35); }

.docs_main p { font-size: 1rem; line-height: 1.8em; }

.docs_main p code { font-size: 0.8rem; }

.docs_main ul:not(:first-of-type), .docs_main .content-list ul { list-style=
-type: none; margin: 0px 0px 2.5em; padding: 0px; }

.docs_main ul:not(:first-of-type) li, .docs_main .content-list ul li { posi=
tion: relative; display: block; padding-left: 1.25em; margin-bottom: 1rem; =
font-size: 0.89em; color: rgb(86, 84, 84); line-height: 1.714em; }

.docs_main ul:not(:first-of-type) li a, .docs_main .content-list ul li a { =
text-decoration: none; }

.docs_main ul:not(:first-of-type) li code, .docs_main .content-list ul li c=
ode { font-size: 0.875em; }

.docs_main ul:not(:first-of-type) li::before, .docs_main .content-list ul l=
i::before { content: ""; position: absolute; top: 0.4em; left: 0px; width: =
9px; height: 10px; background: url("/img/icons/ul_marker.min.svg") center c=
enter / contain no-repeat; }

.docs_main h1 + ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_main h1 + ul li { display: block; margin-bottom: 0.5em; }

.docs_main h1 + ul li a { position: relative; font-size: 0.89em; font-weigh=
t: 500; color: rgb(35, 35, 35); text-decoration: none; }

.docs_main h1 + ul li a::before { content: "# "; color: rgb(235, 68, 50); }

.docs_main h1 + ul ul { margin-top: 0.5em; padding: 0px; margin-bottom: 0px=
; }

.docs_main h1 + ul ul li { padding-left: 1.5em; }

.docs_main h1 + ul ul li a { font-weight: 400; }

#carbonads { position: fixed; bottom: 20px; right: 20px; background-color: =
rgb(247, 248, 251); z-index: 100; box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 1=
px; padding: 0.625em; max-width: 130px; box-sizing: content-box; }

#carbonads span { display: block; }

#carbonads img { display: block; margin-bottom: 0.75em; }

#carbonads .carbon-text { display: block; font-size: 0.75em; line-height: 1=
.4em; color: rgb(86, 84, 84); }

#carbonads .carbon-poweredby { font-size: 0.5em; text-transform: uppercase;=
 letter-spacing: 1px; line-height: 1; color: rgb(119, 119, 119); }

@media only screen and (min-width: 320px) and (max-width: 1239px) {
  #carbonads { position: relative; float: none; bottom: initial; right: ini=
tial; margin: 20px 0px; max-width: 330px; padding: 1em; }
  #carbonads .carbon-wrap { display: flex; flex-direction: row; }
  #carbonads img { margin: 0px 1em 0px 0px; }
  #carbonads .carbon-text { font-size: 0.825em; margin-bottom: 1em; }
  #carbonads .carbon-poweredby { position: absolute; left: 162px; bottom: 1=
5px; }
}

@media only screen and (min-width: 320px) and (max-width: 429px) {
  #carbonads .carbon-wrap { flex-direction: column; }
  #carbonads img { margin: 0px 0px 0.5em; }
  #carbonads .carbon-text { margin-bottom: initial; }
  #carbonads .carbon-poweredby { position: initial; left: initial; right: i=
nitial; }
}

@media only print {
  #carbonads { display: none; }
}

#skip-to-content-link:not(:focus) { position: absolute !important; clip: re=
ct(0px, 0px, 0px, 0px) !important; width: 1px !important; height: 1px !impo=
rtant; padding: 0px !important; margin: -1px !important; overflow: hidden !=
important; }

#skip-to-content-link { z-index: 2147483647; }

#main-content { outline: none; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border-width: 0px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-y-0 { top: 0px; bottom: 0px; }

.-left-2 { left: -0.5rem; }

.-left-6 { left: -1.5rem; }

.-right-2 { right: -0.5rem; }

.-right-\[40px\] { right: -40px; }

.-top-24 { top: -6rem; }

.bottom-0 { bottom: 0px; }

.bottom-12 { bottom: 3rem; }

.bottom-40 { bottom: 10rem; }

.left-0 { left: 0px; }

.left-2 { left: 0.5rem; }

.left-28 { left: 7rem; }

.left-3 { left: 0.75rem; }

.left-\[-20\%\] { left: -20%; }

.right-0 { right: 0px; }

.right-1\/3 { right: 33.3333%; }

.right-1\/4 { right: 25%; }

.right-16 { right: 4rem; }

.right-6 { right: 1.5rem; }

.right-8 { right: 2rem; }

.right-\[-20\%\] { right: -20%; }

.right-\[12\%\] { right: 12%; }

.right-\[20\%\] { right: 20%; }

.right-\[300px\] { right: 300px; }

.right-\[80px\] { right: 80px; }

.top-0 { top: 0px; }

.top-12 { top: 3rem; }

.top-2\/3 { top: 66.6667%; }

.top-20 { top: 5rem; }

.top-24 { top: 6rem; }

.top-3 { top: 0.75rem; }

.top-40 { top: 10rem; }

.top-48 { top: 12rem; }

.top-64 { top: 16rem; }

.top-\[25\%\] { top: 25%; }

.top-\[300px\] { top: 300px; }

.top-\[45\%\] { top: 45%; }

.top-\[480px\] { top: 480px; }

.top-\[50px\] { top: 50px; }

.z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-50 { z-index: 50; }

.col-span-12 { grid-column: span 12 / span 12; }

.col-span-6 { grid-column: span 6 / span 6; }

.m-0 { margin: 0px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.mb-0 { margin-bottom: 0px; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-6 { margin-bottom: 1.5rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-2\.5 { margin-left: 0.625rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-8 { margin-left: 2rem; }

.mr-2 { margin-right: 0.5rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-12 { margin-top: 3rem; }

.mt-14 { margin-top: 3.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-2\.5 { margin-top: 0.625rem; }

.mt-24 { margin-top: 6rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-8 { margin-top: 2rem; }

.mt-px { margin-top: 1px; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.grid { display: grid; }

.hidden { display: none; }

.aspect-square { aspect-ratio: 1 / 1; }

.h-10 { height: 2.5rem; }

.h-12 { height: 3rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-20 { height: 5rem; }

.h-4 { height: 1rem; }

.h-5 { height: 1.25rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-\[300px\] { height: 300px; }

.h-\[640px\] { height: 640px; }

.h-full { height: 100%; }

.max-h-full { max-height: 100%; }

.min-h-0 { min-height: 0px; }

.min-h-full { min-height: 100%; }

.w-1\/2 { width: 50%; }

.w-10 { width: 2.5rem; }

.w-12 { width: 3rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\.5 { width: 0.625rem; }

.w-20 { width: 5rem; }

.w-224 { width: 56rem; }

.w-4 { width: 1rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-9 { width: 2.25rem; }

.w-\[302px\] { width: 302px; }

.w-\[640px\] { width: 640px; }

.w-full { width: 100%; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-\[1100px\] { max-width: 1100px; }

.max-w-\[218px\] { max-width: 218px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-none { max-width: none; }

.max-w-prose { max-width: 65ch; }

.max-w-screen-2xl { max-width: 1536px; }

.max-w-screen-lg { max-width: 1024px; }

.max-w-screen-xl { max-width: 1280px; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.flex-1 { flex: 1 1 0%; }

.flex-shrink-0, .shrink-0 { flex-shrink: 0; }

.origin-top { transform-origin: center top; }

.-translate-x-1 { --tw-translate-x: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-1 { --tw-translate-y: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-12 { --tw-translate-y: -3rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-20 { --tw-translate-y: -5rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-8 { --tw-translate-y: -2rem; transform: translate(var(--tw-tr=
anslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-sk=
ew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sc=
ale-y)); }

.translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.translate-x-32 { --tw-translate-x: 8rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-rotate-1 { --tw-rotate: -1deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; transform: translate(var(--tw-translate-=
x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) s=
kewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));=
 }

.rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translate-x),v=
ar(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY=
(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(var(--t=
w-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }

.scale-105 { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }

.scale-75 { --tw-scale-x: .75; --tw-scale-y: .75; transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(=
--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(=
--tw-scale-y)); }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))=
 scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@keyframes cube {=20
  50% { transform: translateY(1rem); }
}

.animate-cube { animation: 6s ease-in-out 0s infinite normal none running c=
ube; }

.resize { resize: both; }

.list-disc { list-style-type: disc; }

.appearance-none { appearance: none; }

.columns-1 { columns: 1; }

.break-inside-avoid-column { break-inside: avoid-column; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-6 { grid-template-columns: repeat(6, minmax(0px, 1fr)); }

.grid-cols-8 { grid-template-columns: repeat(8, minmax(0px, 1fr)); }

.flex-col { flex-direction: column; }

.flex-wrap { flex-wrap: wrap; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.gap-10 { gap: 2.5rem; }

.gap-12 { gap: 3rem; }

.gap-3 { gap: 0.75rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-x-10 { column-gap: 2.5rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-y-12 { row-gap: 3rem; }

.gap-y-6 { row-gap: 1.5rem; }

.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(.75rem * var(--tw-space-x-reverse)); margin-left: calc(.75r=
em * calc(1 - var(--tw-space-x-reverse))); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1rem * var(--tw-space-x-reverse)); margin-left: calc(1rem *=
 calc(1 - var(--tw-space-x-reverse))); }

.space-x-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1.25rem * var(--tw-space-x-reverse)); margin-left: calc(1.2=
5rem * calc(1 - var(--tw-space-x-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.25rem * var(--tw-space-y-reverse)); }

.space-y-12 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; ma=
rgin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(3rem * var(--tw-space-y-reverse)); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(.5rem * var(--tw-space-y-reverse)); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.75rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.75rem * var(--tw-space-y-reverse)); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(1rem * var(--tw-space-y-reverse)); }

.space-y-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom=
: calc(1.25rem * var(--tw-space-y-reverse)); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(2rem * var(--tw-space-y-reverse)); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-right-width: calc(1px * var(--tw-divide-x-reverse)); border-left-width:=
 calc(1px * calc(1 - var(--tw-divide-x-reverse))); }

.divide-dark-500 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(57 64 86 / var(--tw-divide-opacity)); }

.divide-gray-100 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(245 245 250 / var(--tw-divide-opacity)); }

.self-stretch { align-self: stretch; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.whitespace-nowrap { white-space: nowrap; }

.rounded-2xl { border-radius: 1rem; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-none { border-radius: 0px; }

.rounded-b-lg { border-bottom-right-radius: 0.5rem; border-bottom-left-radi=
us: 0.5rem; }

.rounded-b-none { border-bottom-right-radius: 0px; border-bottom-left-radiu=
s: 0px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.border { border-width: 1px; }

.border-\[10px\] { border-width: 10px; }

.border-b { border-bottom-width: 1px; }

.border-b-\[3px\] { border-bottom-width: 3px; }

.border-l { border-left-width: 1px; }

.border-r { border-right-width: 1px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-dashed { border-style: dashed; }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgb(245 245 250 / =
var(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgb(231 232 242 / =
var(--tw-border-opacity)); }

.border-red-400 { --tw-border-opacity: 1; border-color: rgb(248 113 113 / v=
ar(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgb(249 50 44 / var=
(--tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50 / var=
(--tw-border-opacity)); }

.border-white { --tw-border-opacity: 1; border-color: rgb(255 255 255 / var=
(--tw-border-opacity)); }

.border-b-transparent { border-bottom-color: transparent; }

.border-opacity-60 { --tw-border-opacity: .6; }

.bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(7 130 177 / var(--=
tw-bg-opacity)); }

.bg-breeze { --tw-bg-opacity: 1; background-color: rgb(243 193 75 / var(--t=
w-bg-opacity)); }

.bg-breeze\/0 { background-color: rgba(243, 193, 75, 0); }

.bg-breeze\/10 { background-color: rgba(243, 193, 75, 0.1); }

.bg-breeze\/100 { background-color: rgb(243, 193, 75); }

.bg-breeze\/20 { background-color: rgba(243, 193, 75, 0.2); }

.bg-breeze\/25 { background-color: rgba(243, 193, 75, 0.25); }

.bg-breeze\/30 { background-color: rgba(243, 193, 75, 0.3); }

.bg-breeze\/40 { background-color: rgba(243, 193, 75, 0.4); }

.bg-breeze\/5 { background-color: rgba(243, 193, 75, 0.05); }

.bg-breeze\/50 { background-color: rgba(243, 193, 75, 0.5); }

.bg-breeze\/60 { background-color: rgba(243, 193, 75, 0.6); }

.bg-breeze\/70 { background-color: rgba(243, 193, 75, 0.7); }

.bg-breeze\/75 { background-color: rgba(243, 193, 75, 0.75); }

.bg-breeze\/80 { background-color: rgba(243, 193, 75, 0.8); }

.bg-breeze\/90 { background-color: rgba(243, 193, 75, 0.9); }

.bg-breeze\/95 { background-color: rgba(243, 193, 75, 0.95); }

.bg-cashier { --tw-bg-opacity: 1; background-color: rgb(145 214 48 / var(--=
tw-bg-opacity)); }

.bg-cashier\/0 { background-color: rgba(145, 214, 48, 0); }

.bg-cashier\/10 { background-color: rgba(145, 214, 48, 0.1); }

.bg-cashier\/100 { background-color: rgb(145, 214, 48); }

.bg-cashier\/20 { background-color: rgba(145, 214, 48, 0.2); }

.bg-cashier\/25 { background-color: rgba(145, 214, 48, 0.25); }

.bg-cashier\/30 { background-color: rgba(145, 214, 48, 0.3); }

.bg-cashier\/40 { background-color: rgba(145, 214, 48, 0.4); }

.bg-cashier\/5 { background-color: rgba(145, 214, 48, 0.05); }

.bg-cashier\/50 { background-color: rgba(145, 214, 48, 0.5); }

.bg-cashier\/60 { background-color: rgba(145, 214, 48, 0.6); }

.bg-cashier\/70 { background-color: rgba(145, 214, 48, 0.7); }

.bg-cashier\/75 { background-color: rgba(145, 214, 48, 0.75); }

.bg-cashier\/80 { background-color: rgba(145, 214, 48, 0.8); }

.bg-cashier\/90 { background-color: rgba(145, 214, 48, 0.9); }

.bg-cashier\/95 { background-color: rgba(145, 214, 48, 0.95); }

.bg-dark-600 { --tw-bg-opacity: 1; background-color: rgb(37 42 55 / var(--t=
w-bg-opacity)); }

.bg-dark-700 { --tw-bg-opacity: 1; background-color: rgb(23 25 35 / var(--t=
w-bg-opacity)); }

.bg-dusk { --tw-bg-opacity: 1; background-color: rgb(187 53 139 / var(--tw-=
bg-opacity)); }

.bg-dusk\/0 { background-color: rgba(187, 53, 139, 0); }

.bg-dusk\/10 { background-color: rgba(187, 53, 139, 0.1); }

.bg-dusk\/100 { background-color: rgb(187, 53, 139); }

.bg-dusk\/20 { background-color: rgba(187, 53, 139, 0.2); }

.bg-dusk\/25 { background-color: rgba(187, 53, 139, 0.25); }

.bg-dusk\/30 { background-color: rgba(187, 53, 139, 0.3); }

.bg-dusk\/40 { background-color: rgba(187, 53, 139, 0.4); }

.bg-dusk\/5 { background-color: rgba(187, 53, 139, 0.05); }

.bg-dusk\/50 { background-color: rgba(187, 53, 139, 0.5); }

.bg-dusk\/60 { background-color: rgba(187, 53, 139, 0.6); }

.bg-dusk\/70 { background-color: rgba(187, 53, 139, 0.7); }

.bg-dusk\/75 { background-color: rgba(187, 53, 139, 0.75); }

.bg-dusk\/80 { background-color: rgba(187, 53, 139, 0.8); }

.bg-dusk\/90 { background-color: rgba(187, 53, 139, 0.9); }

.bg-dusk\/95 { background-color: rgba(187, 53, 139, 0.95); }

.bg-echo { --tw-bg-opacity: 1; background-color: rgb(74 178 176 / var(--tw-=
bg-opacity)); }

.bg-echo\/0 { background-color: rgba(74, 178, 176, 0); }

.bg-echo\/10 { background-color: rgba(74, 178, 176, 0.1); }

.bg-echo\/100 { background-color: rgb(74, 178, 176); }

.bg-echo\/20 { background-color: rgba(74, 178, 176, 0.2); }

.bg-echo\/25 { background-color: rgba(74, 178, 176, 0.25); }

.bg-echo\/30 { background-color: rgba(74, 178, 176, 0.3); }

.bg-echo\/40 { background-color: rgba(74, 178, 176, 0.4); }

.bg-echo\/5 { background-color: rgba(74, 178, 176, 0.05); }

.bg-echo\/50 { background-color: rgba(74, 178, 176, 0.5); }

.bg-echo\/60 { background-color: rgba(74, 178, 176, 0.6); }

.bg-echo\/70 { background-color: rgba(74, 178, 176, 0.7); }

.bg-echo\/75 { background-color: rgba(74, 178, 176, 0.75); }

.bg-echo\/80 { background-color: rgba(74, 178, 176, 0.8); }

.bg-echo\/90 { background-color: rgba(74, 178, 176, 0.9); }

.bg-echo\/95 { background-color: rgba(74, 178, 176, 0.95); }

.bg-envoyer { --tw-bg-opacity: 1; background-color: rgb(245 104 87 / var(--=
tw-bg-opacity)); }

.bg-envoyer\/0 { background-color: rgba(245, 104, 87, 0); }

.bg-envoyer\/10 { background-color: rgba(245, 104, 87, 0.1); }

.bg-envoyer\/100 { background-color: rgb(245, 104, 87); }

.bg-envoyer\/20 { background-color: rgba(245, 104, 87, 0.2); }

.bg-envoyer\/25 { background-color: rgba(245, 104, 87, 0.25); }

.bg-envoyer\/30 { background-color: rgba(245, 104, 87, 0.3); }

.bg-envoyer\/40 { background-color: rgba(245, 104, 87, 0.4); }

.bg-envoyer\/5 { background-color: rgba(245, 104, 87, 0.05); }

.bg-envoyer\/50 { background-color: rgba(245, 104, 87, 0.5); }

.bg-envoyer\/60 { background-color: rgba(245, 104, 87, 0.6); }

.bg-envoyer\/70 { background-color: rgba(245, 104, 87, 0.7); }

.bg-envoyer\/75 { background-color: rgba(245, 104, 87, 0.75); }

.bg-envoyer\/80 { background-color: rgba(245, 104, 87, 0.8); }

.bg-envoyer\/90 { background-color: rgba(245, 104, 87, 0.9); }

.bg-envoyer\/95 { background-color: rgba(245, 104, 87, 0.95); }

.bg-forge { --tw-bg-opacity: 1; background-color: rgb(30 183 134 / var(--tw=
-bg-opacity)); }

.bg-forge\/0 { background-color: rgba(30, 183, 134, 0); }

.bg-forge\/10 { background-color: rgba(30, 183, 134, 0.1); }

.bg-forge\/100 { background-color: rgb(30, 183, 134); }

.bg-forge\/20 { background-color: rgba(30, 183, 134, 0.2); }

.bg-forge\/25 { background-color: rgba(30, 183, 134, 0.25); }

.bg-forge\/30 { background-color: rgba(30, 183, 134, 0.3); }

.bg-forge\/40 { background-color: rgba(30, 183, 134, 0.4); }

.bg-forge\/5 { background-color: rgba(30, 183, 134, 0.05); }

.bg-forge\/50 { background-color: rgba(30, 183, 134, 0.5); }

.bg-forge\/60 { background-color: rgba(30, 183, 134, 0.6); }

.bg-forge\/70 { background-color: rgba(30, 183, 134, 0.7); }

.bg-forge\/75 { background-color: rgba(30, 183, 134, 0.75); }

.bg-forge\/80 { background-color: rgba(30, 183, 134, 0.8); }

.bg-forge\/90 { background-color: rgba(30, 183, 134, 0.9); }

.bg-forge\/95 { background-color: rgba(30, 183, 134, 0.95); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(245 245 250 / var(=
--tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(251 251 253 / var(-=
-tw-bg-opacity)); }

.bg-herd { --tw-bg-opacity: 1; background-color: rgb(220 38 38 / var(--tw-b=
g-opacity)); }

.bg-herd\/0 { background-color: rgba(220, 38, 38, 0); }

.bg-herd\/10 { background-color: rgba(220, 38, 38, 0.1); }

.bg-herd\/100 { background-color: rgb(220, 38, 38); }

.bg-herd\/20 { background-color: rgba(220, 38, 38, 0.2); }

.bg-herd\/25 { background-color: rgba(220, 38, 38, 0.25); }

.bg-herd\/30 { background-color: rgba(220, 38, 38, 0.3); }

.bg-herd\/40 { background-color: rgba(220, 38, 38, 0.4); }

.bg-herd\/5 { background-color: rgba(220, 38, 38, 0.05); }

.bg-herd\/50 { background-color: rgba(220, 38, 38, 0.5); }

.bg-herd\/60 { background-color: rgba(220, 38, 38, 0.6); }

.bg-herd\/70 { background-color: rgba(220, 38, 38, 0.7); }

.bg-herd\/75 { background-color: rgba(220, 38, 38, 0.75); }

.bg-herd\/80 { background-color: rgba(220, 38, 38, 0.8); }

.bg-herd\/90 { background-color: rgba(220, 38, 38, 0.9); }

.bg-herd\/95 { background-color: rgba(220, 38, 38, 0.95); }

.bg-homestead { --tw-bg-opacity: 1; background-color: rgb(231 128 28 / var(=
--tw-bg-opacity)); }

.bg-homestead\/0 { background-color: rgba(231, 128, 28, 0); }

.bg-homestead\/10 { background-color: rgba(231, 128, 28, 0.1); }

.bg-homestead\/100 { background-color: rgb(231, 128, 28); }

.bg-homestead\/20 { background-color: rgba(231, 128, 28, 0.2); }

.bg-homestead\/25 { background-color: rgba(231, 128, 28, 0.25); }

.bg-homestead\/30 { background-color: rgba(231, 128, 28, 0.3); }

.bg-homestead\/40 { background-color: rgba(231, 128, 28, 0.4); }

.bg-homestead\/5 { background-color: rgba(231, 128, 28, 0.05); }

.bg-homestead\/50 { background-color: rgba(231, 128, 28, 0.5); }

.bg-homestead\/60 { background-color: rgba(231, 128, 28, 0.6); }

.bg-homestead\/70 { background-color: rgba(231, 128, 28, 0.7); }

.bg-homestead\/75 { background-color: rgba(231, 128, 28, 0.75); }

.bg-homestead\/80 { background-color: rgba(231, 128, 28, 0.8); }

.bg-homestead\/90 { background-color: rgba(231, 128, 28, 0.9); }

.bg-homestead\/95 { background-color: rgba(231, 128, 28, 0.95); }

.bg-horizon { --tw-bg-opacity: 1; background-color: rgb(140 110 211 / var(-=
-tw-bg-opacity)); }

.bg-horizon\/0 { background-color: rgba(140, 110, 211, 0); }

.bg-horizon\/10 { background-color: rgba(140, 110, 211, 0.1); }

.bg-horizon\/100 { background-color: rgb(140, 110, 211); }

.bg-horizon\/20 { background-color: rgba(140, 110, 211, 0.2); }

.bg-horizon\/25 { background-color: rgba(140, 110, 211, 0.25); }

.bg-horizon\/30 { background-color: rgba(140, 110, 211, 0.3); }

.bg-horizon\/40 { background-color: rgba(140, 110, 211, 0.4); }

.bg-horizon\/5 { background-color: rgba(140, 110, 211, 0.05); }

.bg-horizon\/50 { background-color: rgba(140, 110, 211, 0.5); }

.bg-horizon\/60 { background-color: rgba(140, 110, 211, 0.6); }

.bg-horizon\/70 { background-color: rgba(140, 110, 211, 0.7); }

.bg-horizon\/75 { background-color: rgba(140, 110, 211, 0.75); }

.bg-horizon\/80 { background-color: rgba(140, 110, 211, 0.8); }

.bg-horizon\/90 { background-color: rgba(140, 110, 211, 0.9); }

.bg-horizon\/95 { background-color: rgba(140, 110, 211, 0.95); }

.bg-inertia { --tw-bg-opacity: 1; background-color: rgb(149 83 233 / var(--=
tw-bg-opacity)); }

.bg-inertia\/0 { background-color: rgba(149, 83, 233, 0); }

.bg-inertia\/10 { background-color: rgba(149, 83, 233, 0.1); }

.bg-inertia\/100 { background-color: rgb(149, 83, 233); }

.bg-inertia\/20 { background-color: rgba(149, 83, 233, 0.2); }

.bg-inertia\/25 { background-color: rgba(149, 83, 233, 0.25); }

.bg-inertia\/30 { background-color: rgba(149, 83, 233, 0.3); }

.bg-inertia\/40 { background-color: rgba(149, 83, 233, 0.4); }

.bg-inertia\/5 { background-color: rgba(149, 83, 233, 0.05); }

.bg-inertia\/50 { background-color: rgba(149, 83, 233, 0.5); }

.bg-inertia\/60 { background-color: rgba(149, 83, 233, 0.6); }

.bg-inertia\/70 { background-color: rgba(149, 83, 233, 0.7); }

.bg-inertia\/75 { background-color: rgba(149, 83, 233, 0.75); }

.bg-inertia\/80 { background-color: rgba(149, 83, 233, 0.8); }

.bg-inertia\/90 { background-color: rgba(149, 83, 233, 0.9); }

.bg-inertia\/95 { background-color: rgba(149, 83, 233, 0.95); }

.bg-jetstream { --tw-bg-opacity: 1; background-color: rgb(104 117 245 / var=
(--tw-bg-opacity)); }

.bg-jetstream\/0 { background-color: rgba(104, 117, 245, 0); }

.bg-jetstream\/10 { background-color: rgba(104, 117, 245, 0.1); }

.bg-jetstream\/100 { background-color: rgb(104, 117, 245); }

.bg-jetstream\/20 { background-color: rgba(104, 117, 245, 0.2); }

.bg-jetstream\/25 { background-color: rgba(104, 117, 245, 0.25); }

.bg-jetstream\/30 { background-color: rgba(104, 117, 245, 0.3); }

.bg-jetstream\/40 { background-color: rgba(104, 117, 245, 0.4); }

.bg-jetstream\/5 { background-color: rgba(104, 117, 245, 0.05); }

.bg-jetstream\/50 { background-color: rgba(104, 117, 245, 0.5); }

.bg-jetstream\/60 { background-color: rgba(104, 117, 245, 0.6); }

.bg-jetstream\/70 { background-color: rgba(104, 117, 245, 0.7); }

.bg-jetstream\/75 { background-color: rgba(104, 117, 245, 0.75); }

.bg-jetstream\/80 { background-color: rgba(104, 117, 245, 0.8); }

.bg-jetstream\/90 { background-color: rgba(104, 117, 245, 0.9); }

.bg-jetstream\/95 { background-color: rgba(104, 117, 245, 0.95); }

.bg-livewire { --tw-bg-opacity: 1; background-color: rgb(251 112 169 / var(=
--tw-bg-opacity)); }

.bg-livewire\/0 { background-color: rgba(251, 112, 169, 0); }

.bg-livewire\/10 { background-color: rgba(251, 112, 169, 0.1); }

.bg-livewire\/100 { background-color: rgb(251, 112, 169); }

.bg-livewire\/20 { background-color: rgba(251, 112, 169, 0.2); }

.bg-livewire\/25 { background-color: rgba(251, 112, 169, 0.25); }

.bg-livewire\/30 { background-color: rgba(251, 112, 169, 0.3); }

.bg-livewire\/40 { background-color: rgba(251, 112, 169, 0.4); }

.bg-livewire\/5 { background-color: rgba(251, 112, 169, 0.05); }

.bg-livewire\/50 { background-color: rgba(251, 112, 169, 0.5); }

.bg-livewire\/60 { background-color: rgba(251, 112, 169, 0.6); }

.bg-livewire\/70 { background-color: rgba(251, 112, 169, 0.7); }

.bg-livewire\/75 { background-color: rgba(251, 112, 169, 0.75); }

.bg-livewire\/80 { background-color: rgba(251, 112, 169, 0.8); }

.bg-livewire\/90 { background-color: rgba(251, 112, 169, 0.9); }

.bg-livewire\/95 { background-color: rgba(251, 112, 169, 0.95); }

.bg-lumen { --tw-bg-opacity: 1; background-color: rgb(246 174 122 / var(--t=
w-bg-opacity)); }

.bg-lumen\/0 { background-color: rgba(246, 174, 122, 0); }

.bg-lumen\/10 { background-color: rgba(246, 174, 122, 0.1); }

.bg-lumen\/100 { background-color: rgb(246, 174, 122); }

.bg-lumen\/20 { background-color: rgba(246, 174, 122, 0.2); }

.bg-lumen\/25 { background-color: rgba(246, 174, 122, 0.25); }

.bg-lumen\/30 { background-color: rgba(246, 174, 122, 0.3); }

.bg-lumen\/40 { background-color: rgba(246, 174, 122, 0.4); }

.bg-lumen\/5 { background-color: rgba(246, 174, 122, 0.05); }

.bg-lumen\/50 { background-color: rgba(246, 174, 122, 0.5); }

.bg-lumen\/60 { background-color: rgba(246, 174, 122, 0.6); }

.bg-lumen\/70 { background-color: rgba(246, 174, 122, 0.7); }

.bg-lumen\/75 { background-color: rgba(246, 174, 122, 0.75); }

.bg-lumen\/80 { background-color: rgba(246, 174, 122, 0.8); }

.bg-lumen\/90 { background-color: rgba(246, 174, 122, 0.9); }

.bg-lumen\/95 { background-color: rgba(246, 174, 122, 0.95); }

.bg-mix { --tw-bg-opacity: 1; background-color: rgb(41 75 165 / var(--tw-bg=
-opacity)); }

.bg-mix\/0 { background-color: rgba(41, 75, 165, 0); }

.bg-mix\/10 { background-color: rgba(41, 75, 165, 0.1); }

.bg-mix\/100 { background-color: rgb(41, 75, 165); }

.bg-mix\/20 { background-color: rgba(41, 75, 165, 0.2); }

.bg-mix\/25 { background-color: rgba(41, 75, 165, 0.25); }

.bg-mix\/30 { background-color: rgba(41, 75, 165, 0.3); }

.bg-mix\/40 { background-color: rgba(41, 75, 165, 0.4); }

.bg-mix\/5 { background-color: rgba(41, 75, 165, 0.05); }

.bg-mix\/50 { background-color: rgba(41, 75, 165, 0.5); }

.bg-mix\/60 { background-color: rgba(41, 75, 165, 0.6); }

.bg-mix\/70 { background-color: rgba(41, 75, 165, 0.7); }

.bg-mix\/75 { background-color: rgba(41, 75, 165, 0.75); }

.bg-mix\/80 { background-color: rgba(41, 75, 165, 0.8); }

.bg-mix\/90 { background-color: rgba(41, 75, 165, 0.9); }

.bg-mix\/95 { background-color: rgba(41, 75, 165, 0.95); }

.bg-nova { --tw-bg-opacity: 1; background-color: rgb(64 153 222 / var(--tw-=
bg-opacity)); }

.bg-nova\/0 { background-color: rgba(64, 153, 222, 0); }

.bg-nova\/10 { background-color: rgba(64, 153, 222, 0.1); }

.bg-nova\/100 { background-color: rgb(64, 153, 222); }

.bg-nova\/20 { background-color: rgba(64, 153, 222, 0.2); }

.bg-nova\/25 { background-color: rgba(64, 153, 222, 0.25); }

.bg-nova\/30 { background-color: rgba(64, 153, 222, 0.3); }

.bg-nova\/40 { background-color: rgba(64, 153, 222, 0.4); }

.bg-nova\/5 { background-color: rgba(64, 153, 222, 0.05); }

.bg-nova\/50 { background-color: rgba(64, 153, 222, 0.5); }

.bg-nova\/60 { background-color: rgba(64, 153, 222, 0.6); }

.bg-nova\/70 { background-color: rgba(64, 153, 222, 0.7); }

.bg-nova\/75 { background-color: rgba(64, 153, 222, 0.75); }

.bg-nova\/80 { background-color: rgba(64, 153, 222, 0.8); }

.bg-nova\/90 { background-color: rgba(64, 153, 222, 0.9); }

.bg-nova\/95 { background-color: rgba(64, 153, 222, 0.95); }

.bg-octane { --tw-bg-opacity: 1; background-color: rgb(202 58 49 / var(--tw=
-bg-opacity)); }

.bg-octane\/0 { background-color: rgba(202, 58, 49, 0); }

.bg-octane\/10 { background-color: rgba(202, 58, 49, 0.1); }

.bg-octane\/100 { background-color: rgb(202, 58, 49); }

.bg-octane\/20 { background-color: rgba(202, 58, 49, 0.2); }

.bg-octane\/25 { background-color: rgba(202, 58, 49, 0.25); }

.bg-octane\/30 { background-color: rgba(202, 58, 49, 0.3); }

.bg-octane\/40 { background-color: rgba(202, 58, 49, 0.4); }

.bg-octane\/5 { background-color: rgba(202, 58, 49, 0.05); }

.bg-octane\/50 { background-color: rgba(202, 58, 49, 0.5); }

.bg-octane\/60 { background-color: rgba(202, 58, 49, 0.6); }

.bg-octane\/70 { background-color: rgba(202, 58, 49, 0.7); }

.bg-octane\/75 { background-color: rgba(202, 58, 49, 0.75); }

.bg-octane\/80 { background-color: rgba(202, 58, 49, 0.8); }

.bg-octane\/90 { background-color: rgba(202, 58, 49, 0.9); }

.bg-octane\/95 { background-color: rgba(202, 58, 49, 0.95); }

.bg-orange-600 { --tw-bg-opacity: 1; background-color: rgb(244 157 55 / var=
(--tw-bg-opacity)); }

.bg-passport { --tw-bg-opacity: 1; background-color: rgb(125 217 242 / var(=
--tw-bg-opacity)); }

.bg-passport\/0 { background-color: rgba(125, 217, 242, 0); }

.bg-passport\/10 { background-color: rgba(125, 217, 242, 0.1); }

.bg-passport\/100 { background-color: rgb(125, 217, 242); }

.bg-passport\/20 { background-color: rgba(125, 217, 242, 0.2); }

.bg-passport\/25 { background-color: rgba(125, 217, 242, 0.25); }

.bg-passport\/30 { background-color: rgba(125, 217, 242, 0.3); }

.bg-passport\/40 { background-color: rgba(125, 217, 242, 0.4); }

.bg-passport\/5 { background-color: rgba(125, 217, 242, 0.05); }

.bg-passport\/50 { background-color: rgba(125, 217, 242, 0.5); }

.bg-passport\/60 { background-color: rgba(125, 217, 242, 0.6); }

.bg-passport\/70 { background-color: rgba(125, 217, 242, 0.7); }

.bg-passport\/75 { background-color: rgba(125, 217, 242, 0.75); }

.bg-passport\/80 { background-color: rgba(125, 217, 242, 0.8); }

.bg-passport\/90 { background-color: rgba(125, 217, 242, 0.9); }

.bg-passport\/95 { background-color: rgba(125, 217, 242, 0.95); }

.bg-pennant { --tw-bg-opacity: 1; background-color: rgb(26 164 74 / var(--t=
w-bg-opacity)); }

.bg-pennant\/0 { background-color: rgba(26, 164, 74, 0); }

.bg-pennant\/10 { background-color: rgba(26, 164, 74, 0.1); }

.bg-pennant\/100 { background-color: rgb(26, 164, 74); }

.bg-pennant\/20 { background-color: rgba(26, 164, 74, 0.2); }

.bg-pennant\/25 { background-color: rgba(26, 164, 74, 0.25); }

.bg-pennant\/30 { background-color: rgba(26, 164, 74, 0.3); }

.bg-pennant\/40 { background-color: rgba(26, 164, 74, 0.4); }

.bg-pennant\/5 { background-color: rgba(26, 164, 74, 0.05); }

.bg-pennant\/50 { background-color: rgba(26, 164, 74, 0.5); }

.bg-pennant\/60 { background-color: rgba(26, 164, 74, 0.6); }

.bg-pennant\/70 { background-color: rgba(26, 164, 74, 0.7); }

.bg-pennant\/75 { background-color: rgba(26, 164, 74, 0.75); }

.bg-pennant\/80 { background-color: rgba(26, 164, 74, 0.8); }

.bg-pennant\/90 { background-color: rgba(26, 164, 74, 0.9); }

.bg-pennant\/95 { background-color: rgba(26, 164, 74, 0.95); }

.bg-pint { --tw-bg-opacity: 1; background-color: rgb(255 208 0 / var(--tw-b=
g-opacity)); }

.bg-pint\/0 { background-color: rgba(255, 208, 0, 0); }

.bg-pint\/10 { background-color: rgba(255, 208, 0, 0.1); }

.bg-pint\/100 { background-color: rgb(255, 208, 0); }

.bg-pint\/20 { background-color: rgba(255, 208, 0, 0.2); }

.bg-pint\/25 { background-color: rgba(255, 208, 0, 0.25); }

.bg-pint\/30 { background-color: rgba(255, 208, 0, 0.3); }

.bg-pint\/40 { background-color: rgba(255, 208, 0, 0.4); }

.bg-pint\/5 { background-color: rgba(255, 208, 0, 0.05); }

.bg-pint\/50 { background-color: rgba(255, 208, 0, 0.5); }

.bg-pint\/60 { background-color: rgba(255, 208, 0, 0.6); }

.bg-pint\/70 { background-color: rgba(255, 208, 0, 0.7); }

.bg-pint\/75 { background-color: rgba(255, 208, 0, 0.75); }

.bg-pint\/80 { background-color: rgba(255, 208, 0, 0.8); }

.bg-pint\/90 { background-color: rgba(255, 208, 0, 0.9); }

.bg-pint\/95 { background-color: rgba(255, 208, 0, 0.95); }

.bg-prompts { --tw-bg-opacity: 1; background-color: rgb(74 222 128 / var(--=
tw-bg-opacity)); }

.bg-prompts\/0 { background-color: rgba(74, 222, 128, 0); }

.bg-prompts\/10 { background-color: rgba(74, 222, 128, 0.1); }

.bg-prompts\/100 { background-color: rgb(74, 222, 128); }

.bg-prompts\/20 { background-color: rgba(74, 222, 128, 0.2); }

.bg-prompts\/25 { background-color: rgba(74, 222, 128, 0.25); }

.bg-prompts\/30 { background-color: rgba(74, 222, 128, 0.3); }

.bg-prompts\/40 { background-color: rgba(74, 222, 128, 0.4); }

.bg-prompts\/5 { background-color: rgba(74, 222, 128, 0.05); }

.bg-prompts\/50 { background-color: rgba(74, 222, 128, 0.5); }

.bg-prompts\/60 { background-color: rgba(74, 222, 128, 0.6); }

.bg-prompts\/70 { background-color: rgba(74, 222, 128, 0.7); }

.bg-prompts\/75 { background-color: rgba(74, 222, 128, 0.75); }

.bg-prompts\/80 { background-color: rgba(74, 222, 128, 0.8); }

.bg-prompts\/90 { background-color: rgba(74, 222, 128, 0.9); }

.bg-prompts\/95 { background-color: rgba(74, 222, 128, 0.95); }

.bg-purple-600 { --tw-bg-opacity: 1; background-color: rgb(131 56 236 / var=
(--tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(249 50 44 / var(--t=
w-bg-opacity)); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgb(235 68 50 / var(--t=
w-bg-opacity)); }

.bg-sail { --tw-bg-opacity: 1; background-color: rgb(56 189 247 / var(--tw-=
bg-opacity)); }

.bg-sail\/0 { background-color: rgba(56, 189, 247, 0); }

.bg-sail\/10 { background-color: rgba(56, 189, 247, 0.1); }

.bg-sail\/100 { background-color: rgb(56, 189, 247); }

.bg-sail\/20 { background-color: rgba(56, 189, 247, 0.2); }

.bg-sail\/25 { background-color: rgba(56, 189, 247, 0.25); }

.bg-sail\/30 { background-color: rgba(56, 189, 247, 0.3); }

.bg-sail\/40 { background-color: rgba(56, 189, 247, 0.4); }

.bg-sail\/5 { background-color: rgba(56, 189, 247, 0.05); }

.bg-sail\/50 { background-color: rgba(56, 189, 247, 0.5); }

.bg-sail\/60 { background-color: rgba(56, 189, 247, 0.6); }

.bg-sail\/70 { background-color: rgba(56, 189, 247, 0.7); }

.bg-sail\/75 { background-color: rgba(56, 189, 247, 0.75); }

.bg-sail\/80 { background-color: rgba(56, 189, 247, 0.8); }

.bg-sail\/90 { background-color: rgba(56, 189, 247, 0.9); }

.bg-sail\/95 { background-color: rgba(56, 189, 247, 0.95); }

.bg-sanctum { --tw-bg-opacity: 1; background-color: rgb(29 88 115 / var(--t=
w-bg-opacity)); }

.bg-sanctum\/0 { background-color: rgba(29, 88, 115, 0); }

.bg-sanctum\/10 { background-color: rgba(29, 88, 115, 0.1); }

.bg-sanctum\/100 { background-color: rgb(29, 88, 115); }

.bg-sanctum\/20 { background-color: rgba(29, 88, 115, 0.2); }

.bg-sanctum\/25 { background-color: rgba(29, 88, 115, 0.25); }

.bg-sanctum\/30 { background-color: rgba(29, 88, 115, 0.3); }

.bg-sanctum\/40 { background-color: rgba(29, 88, 115, 0.4); }

.bg-sanctum\/5 { background-color: rgba(29, 88, 115, 0.05); }

.bg-sanctum\/50 { background-color: rgba(29, 88, 115, 0.5); }

.bg-sanctum\/60 { background-color: rgba(29, 88, 115, 0.6); }

.bg-sanctum\/70 { background-color: rgba(29, 88, 115, 0.7); }

.bg-sanctum\/75 { background-color: rgba(29, 88, 115, 0.75); }

.bg-sanctum\/80 { background-color: rgba(29, 88, 115, 0.8); }

.bg-sanctum\/90 { background-color: rgba(29, 88, 115, 0.9); }

.bg-sanctum\/95 { background-color: rgba(29, 88, 115, 0.95); }

.bg-scout { --tw-bg-opacity: 1; background-color: rgb(245 93 92 / var(--tw-=
bg-opacity)); }

.bg-scout\/0 { background-color: rgba(245, 93, 92, 0); }

.bg-scout\/10 { background-color: rgba(245, 93, 92, 0.1); }

.bg-scout\/100 { background-color: rgb(245, 93, 92); }

.bg-scout\/20 { background-color: rgba(245, 93, 92, 0.2); }

.bg-scout\/25 { background-color: rgba(245, 93, 92, 0.25); }

.bg-scout\/30 { background-color: rgba(245, 93, 92, 0.3); }

.bg-scout\/40 { background-color: rgba(245, 93, 92, 0.4); }

.bg-scout\/5 { background-color: rgba(245, 93, 92, 0.05); }

.bg-scout\/50 { background-color: rgba(245, 93, 92, 0.5); }

.bg-scout\/60 { background-color: rgba(245, 93, 92, 0.6); }

.bg-scout\/70 { background-color: rgba(245, 93, 92, 0.7); }

.bg-scout\/75 { background-color: rgba(245, 93, 92, 0.75); }

.bg-scout\/80 { background-color: rgba(245, 93, 92, 0.8); }

.bg-scout\/90 { background-color: rgba(245, 93, 92, 0.9); }

.bg-scout\/95 { background-color: rgba(245, 93, 92, 0.95); }

.bg-socialite { --tw-bg-opacity: 1; background-color: rgb(227 148 186 / var=
(--tw-bg-opacity)); }

.bg-socialite\/0 { background-color: rgba(227, 148, 186, 0); }

.bg-socialite\/10 { background-color: rgba(227, 148, 186, 0.1); }

.bg-socialite\/100 { background-color: rgb(227, 148, 186); }

.bg-socialite\/20 { background-color: rgba(227, 148, 186, 0.2); }

.bg-socialite\/25 { background-color: rgba(227, 148, 186, 0.25); }

.bg-socialite\/30 { background-color: rgba(227, 148, 186, 0.3); }

.bg-socialite\/40 { background-color: rgba(227, 148, 186, 0.4); }

.bg-socialite\/5 { background-color: rgba(227, 148, 186, 0.05); }

.bg-socialite\/50 { background-color: rgba(227, 148, 186, 0.5); }

.bg-socialite\/60 { background-color: rgba(227, 148, 186, 0.6); }

.bg-socialite\/70 { background-color: rgba(227, 148, 186, 0.7); }

.bg-socialite\/75 { background-color: rgba(227, 148, 186, 0.75); }

.bg-socialite\/80 { background-color: rgba(227, 148, 186, 0.8); }

.bg-socialite\/90 { background-color: rgba(227, 148, 186, 0.9); }

.bg-socialite\/95 { background-color: rgba(227, 148, 186, 0.95); }

.bg-spark { --tw-bg-opacity: 1; background-color: rgb(155 139 251 / var(--t=
w-bg-opacity)); }

.bg-spark\/0 { background-color: rgba(155, 139, 251, 0); }

.bg-spark\/10 { background-color: rgba(155, 139, 251, 0.1); }

.bg-spark\/100 { background-color: rgb(155, 139, 251); }

.bg-spark\/20 { background-color: rgba(155, 139, 251, 0.2); }

.bg-spark\/25 { background-color: rgba(155, 139, 251, 0.25); }

.bg-spark\/30 { background-color: rgba(155, 139, 251, 0.3); }

.bg-spark\/40 { background-color: rgba(155, 139, 251, 0.4); }

.bg-spark\/5 { background-color: rgba(155, 139, 251, 0.05); }

.bg-spark\/50 { background-color: rgba(155, 139, 251, 0.5); }

.bg-spark\/60 { background-color: rgba(155, 139, 251, 0.6); }

.bg-spark\/70 { background-color: rgba(155, 139, 251, 0.7); }

.bg-spark\/75 { background-color: rgba(155, 139, 251, 0.75); }

.bg-spark\/80 { background-color: rgba(155, 139, 251, 0.8); }

.bg-spark\/90 { background-color: rgba(155, 139, 251, 0.9); }

.bg-spark\/95 { background-color: rgba(155, 139, 251, 0.95); }

.bg-telescope { --tw-bg-opacity: 1; background-color: rgb(64 64 200 / var(-=
-tw-bg-opacity)); }

.bg-telescope\/0 { background-color: rgba(64, 64, 200, 0); }

.bg-telescope\/10 { background-color: rgba(64, 64, 200, 0.1); }

.bg-telescope\/100 { background-color: rgb(64, 64, 200); }

.bg-telescope\/20 { background-color: rgba(64, 64, 200, 0.2); }

.bg-telescope\/25 { background-color: rgba(64, 64, 200, 0.25); }

.bg-telescope\/30 { background-color: rgba(64, 64, 200, 0.3); }

.bg-telescope\/40 { background-color: rgba(64, 64, 200, 0.4); }

.bg-telescope\/5 { background-color: rgba(64, 64, 200, 0.05); }

.bg-telescope\/50 { background-color: rgba(64, 64, 200, 0.5); }

.bg-telescope\/60 { background-color: rgba(64, 64, 200, 0.6); }

.bg-telescope\/70 { background-color: rgba(64, 64, 200, 0.7); }

.bg-telescope\/75 { background-color: rgba(64, 64, 200, 0.75); }

.bg-telescope\/80 { background-color: rgba(64, 64, 200, 0.8); }

.bg-telescope\/90 { background-color: rgba(64, 64, 200, 0.9); }

.bg-telescope\/95 { background-color: rgba(64, 64, 200, 0.95); }

.bg-tinker { --tw-bg-opacity: 1; background-color: rgb(236 118 88 / var(--t=
w-bg-opacity)); }

.bg-tinker\/0 { background-color: rgba(236, 118, 88, 0); }

.bg-tinker\/10 { background-color: rgba(236, 118, 88, 0.1); }

.bg-tinker\/100 { background-color: rgb(236, 118, 88); }

.bg-tinker\/20 { background-color: rgba(236, 118, 88, 0.2); }

.bg-tinker\/25 { background-color: rgba(236, 118, 88, 0.25); }

.bg-tinker\/30 { background-color: rgba(236, 118, 88, 0.3); }

.bg-tinker\/40 { background-color: rgba(236, 118, 88, 0.4); }

.bg-tinker\/5 { background-color: rgba(236, 118, 88, 0.05); }

.bg-tinker\/50 { background-color: rgba(236, 118, 88, 0.5); }

.bg-tinker\/60 { background-color: rgba(236, 118, 88, 0.6); }

.bg-tinker\/70 { background-color: rgba(236, 118, 88, 0.7); }

.bg-tinker\/75 { background-color: rgba(236, 118, 88, 0.75); }

.bg-tinker\/80 { background-color: rgba(236, 118, 88, 0.8); }

.bg-tinker\/90 { background-color: rgba(236, 118, 88, 0.9); }

.bg-tinker\/95 { background-color: rgba(236, 118, 88, 0.95); }

.bg-valet { --tw-bg-opacity: 1; background-color: rgb(94 71 205 / var(--tw-=
bg-opacity)); }

.bg-valet\/0 { background-color: rgba(94, 71, 205, 0); }

.bg-valet\/10 { background-color: rgba(94, 71, 205, 0.1); }

.bg-valet\/100 { background-color: rgb(94, 71, 205); }

.bg-valet\/20 { background-color: rgba(94, 71, 205, 0.2); }

.bg-valet\/25 { background-color: rgba(94, 71, 205, 0.25); }

.bg-valet\/30 { background-color: rgba(94, 71, 205, 0.3); }

.bg-valet\/40 { background-color: rgba(94, 71, 205, 0.4); }

.bg-valet\/5 { background-color: rgba(94, 71, 205, 0.05); }

.bg-valet\/50 { background-color: rgba(94, 71, 205, 0.5); }

.bg-valet\/60 { background-color: rgba(94, 71, 205, 0.6); }

.bg-valet\/70 { background-color: rgba(94, 71, 205, 0.7); }

.bg-valet\/75 { background-color: rgba(94, 71, 205, 0.75); }

.bg-valet\/80 { background-color: rgba(94, 71, 205, 0.8); }

.bg-valet\/90 { background-color: rgba(94, 71, 205, 0.9); }

.bg-valet\/95 { background-color: rgba(94, 71, 205, 0.95); }

.bg-vapor { --tw-bg-opacity: 1; background-color: rgb(37 196 242 / var(--tw=
-bg-opacity)); }

.bg-vapor\/0 { background-color: rgba(37, 196, 242, 0); }

.bg-vapor\/10 { background-color: rgba(37, 196, 242, 0.1); }

.bg-vapor\/100 { background-color: rgb(37, 196, 242); }

.bg-vapor\/20 { background-color: rgba(37, 196, 242, 0.2); }

.bg-vapor\/25 { background-color: rgba(37, 196, 242, 0.25); }

.bg-vapor\/30 { background-color: rgba(37, 196, 242, 0.3); }

.bg-vapor\/40 { background-color: rgba(37, 196, 242, 0.4); }

.bg-vapor\/5 { background-color: rgba(37, 196, 242, 0.05); }

.bg-vapor\/50 { background-color: rgba(37, 196, 242, 0.5); }

.bg-vapor\/60 { background-color: rgba(37, 196, 242, 0.6); }

.bg-vapor\/70 { background-color: rgba(37, 196, 242, 0.7); }

.bg-vapor\/75 { background-color: rgba(37, 196, 242, 0.75); }

.bg-vapor\/80 { background-color: rgba(37, 196, 242, 0.8); }

.bg-vapor\/90 { background-color: rgba(37, 196, 242, 0.9); }

.bg-vapor\/95 { background-color: rgba(37, 196, 242, 0.95); }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--t=
w-bg-opacity)); }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.from-\[rgba\(255\,255\,255\,\.2\)\] { --tw-gradient-from: rgba(255,255,255=
,.2) var(--tw-gradient-from-position); --tw-gradient-from-position: ; --tw-=
gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-from-position); --tw-=
gradient-to-position: ; --tw-gradient-stops: var(--tw-gradient-from), var(-=
-tw-gradient-to); }

.from-gray-100 { --tw-gradient-from: #f5f5fa var(--tw-gradient-from-positio=
n); --tw-gradient-from-position: ; --tw-gradient-to: rgb(245 245 250 / 0) v=
ar(--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient=
-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-red-500 { --tw-gradient-from: #F9322C var(--tw-gradient-from-position=
); --tw-gradient-from-position: ; --tw-gradient-to: rgb(249 50 44 / 0) var(=
--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-st=
ops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-from-position: ; --tw-gradient-to: rgb(255 255 255 / 0) var(--t=
w-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-stops=
: var(--tw-gradient-from), var(--tw-gradient-to); }

.to-\[rgba\(255\,255\,255\,0\)\] { --tw-gradient-to: rgba(255,255,255,0) va=
r(--tw-gradient-to-position); --tw-gradient-to-position: ; }

.to-red-600 { --tw-gradient-to: #EB4432 var(--tw-gradient-to-position); --t=
w-gradient-to-position: ; }

.to-white { --tw-gradient-to: #fff var(--tw-gradient-to-position); --tw-gra=
dient-to-position: ; }

.fill-current { fill: currentcolor; }

.fill-gray-700 { fill: rgb(86, 84, 84); }

.fill-gray-900 { fill: rgb(35, 35, 35); }

.fill-purple-600 { fill: rgb(131, 56, 236); }

.stroke-gray-800 { stroke: rgb(34, 34, 34); }

.stroke-red-500 { stroke: rgb(249, 50, 44); }

.object-cover { object-fit: cover; }

.object-center { object-position: center center; }

.p-10 { padding: 2.5rem; }

.p-12 { padding: 3rem; }

.p-2 { padding: 0.5rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-8 { padding: 2rem; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; }

.py-12 { padding-top: 3rem; padding-bottom: 3rem; }

.py-16 { padding-top: 4rem; padding-bottom: 4rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-16 { padding-bottom: 4rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-24 { padding-bottom: 6rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pr-3 { padding-right: 0.75rem; }

.pt-0 { padding-top: 0px; }

.pt-12 { padding-top: 3rem; }

.pt-16 { padding-top: 4rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-4 { padding-top: 1rem; }

.pt-48 { padding-top: 12rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[4\.2rem\] { padding-top: 4.2rem; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.font-sans { font-family: scandia-web, ui-sans-serif, system-ui, -apple-sys=
tem, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto=
 Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol=
", "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-5xl { font-size: 3rem; line-height: 1; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.lowercase { text-transform: lowercase; }

.italic { font-style: italic; }

.not-italic { font-style: normal; }

.leading-4 { line-height: 1rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-8 { line-height: 2rem; }

.leading-loose { line-height: 2; }

.leading-relaxed { line-height: 1.625; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.text-\[\#d97707\] { --tw-text-opacity: 1; color: rgb(217 119 7 / var(--tw-=
text-opacity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-te=
xt-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(181 181 189 / var(--tw-te=
xt-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(147 147 158 / var(--tw-te=
xt-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(119 119 119 / var(--tw-te=
xt-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgb(86 84 84 / var(--tw-text-=
opacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(34 34 34 / var(--tw-text-=
opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(35 35 35 / var(--tw-text-=
opacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgb(34 197 94 / var(--tw-tex=
t-opacity)); }

.text-jetstream { --tw-text-opacity: 1; color: rgb(104 117 245 / var(--tw-t=
ext-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(249 50 44 / var(--tw-text-=
opacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-=
opacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgb(236 14 0 / var(--tw-text-o=
pacity)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-=
opacity)); }

.underline { text-decoration-line: underline; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-gray-900::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(35 35 35 / var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-25 { opacity: 0.25; }

.opacity-75 { opacity: 0.75; }

.opacity-\[\.15\] { opacity: 0.15; }

.\!shadow-\[64px_64px_100px_-20px_theme\(colors\.red\.400\)\] { --tw-shadow=
: 64px 64px 100px -20px #f87171 !important; --tw-shadow-colored: 64px 64px =
100px -20px var(--tw-shadow-color) !important; box-shadow: var(--tw-ring-of=
fset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow) !=
important; }

.shadow-\[32px_32px_40px_-20px_theme\(colors\.gray\.400\)\] { --tw-shadow: =
32px 32px 40px -20px #B5B5BD; --tw-shadow-colored: 32px 32px 40px -20px var=
(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),va=
r(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 20px 30px -16px rgba(9, 9, 16, .2); --tw-shadow=
-colored: 0 20px 30px -16px var(--tw-shadow-color); box-shadow: var(--tw-ri=
ng-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shad=
ow); }

.shadow-sm { --tw-shadow: 0 10px 15px -8px rgba(9, 9, 16, .1); --tw-shadow-=
colored: 0 10px 15px -8px var(--tw-shadow-color); box-shadow: var(--tw-ring=
-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow=
); }

.shadow-xl { --tw-shadow: 0 10px 20px 0 rgba(9, 9, 16, .15); --tw-shadow-co=
lored: 0 10px 20px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offs=
et-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow, 0 0 #0000); }

.ring-red-500 { --tw-ring-opacity: 1; --tw-ring-color: rgb(249 50 44 / var(=
--tw-ring-opacity)); }

.ring-red-600 { --tw-ring-opacity: 1; --tw-ring-color: rgb(235 68 50 / var(=
--tw-ring-opacity)); }

.ring-offset-1 { --tw-ring-offset-width: 1px; }

.ring-offset-red-500 { --tw-ring-offset-color: #F9322C; }

.blur { --tw-blur: blur(8px); filter: var(--tw-blur) var(--tw-brightness) v=
ar(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)=
 var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.grayscale { --tw-grayscale: grayscale(100%); filter: var(--tw-blur) var(--=
tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) =
var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); =
}

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.transition { transition-property: color, background-color, border-color, t=
ext-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,=
 backdrop-filter, -webkit-backdrop-filter; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-all { transition-property: all; transition-timing-function: cub=
ic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-transform { transition-property: transform; transition-timing-f=
unction: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

:is(.dark .docs_main h1), :is(.dark .docs_main h2), :is(.dark .docs_main h3=
), :is(.dark .docs_main h4), :is(.dark .docs_main h5), :is(.dark .docs_main=
 h6), :is(.dark .docs_main h4 a), :is(.dark .docs_main h3 a), :is(.dark .do=
cs_main h2 a) { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-tex=
t-opacity)); }

:is(.dark .docs_main p), :is(.dark .docs_main ul:not(:first-of-type) li), :=
is(.dark .docs_main .content-list ul li), :is(.dark .docs_main #software-li=
st), :is(.dark .docs_main #valet-support) { --tw-text-opacity: 1; color: rg=
b(181 181 189 / var(--tw-text-opacity)); }

:is(.dark .docs_main h1 + ul li a) { --tw-text-opacity: 1; color: rgb(215 2=
15 220 / var(--tw-text-opacity)); }

:is(.dark .docs_main p a), :is(.dark .docs_main ul a), :is(.dark .docs_main=
 ol a) { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-opacity=
)); }

:is(.dark .docs_main table th) { --tw-text-opacity: 1; color: rgb(231 232 2=
42 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td) { --tw-text-opacity: 1; color: rgb(181 181 1=
89 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td.support-policy-highlight) { --tw-text-opacity=
: 1; color: rgb(0 0 0 / var(--tw-text-opacity)); }

:is(.dark .docs_sidebar ul li h2), :is(.dark .docs_sidebar ul li a) { --tw-=
text-opacity: 1; color: rgb(181 181 189 / var(--tw-text-opacity)); }

.dark .docs_main h4 a::before, .dark .docs_main h3 a::before, .dark .docs_m=
ain h2 a::before { opacity: 1; }

:is(.dark #carbonads) { --tw-bg-opacity: 1; background-color: rgb(37 42 55 =
/ var(--tw-bg-opacity)); }

:is(.dark #carbonads .carbon-text) { --tw-text-opacity: 1; color: rgb(181 1=
81 189 / var(--tw-text-opacity)); }

:is(.dark #carbonads .carbon-poweredby) { --tw-text-opacity: 1; color: rgb(=
147 147 158 / var(--tw-text-opacity)); }

#header__sun, #header__moon, #header__indeterminate { display: none; }

html[color-theme=3D"dark"] #header__moon, html[color-theme=3D"light"] #head=
er__sun, html[color-theme=3D"system"] #header__indeterminate { display: blo=
ck; }

[x-cloak] { display: none !important; }

.bg-radial-gradient { background-image: radial-gradient(50% 50% at 50% 50%,=
 rgb(235, 68, 50) 0%, rgba(255, 255, 255, 0) 100%); }

.partners_body a { color: rgb(235, 68, 50); text-decoration: underline; }

.version-colors { margin-bottom: 0.25rem; }

:is(.dark .version-colors) { --tw-text-opacity: 1; color: rgb(181 181 189 /=
 var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .version-colors { display: flex; }
}

.version-colors .color-box { margin-right: 0.5rem; height: 0.75rem; width: =
0.75rem; }

.version-colors div.end-of-life { margin-right: 1rem; display: flex; align-=
items: center; }

.version-colors div.end-of-life div:first-child { --tw-bg-opacity: 1; backg=
round-color: rgb(249 50 44 / var(--tw-bg-opacity)); }

.version-colors div.security-fixes { display: flex; align-items: center; }

.version-colors div.security-fixes div:first-child { --tw-bg-opacity: 1; ba=
ckground-color: rgb(244 157 55 / var(--tw-bg-opacity)); }

.even\:-translate-y-1\/2:nth-child(2n) { --tw-translate-y: -50%; transform:=
 translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rot=
ate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-=
x)) scaleY(var(--tw-scale-y)); }

.focus-within\:border-gray-600:focus-within { --tw-border-opacity: 1; borde=
r-color: rgb(119 119 119 / var(--tw-border-opacity)); }

.hover\:border-gray-300:hover { --tw-border-opacity: 1; border-color: rgb(2=
15 215 220 / var(--tw-border-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(251 25=
1 253 / var(--tw-bg-opacity)); }

.hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgb(255 255 =
255 / var(--tw-bg-opacity)); }

.hover\:text-gray-500:hover { --tw-text-opacity: 1; color: rgb(147 147 158 =
/ var(--tw-text-opacity)); }

.hover\:text-gray-600:hover { --tw-text-opacity: 1; color: rgb(119 119 119 =
/ var(--tw-text-opacity)); }

.hover\:no-underline:hover { text-decoration-line: none; }

.hover\:grayscale-0:hover { --tw-grayscale: grayscale(0); filter: var(--tw-=
blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-=
hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-dr=
op-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.disabled\:text-gray-200:disabled { --tw-text-opacity: 1; color: rgb(231 23=
2 242 / var(--tw-text-opacity)); }

.group:hover .group-hover\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:hover .group-hover\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

:is(.dark .dark\:block) { display: block; }

:is(.dark .dark\:inline-block) { display: inline-block; }

:is(.dark .dark\:hidden) { display: none; }

:is(.dark .dark\:border-dark-500) { --tw-border-opacity: 1; border-color: r=
gb(57 64 86 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-400) { --tw-border-opacity: 1; border-color: r=
gb(181 181 189 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-700) { --tw-border-opacity: 1; border-color: r=
gb(86 84 84 / var(--tw-border-opacity)); }

:is(.dark .dark\:bg-dark-600) { --tw-bg-opacity: 1; background-color: rgb(3=
7 42 55 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-dark-700) { --tw-bg-opacity: 1; background-color: rgb(2=
3 25 35 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-gray-800) { --tw-bg-opacity: 1; background-color: rgb(3=
4 34 34 / var(--tw-bg-opacity)); }

:is(.dark .dark\:from-dark-800) { --tw-gradient-from: #12141C var(--tw-grad=
ient-from-position); --tw-gradient-from-position: ; --tw-gradient-to: rgb(1=
8 20 28 / 0) var(--tw-gradient-from-position); --tw-gradient-to-position: ;=
 --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

:is(.dark .dark\:to-dark-700) { --tw-gradient-to: #171923 var(--tw-gradient=
-to-position); --tw-gradient-to-position: ; }

:is(.dark .dark\:text-gray-200) { --tw-text-opacity: 1; color: rgb(231 232 =
242 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-400) { --tw-text-opacity: 1; color: rgb(181 181 =
189 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-500) { --tw-text-opacity: 1; color: rgb(147 147 =
158 / var(--tw-text-opacity)); }

:is(.dark .dark\:placeholder-gray-500)::placeholder { --tw-placeholder-opac=
ity: 1; color: rgb(147 147 158 / var(--tw-placeholder-opacity)); }

:is(.dark .dark\:hover\:text-gray-400:hover) { --tw-text-opacity: 1; color:=
 rgb(181 181 189 / var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .sm\:left-\[12\%\] { left: 12%; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-12 { margin-top: 3rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:hidden { display: none; }
  .sm\:h-\[500px\] { height: 500px; }
  .sm\:w-auto { width: auto; }
  .sm\:max-w-5xl { max-width: 64rem; }
  .sm\:max-w-\[480px\] { max-width: 480px; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:max-w-xl { max-width: 36rem; }
  .sm\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .sm\:columns-2 { columns: 2; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:justify-center { justify-content: center; }
  .sm\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .sm\:py-12 { padding-top: 3rem; padding-bottom: 3rem; }
  .sm\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .sm\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-5xl { font-size: 3rem; line-height: 1; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
}

@media (min-width: 768px) {
  .md\:absolute { position: absolute; }
  .md\:inset-y-0 { top: 0px; bottom: 0px; }
  .md\:bottom-64 { bottom: 16rem; }
  .md\:left-0 { left: 0px; }
  .md\:left-1\/2 { left: 50%; }
  .md\:left-2 { left: 0.5rem; }
  .md\:left-\[12\%\] { left: 12%; }
  .md\:right-1\/2 { right: 50%; }
  .md\:right-1\/4 { right: 25%; }
  .md\:right-\[12\%\] { right: 12%; }
  .md\:right-auto { right: auto; }
  .md\:top-48 { top: 12rem; }
  .md\:top-auto { top: auto; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:col-span-3 { grid-column: span 3 / span 3; }
  .md\:-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }
  .md\:-mx-3 { margin-left: -0.75rem; margin-right: -0.75rem; }
  .md\:ml-auto { margin-left: auto; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-12 { margin-top: 3rem; }
  .md\:mt-16 { margin-top: 4rem; }
  .md\:mt-24 { margin-top: 6rem; }
  .md\:mt-6 { margin-top: 1.5rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:block { display: block; }
  .md\:inline { display: inline; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:w-3\/4 { width: 75%; }
  .md\:w-full { width: 100%; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .md\:scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }
  .md\:transform { transform: translate(var(--tw-translate-x),var(--tw-tran=
slate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-sk=
ew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .md\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .md\:items-end { align-items: flex-end; }
  .md\:items-center { align-items: center; }
  .md\:gap-12 { gap: 3rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-8 { column-gap: 2rem; }
  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: =
0; margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse))); margin-bott=
om: calc(0px * var(--tw-space-y-reverse)); }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:p-8 { padding: 2rem; }
  .md\:py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .md\:pr-0 { padding-right: 0px; }
  .md\:pt-12 { padding-top: 3rem; }
  .md\:pt-24 { padding-top: 6rem; }
  .md\:pt-32 { padding-top: 8rem; }
  .md\:pt-48 { padding-top: 12rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-9 { line-height: 2.25rem; }
  .md\:leading-tight { line-height: 1.25; }
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:sticky { position: sticky; }
  .lg\:bottom-12 { bottom: 3rem; }
  .lg\:bottom-64 { bottom: 16rem; }
  .lg\:left-1\/2 { left: 50%; }
  .lg\:left-1\/3 { left: 33.3333%; }
  .lg\:left-\[12\%\] { left: 12%; }
  .lg\:right-auto { right: auto; }
  .lg\:top-2\/3 { top: 66.6667%; }
  .lg\:top-auto { top: auto; }
  .lg\:order-last { order: 9999; }
  .lg\:col-span-2 { grid-column: span 2 / span 2; }
  .lg\:col-span-3 { grid-column: span 3 / span 3; }
  .lg\:col-span-4 { grid-column: span 4 / span 4; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:ml-4 { margin-left: 1rem; }
  .lg\:ml-6 { margin-left: 1.5rem; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:mt-10 { margin-top: 2.5rem; }
  .lg\:mt-24 { margin-top: 6rem; }
  .lg\:mt-4 { margin-top: 1rem; }
  .lg\:mt-8 { margin-top: 2rem; }
  .lg\:block { display: block; }
  .lg\:inline { display: inline; }
  .lg\:flex { display: flex; }
  .lg\:inline-flex { display: inline-flex; }
  .lg\:grid { display: grid; }
  .lg\:hidden { display: none; }
  .lg\:h-12 { height: 3rem; }
  .lg\:h-6 { height: 1.5rem; }
  .lg\:h-8 { height: 2rem; }
  .lg\:h-\[550px\] { height: 550px; }
  .lg\:h-screen { height: 100vh; }
  .lg\:w-12 { width: 3rem; }
  .lg\:w-40 { width: 10rem; }
  .lg\:w-80 { width: 20rem; }
  .lg\:w-\[454px\] { width: 454px; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-xs { max-width: 20rem; }
  .lg\:shrink-0 { flex-shrink: 0; }
  .lg\:translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--=
tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--=
tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--=
tw-scale-y)); }
  .lg\:-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:-rotate-3 { --tw-rotate: -3deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:rotate-1 { --tw-rotate: 1deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:columns-3 { columns: 3; }
  .lg\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .lg\:flex-row { flex-direction: row; }
  .lg\:flex-row-reverse { flex-direction: row-reverse; }
  .lg\:flex-col { flex-direction: column; }
  .lg\:items-start { align-items: flex-start; }
  .lg\:items-end { align-items: flex-end; }
  .lg\:items-center { align-items: center; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-end { justify-content: flex-end; }
  .lg\:justify-center { justify-content: center; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-12 { gap: 3rem; }
  .lg\:gap-6 { gap: 1.5rem; }
  .lg\:gap-8 { gap: 2rem; }
  .lg\:divide-x-0 > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse=
: 0; border-right-width: calc(0px * var(--tw-divide-x-reverse)); border-lef=
t-width: calc(0px * calc(1 - var(--tw-divide-x-reverse))); }
  .lg\:divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: =
0; border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse))); bord=
er-bottom-width: calc(1px * var(--tw-divide-y-reverse)); }
  .lg\:overflow-hidden { overflow: hidden; }
  .lg\:overflow-y-auto { overflow-y: auto; }
  .lg\:overflow-x-visible { overflow-x: visible; }
  .lg\:overscroll-y-contain { overscroll-behavior-y: contain; }
  .lg\:border-\[16px\] { border-width: 16px; }
  .lg\:border-b-0 { border-bottom-width: 0px; }
  .lg\:border-r { border-right-width: 1px; }
  .lg\:border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50=
 / var(--tw-border-opacity)); }
  .lg\:bg-transparent { background-color: transparent; }
  .lg\:bg-gradient-to-b { background-image: linear-gradient(to bottom,var(-=
-tw-gradient-stops)); }
  .lg\:bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw=
-gradient-stops)); }
  .lg\:px-12 { padding-left: 3rem; padding-right: 3rem; }
  .lg\:px-24 { padding-left: 6rem; padding-right: 6rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .lg\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .lg\:py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
  .lg\:pb-64 { padding-bottom: 16rem; }
  .lg\:pl-12 { padding-left: 3rem; }
  .lg\:pt-16 { padding-top: 4rem; }
  .lg\:pt-36 { padding-top: 9rem; }
  .lg\:pt-48 { padding-top: 12rem; }
  .lg\:pt-64 { padding-top: 16rem; }
  .lg\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .lg\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .lg\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .lg\:leading-10 { line-height: 2.5rem; }
}

@media (min-width: 1280px) {
  .xl\:left-16 { left: 4rem; }
  .xl\:top-3\/4 { top: 75%; }
  .xl\:col-span-5 { grid-column: span 5 / span 5; }
  .xl\:col-span-7 { grid-column: span 7 / span 7; }
  .xl\:w-80 { width: 20rem; }
  .xl\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .xl\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); =
}
  .xl\:gap-10 { gap: 2.5rem; }
  .xl\:gap-16 { gap: 4rem; }
  .xl\:p-16 { padding: 4rem; }
  .xl\:px-0 { padding-left: 0px; padding-right: 0px; }
  .xl\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:pb-28 { padding-bottom: 7rem; }
  .xl\:pr-8 { padding-right: 2rem; }
  .xl\:pt-56 { padding-top: 14rem; }
  .xl\:text-6xl { font-size: 3.75rem; line-height: 1; }
}

@media (min-width: 1536px) {
  .\32 xl\:left-32 { left: 8rem; }
  .\32 xl\:w-full { width: 100%; }
  .\32 xl\:max-w-lg { max-width: 32rem; }
}

.\[\&_a\]\:text-red-600 a { --tw-text-opacity: 1; color: rgb(235 68 50 / va=
r(--tw-text-opacity)); }

.\[\&_a\]\:underline a { text-decoration-line: underline; }

.hover\:\[\&_a\]\:no-underline a:hover { text-decoration-line: none; }

.\[\&_pre\]\:bg-\[\#161414\] pre { --tw-bg-opacity: 1; background-color: rg=
b(22 20 20 / var(--tw-bg-opacity)); }

.\[\&_pre\]\:p-2 pre { padding: 0.5rem; }

.\[\&_pre\]\:leading-8 pre { line-height: 2rem; }

.\[\&_pre_code\.torchlight\]\:\!bg-\[\#161414\] pre code.torchlight { --tw-=
bg-opacity: 1 !important; background-color: rgb(22 20 20 / var(--tw-bg-opac=
ity)) !important; }

.\[\&_strong\]\:font-medium strong { font-weight: 500; }

.\[\&_ul\]\:ml-4 ul { margin-left: 1rem; }

.\[\&_ul\]\:list-disc ul { list-style-type: disc; }
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/active_marker.min.svg

<svg width=3D"8" height=3D"8" viewBox=3D"0 0 8 8" xmlns=3D"http://www.w3.or=
g/2000/svg"><title>active_marker</title><path d=3D"M4 0l3.464 2v4L4 8 .536 =
6V2z" fill=3D"#FF2D20" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/logomark.min.svg

<svg width=3D"50" height=3D"52" viewBox=3D"0 0 50 52" xmlns=3D"http://www.w=
3.org/2000/svg"><title>Logomark</title><path d=3D"M49.626 11.564a.809.809 0=
 0 1 .028.209v10.972a.8.8 0 0 1-.402.694l-9.209 5.302V39.25c0 .286-.152.55-=
.4.694L20.42 51.01c-.044.025-.092.041-.14.058-.018.006-.035.017-.054.022a.8=
05.805 0 0 1-.41 0c-.022-.006-.042-.018-.063-.026-.044-.016-.09-.03-.132-.0=
54L.402 39.944A.801.801 0 0 1 0 39.25V6.334c0-.072.01-.142.028-.21.006-.023=
.02-.044.028-.067.015-.042.029-.085.051-.124.015-.026.037-.047.055-.071.023=
-.032.044-.065.071-.093.023-.023.053-.04.079-.06.029-.024.055-.05.088-.069h=
.001l9.61-5.533a.802.802 0 0 1 .8 0l9.61 5.533h.002c.032.02.059.045.088.068=
.026.02.055.038.078.06.028.029.048.062.072.094.017.024.04.045.054.071.023.0=
4.036.082.052.124.008.023.022.044.028.068a.809.809 0 0 1 .028.209v20.559l8.=
008-4.611v-10.51c0-.07.01-.141.028-.208.007-.024.02-.045.028-.068.016-.042.=
03-.085.052-.124.015-.026.037-.047.054-.071.024-.032.044-.065.072-.093.023-=
.023.052-.04.078-.06.03-.024.056-.05.088-.069h.001l9.611-5.533a.801.801 0 0=
 1 .8 0l9.61 5.533c.034.02.06.045.09.068.025.02.054.038.077.06.028.029.048.=
062.072.094.018.024.04.045.054.071.023.039.036.082.052.124.009.023.022.044.=
028.068zm-1.574 10.718v-9.124l-3.363 1.936-4.646 2.675v9.124l8.01-4.611zm-9=
.61 16.505v-9.13l-4.57 2.61-13.05 7.448v9.216l17.62-10.144zM1.602 7.719v31.=
068L19.22 48.93v-9.214l-9.204-5.209-.003-.002-.004-.002c-.031-.018-.057-.04=
4-.086-.066-.025-.02-.054-.036-.076-.058l-.002-.003c-.026-.025-.044-.056-.0=
66-.084-.02-.027-.044-.05-.06-.078l-.001-.003c-.018-.03-.029-.066-.042-.1-.=
013-.03-.03-.058-.038-.09v-.001c-.01-.038-.012-.078-.016-.117-.004-.03-.012=
-.06-.012-.09v-.002-21.481L4.965 9.654 1.602 7.72zm8.81-5.994L2.405 6.334l8=
.005 4.609 8.006-4.61-8.006-4.608zm4.164 28.764l4.645-2.674V7.719l-3.363 1.=
936-4.646 2.675v20.096l3.364-1.937zM39.243 7.164l-8.006 4.609 8.006 4.609 8=
.005-4.61-8.005-4.608zm-.801 10.605l-4.646-2.675-3.363-1.936v9.124l4.645 2.=
674 3.364 1.937v-9.124zM20.02 38.33l11.743-6.704 5.87-3.35-8-4.606-9.211 5.=
303-8.395 4.833 7.993 4.524z" fill=3D"#FF2D20" fill-rule=3D"evenodd"/></svg>
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/logotype.min.svg

<svg width=3D"114" height=3D"29" viewBox=3D"0 0 114 29" xmlns=3D"http://www=
.w3.org/2000/svg"><title>Logotype</title><path d=3D"M4.773.917v23.046h8.338=
v3.976H.333V.917h4.44zm24.01 11.465V9.95h4.208v17.99h-4.207v-2.433c-.567.90=
1-1.37 1.609-2.413 2.123-1.042.515-2.091.772-3.146.772-1.365 0-2.613-.25-3.=
745-.752a8.758 8.758 0 0 1-2.915-2.066 9.6 9.6 0 0 1-1.89-3.01 9.717 9.717 =
0 0 1-.677-3.63c0-1.26.225-2.464.676-3.61a9.56 9.56 0 0 1 1.891-3.03 8.766 =
8.766 0 0 1 2.915-2.065c1.132-.502 2.38-.752 3.745-.752 1.055 0 2.104.257 3=
.146.772 1.042.515 1.846 1.222 2.413 2.123zm-.386 8.763a6.293 6.293 0 0 0 .=
387-2.2c0-.773-.13-1.506-.387-2.2a5.58 5.58 0 0 0-1.08-1.815 5.233 5.233 0 =
0 0-1.68-1.236c-.656-.308-1.383-.463-2.18-.463-.799 0-1.52.155-2.163.463a5.=
29 5.29 0 0 0-1.66 1.236 5.307 5.307 0 0 0-1.06 1.814 6.56 6.56 0 0 0-.368 =
2.2c0 .772.122 1.506.367 2.2.244.696.598 1.3 1.062 1.815a5.279 5.279 0 0 0 =
1.66 1.236c.642.309 1.363.463 2.161.463s1.525-.154 2.181-.463a5.222 5.222 0=
 0 0 1.68-1.236 5.575 5.575 0 0 0 1.08-1.814zm7.914 6.794V9.95h11.427v4.141=
h-7.22v13.85h-4.207zm26.675-15.557V9.95h4.208v17.99h-4.208v-2.433c-.566.901=
-1.37 1.609-2.413 2.123-1.042.515-2.09.772-3.146.772-1.364 0-2.612-.25-3.74=
4-.752a8.758 8.758 0 0 1-2.915-2.066 9.6 9.6 0 0 1-1.891-3.01 9.717 9.717 0=
 0 1-.676-3.63c0-1.26.225-2.464.676-3.61a9.56 9.56 0 0 1 1.89-3.03 8.766 8.=
766 0 0 1 2.916-2.065c1.132-.502 2.38-.752 3.744-.752 1.055 0 2.104.257 3.1=
46.772 1.043.515 1.847 1.222 2.413 2.123zm-.386 8.763a6.293 6.293 0 0 0 .38=
6-2.2c0-.773-.13-1.506-.386-2.2a5.58 5.58 0 0 0-1.08-1.815 5.233 5.233 0 0 =
0-1.68-1.236c-.656-.308-1.384-.463-2.181-.463-.798 0-1.519.155-2.162.463a5.=
29 5.29 0 0 0-1.66 1.236 5.307 5.307 0 0 0-1.061 1.814 6.56 6.56 0 0 0-.367=
 2.2c0 .772.121 1.506.367 2.2.244.696.598 1.3 1.061 1.815a5.279 5.279 0 0 0=
 1.66 1.236c.643.309 1.364.463 2.162.463.797 0 1.525-.154 2.181-.463a5.222 =
5.222 0 0 0 1.68-1.236 5.575 5.575 0 0 0 1.08-1.814zM84.063 9.95h4.262L81.4=
2 27.94H76.13L69.224 9.95h4.262l5.289 13.776L84.063 9.95zm13.44-.463c5.729 =
0 9.636 5.078 8.902 11.021H92.446c0 1.552 1.567 4.552 5.288 4.552 3.2 0 5.3=
45-2.815 5.346-2.817l2.843 2.2c-2.542 2.713-4.623 3.96-7.882 3.96-5.823 0-9=
.77-3.684-9.77-9.458 0-5.223 4.079-9.458 9.231-9.458zm-5.046 7.894h10.084c-=
.031-.346-.578-4.552-5.072-4.552-4.495 0-4.98 4.206-5.012 4.552zm16.688 10.=
558V.917h4.208v27.022h-4.208z" fill=3D"#FF2D20" fill-rule=3D"evenodd"/></sv=
g>
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/drop_arrow.min.svg

<svg width=3D"10" height=3D"5" viewBox=3D"0 0 10 5" xmlns=3D"http://www.w3.=
org/2000/svg"><title>drop_arrow</title><path d=3D"M0 0l5 5 5-5z" fill=3D"#0=
90910" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/drop_arrow.dark.min.svg

<svg width=3D"10" height=3D"5" viewBox=3D"0 0 10 5" xmlns=3D"http://www.w3.=
org/2000/svg"><title>drop_arrow</title><path d=3D"M0 0l5 5 5-5z" fill=3D"#B=
5B5BD" fill-rule=3D"nonzero"/></svg>=0A
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/callouts/lightbulb.min.svg

<svg width=3D"28" height=3D"40" viewBox=3D"0 0 28 40" xmlns=3D"http://www.w=
3.org/2000/svg"><title>lightbulb</title><path d=3D"M12 28h4v-8h-4v8zM8 40h1=
2v-8H8v8zm13.98-14.52c-1.001.705-1.661 1.545-1.98 2.52H8c-.416-.959-1.076-1=
.799-1.98-2.52A13.99 13.99 0 0 1 0 14C0 6.272 6.272 0 14 0s14 6.272 14 14a1=
3.99 13.99 0 0 1-6.02 11.48z" fill=3D"#FFF" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/callouts/exclamation.min.svg

<svg width=3D"6" height=3D"35" viewBox=3D"0 0 6 35" xmlns=3D"http://www.w3.=
org/2000/svg"><title>exclamation</title><path d=3D"M0 29h6v6H0v-6zM0 0h6v24=
H0V0z" fill=3D"#FFF" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc----
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: https://srv.carbonads.net/static/30242/99598a49bedd4878110a5f6071eff761b3c1e2da

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAICAgICAgICAgIDAgICAwQDAgIDBAUEBAQEBAUGBQUF
BQUFBgYHBwgHBwYJCQoKCQkMDAwMDAwMDAwMDAwMDAz/2wBDAQMDAwUEBQkGBgkNCwkLDQ8ODg4O
Dw8MDAwMDA8PDAwMDAwMDwwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCADIAQQDAREA
AhEBAxEB/8QAHgAAAQQCAwEAAAAAAAAAAAAAAAECAwQHCAUGCQr/xABOEAABAwMCAwQHBgMEBgYL
AAABAgMEAAUGBxEIEiEJEzFRFCIyQWGRsRVCUnFywSMzgRZzofEXOGJ2krQYJFNjteElJig0NTd0
pLKz0f/EABkBAQEBAQEBAAAAAAAAAAAAAAABAgMEBf/EACkRAQEAAgEEAQQCAwADAAAAAAABAhED
BBIhMUETIjJRYXEUIzNCQ4H/2gAMAwEAAhEDEQA/APGDnHka+w8Y5x8aA5x8aA5x8aA5x8aA5x8a
A5x8aBwIVvt7hvQG9DZd6BvMPI0UvMKBaIN6A3oDegN6A3obFAHokK9xJHy/zoGc4+NAc4+NAc48
jQ2OcfGgOcfGhsc48jQHOPjQ2OcfGgOcfGgOceRobHOPjQOUeXl3+8kKH5Ggbzj41dCOoCgKBKBa
IKKKIkb+/wDp/cVFOoCgjqqUVSn1lBQFAHxoUVQVQUAv+Un9avoKghoCgKAoCgKIKAooogoCqJne
pb/u0fSimfDbpUZMo0KAoCiEopaAoJG/vfp/cVCFoFoI6qlFWB9ZQUBQBoUVYCqgoBf8pP61fQVF
Q0BQFAlAtAUBQFAUBVQoBNBZc6Fsf92j6VFR/H/GqIagKIKAoCiiiCint/e/T+4qB1AtBHVUtWB9
ZQUBQFAUBWgUQrn8pP61fQVFQUBRBRRQFAUCUC0QVQoG/wCVBL4dBRUznUt/3aPpRLTKIrVGhQFA
UBRBRRRD2/vfp/cVKp1AUDT4mqpKsElZqEoCgXyoCgK0goFc/lJ/Wr6CoqCgKAoCgKAoCgNqqFAJ
91BKOm1AoH9KCdwdW/7tH0oG7dKaVTqAoCgKAoCiCipG/v8A6f3FQLQLQMPQ1VJVD/ECpUpagKA9
1AUBWgUAv+Un9avoKghoCgKIKAooohQN6ocB/nUT2fVUvjQ2cBQ0nc33b8u7R9K1Ipmxq6FKuYKA
ogoCiiiCint/f/T+4qB9AUDFeNWLCVQ8eFSoWoCgPdQFAVoFAOfyk/rV9BUENAUBQFEFAAb1TZ4H
lUQ8VVLtQOA+VA4Df8q1Iqw4Orf92j6VqRLTeU7b1vTLjq87YogoooCgKAoHt/eH+z+4qB9AUDTV
IbRTh4ValLWQUC0IQ0C1YgqqF/yk/rV9BUENAUQUUUCgb1UPA/zqJ7OqrobVBIE71UO2+VajRwG9
akS1bWjq3v8A9mj6VqeGBydKo4avO6DwoPWbSXsqr9qtplgepUfW+1WRjObJDvTVndszry4yZjQd
DSnBMQFFO+xPKK8uXU9ts06zi3N7ZFV2M2UIAK9f7QgHwJsLw+s2p/lz9L9L+WCrp2a98tvETiPD
4NXrdJm5ZhtwzBvKE2lzumEQJQjGMY/pRKisnm5ucbeVanUfbvSfS8tLOIDSCVoLq9mWksy+tZNJ
xB2K07fGWFRm3/SYrMoEMqW4U8od5faPhXbDPum3PLHV0w5W0Pb+9+X7ioQ+g7ppvhruouoWDafs
XBFpeze+wLG1dHGy6iMqe+hgOqbSUlQRzbkAjepldTaybr11V2MuW7Hl18tJO3q72B8Df4/9drzf
5c/Tr9L+WqfEJ2b+vegeOTs2S7bNSsLtLZfvd2x8PJlwGUglT0iC8nn7pAG6ltqWEjqrYbmumHUY
5XXpnLjsdQ4PeDi6cXLufNWzPomEf2ETblOmTAXO9JFw9I25eR5nk5PR+u+++9a5uX6evCY4dzXv
WDSjLdEdSMp0wzaL6PfcYlFovoBDMyMv1o0yOVbFTT7ZCk+XVJ9YGtY5TKbjNmvDauLwJ3iTwjr4
sf8ASRDRbUWN69/2K+zXC+UszFQ+69L7/l3JTzb938PjXP6339umuzxtx3CzwEatcUFsdy633CDg
enTMhcVrLbq24+ua8yrleRBiNlJdDZ3ClqWhHMCkEkEByc0w8fJjha2jzrsftQLbYJd0001fsuf3
eEhROPToCrSZC0DctMyUyZTaVn3BwJHmoeNc8eqnzGrxPIi7Wm6WC63OxXu3v2m9WWU9Bu1qlILb
8aTHWW3WXUHqFIUkgivVLtycftWgL/lJ/Wr6CoIaIKAopQN6qHgf51E9nVVKBQPCflREgG/wFXSy
FCd/CtRLklSitsrq09W/7tO3yq6QvJ0rQ67XldBQczabnc27haWmrpNaaRMjJQ0iQ6lAAdT0CQoA
CpYr3w7YWVKi6TaHqiyn4ql5RJC1MOrbJH2avoSgjevF0vuu/L6aRdlRJkyuLy3rlSnpS04ZfQlb
7inCBzRegKySBXbqfwY4vbe3Wu39n/hXFFmA4kC7nGqGp8+2vmI/GmPWbG4bkSPDhtyvRloShb3d
96pagshKgdkJ6q44fUuH2+o3e2Xy1I7QngixTSPMNKLroTanoVr1fvH9mGcILzkhmNeXCgxTFddU
txLT6VkKSpSuUp3HQ7Dpwc1yl7vhnkw16Z0zHQ/gJ4FcPwy28QuMztZtUsujl+ShoLkOKDWyZD0e
IqVEjx4yFq5EFZLiyPeQrlxM+Tkv2+IvbjjPLCvFrwm6F3DQCy8XXCm4/D0/lhh3JMUW484w3FkP
+hqfYTJUt1h2NJ/hPNFRT4lO3L62+Lky7u3L2mWM1uNCOGX/AFjtBv8Af/H/APn2q7cn43+nPD3H
qB2xt0utuzbQoW26zbbz2W9qWIkl1jmKZMXYnu1J3I929efpfVdeX4dp7JvXrPc7uOpOiGf3+Zmm
PWmxNX3GlXp1U16KyX0w5kPvXytS2V982oIUSE+tt0VtTqcJNZRePLfhk/s7sEtumPEXxzYBZkd1
ZcWya1xbMx0/hw1u3F6O309yG3EpH5Vnny7scauE1aZxlaRYlxtaM3LWDR5j0vVjRW5XixXKzpCf
TJTdokuNXG0PJTvu4ko9Ii/iCth/N6TizvHlq+qmePdNuLtPXscXvEf+oc3oRsR/6bd8Qav/ALj/
AMHceFO84bxJcB0bh+wLUYafaiWrF3McyBEJzluVukJkKcMoMpcbccYlj2loUN0rWnmCganJLhyd
1nhcfOOmnGP8MvaA8EFzyXOtJUWrUS0TIC499YtDrt0aeZSsOiQuzSTGeU8jl6KaC1AFQ6g10vJx
8nisduWPp5f6m6g5Hqrn+U6iZe1DZynK5npV+RAjGGx6ShtDKilgqUUE92OYE7825PWvTjjMZqOd
u3pJwI8FWm2pen2ScRfELLdb0ux1c37HsIfdiR5LFrSVz5855nldLDZSpCENqBUUqKjtsDw5uay9
uPt0wwl81sTgmmPZq8YsDMMI0nxWbpXl2NxPSbffuR+1yiyVd0iYy2/JeZktJcKQtDoC9iOid+Yc
8suXj83ysmOXprDwcdn5F1V1O1Yj6xXFxOAaI3+RjV1ZtT5YF7ukdSlKCJQ3LcZDQQ6spPMedKQo
esa6cvP2ya91MePfts/gGL9lxxG51d9A8D03l4/k7TUxGOZdF9MgC4mFuX3LdMVKeLqkpSVpEhoB
aQSAoVzyvLhO61qTC+GANAeC3EcV47cu4edYrJH1Hw62YjOv2Mvy++jpmxXHYvoUpQjrbKXUBbja
wFcvOFbdNq6Z81vH3Twzjh92q1J4vNPML064t8508wmwMY/hdpvNkjW+wMLdW001KiQ3HkhTq1r9
dTiid1e/pXTiytw3XPOfc9DeOrha0A0oynhTgae6aW/GYef6kRrLmLEd6WsT4C3oiVMOF19ZCSHF
dU7Hr41x4OTLKZbvqOueMmmb9fuGvs9uHO7YtqPqjiUWwYy5Hk22zadW/wC0JirzclrQ4qU4wl9b
jiYrQ2AJS2Of19zyCsYcnJn4i5Y44+awrwy8JHDBq1G1w4mLzj0/JtI4GT30aYaZ29Ephtmz2psP
KLkRlaZDzyySlpkr2Gw6KKhy75OXPHWPyzjhLuunLT2Xuv2GZfAt1tXws5vZByWa43lxcB9bi0L7
l0RUyZTMhtKkgPNkJcHmNwqtf7sLPk+y/wAMXcC/BpgurllznWvXK6ljRzTmTKipjRpC40e5uW5r
0ibKfkt7OJisNlJ2QQpZJ6gJIV05+a46xx91nDCXzfTZbTbFuzP4u7zfNHtMdPrnpxmjEGRKxbI2
0vQZExqP7ciIVS5KHuTcLU3JbCijrt0PLzyvNxebdrJhn4jyC1a0yvejmpubaYZE4iRdcLujsBya
0kpbktAByPJQlXUJeaWhYB8N9vdXv48pnjLHDKaunRVp2Lf92nr/AErrIzocp2q6HV68boKKuW3/
AOJ2v/62N/8AtTUHvt2xn/yk0N/3pk/+GrrxdL7rvy+mkfZRf63UH/cy+/8A5Ra7dT+DHF7dC7Rr
/XY1X8++x/8A8JhVeD8InJ+T157QDL7TgC+C3N7+vu7HimrdouV5eI3DcVmKouuH4ITuo/lXm4Jv
un8Oud1p3zjJ1T4itOncJyPQzQvG9c8PvMFxF3nu2yXeZ8OSVpXHU2iE+gmM82vcLCVDmHUjdO+e
LHG+LdLlbPTTviU1F41nuEnK5+rGlek+mum2X25iHdbFHfuETIohmy0BlpqE4+4z6QpYCy3uopTz
FQBSrbrx44d/i21jK5a8vJrhl/1jtBf9/wDH/wDn2q9PJ+N/pyx9x7Sdp3w2a3a8ZZpDO0mwR/MI
mPWq6xry+1KhxksOyX46mkq9KeaJ5ghR3G/hXl6fkxxl27cmNvpyfAnwwXbgwxXVPXXiHu1sxKfO
s6I71uRKRIbtdpiLMh1Uh9sltb77oQEttFXspSCpStg5uT6lkxXDHt811/sws/c1W1l4zNS3I5iD
Ob7arxHiK9pliQ/ciw2rx6paCQfjV6jHtxxhx3drSLQHiqlcMfGFq45e5TqtKs7zy+W/UCCCVJi7
XSSmPdG0Df14xUefYbqaKh4hO3XPj78J+9OeOWsnsjxmWjGrJwPa4RMMiQ4eOyMckXG2M2/b0RX2
hORMcdZ5CU8rrjyljl6et06V5eK25zbrn+Ly2snZ5QM24asO1+4ZtQMhyHVG4WyBckY65MiQEokp
2RdYcaSyhhxp9h0LCAt0b8uxPrA16Lz6y7cp4c+zxuNvuz8tXHnZsxvVu4gjfUaTRLS43FbzKTHl
3L7TDjYjiC8lx2SWwgOc/eKKNuXl61y5vp6+323h3fLyJ48V4gvi61tVhAjizi7sCb6Lt3JughsC
5lPL039K7zm2+/zV6eHfZNuOf5PWDg/jsa+dmzmWiuHTozObWy2ZJjEqEtxLZRNnPyJ0JTvXdLch
L6U856e1+E15+X7eXddcPOOnn7oH2Z+u2r1yyOHqHbbhoZaceQAxdr9bRJXOmKWElmMwmQyVtpSl
Si8FFHshO+/TvydRjj68sY8dvt6G9mwcQY064meG7H8xi3+64jmV5ZiZIw2I/wBo26dEbtzVyZZ7
xxXdh6KsdFHb1evrCvPz73Mm+P5jTTgf4M+ITCuLXELpnGnt2xLGtKJc+Xecrlt8lvmlEV+Iw3Af
35ZIfU6FDuydkblWx6V25uXG4eL7Ywwsyb0R9TcTv/awtWW33CO69j2lcrD5L6FpKXLu2/8Aar0Y
KBO62mVEKHiClSfEVx7bOL/63v72rPFvwUa/6jcZ9zzDFcTTM0/zS4WW5qzxyTHagW1iDHjNTPTe
dwOIU16OpQAQecFPL13268XNjMNX2znhbk2j7StSV5lwRLQoKQrVuGUqB3BBfg7EGufT+sv6a5Pc
a+dsz1vXD6NzsIeSdPzct1b6P5Z5/h0DgPgcaWEaUZFqXoIMOzzTGZJnSbnpfeJjy5ztzt6Qh5MR
plCFR5LraUcqS7yuAtkp32rfP9O5ay3tOOZSeHodo/ItXGriWaQuJHhBVpzLtKmYzd2vkMtuTlvp
c71dvlPx4s1lxgpHMUkj1k+vvuK8+f8Aqs7ctuk+/wBx0bs/73bGeHfW3S3SyZasqyzS7McthY5C
upCo1xakOuuWeRLCFIKmZXLyKWCAeVW1a6iffLfmROP1ZHSdLdbO0GzbKp9ltvCbp9p7PsjLq5uR
ZHa7raISVpIR3LEpMlZeU5v07oKSU9SQK3nx8Un5WszLO308juLTIs4yviH1IuepUXHYWdsyotuy
eLijzsi0tyIENmMUMOvKUsqSlADm56L5h7q+h0+MmE16cM92+Wv6k7d3/dp+ld5GbRy9N61pnbp9
eF1FA9pxbLrT7Z5XGFpcbVtvspBCknb8xQbD61cV2unENZ7DYNWcsi5Da8ZlqnWaPHtkKAWn1tFl
SiuK02pQ5DtsTtXPDixw9N3K326JpDrHqFoTmSM/0wvDNiypuDItyLg/EYmoEaUUF1HcyULRue7T
123FaywmU1Uxy16cdqZqfmur+dXfUnUC6N3jMb6YyrncmozMRDhiMtsM7MsJQ2nlbaSOg6+JpjjM
ZqFtrJus/FfrpxBWCxYxqvlcXIbLjUv06zRWLXCglt/uVMcxXFabUociiNlHas4cWOF8Lc7fbuuk
PHbxPaLY7GxDD9QUzcWtzYbtNkv0Jm6Nw2x4Nx3HQHm0DfogOco9wAqZcOOV3YszsY51r4ldbOIa
ZBk6sZvIyCLalKctNiYaahW2K4ocpcbiR0oQVlPTnXzK26b7VcOPHD0zcrfbFOK5NecLybHswxyU
mFkGLXGNdbJMW2h5LUuI4HWVltwKQsJUkHZQIPvrVm5pJdN2D2m3GeQR/pOtw3G24x20b/8ALVy/
x8P039TJrnq3xH65a6FhrVTUi65Xb4rgei2Nam4tubdSNg4mFFQ0zzj3KKSr410w48cfUS5W+1vQ
/iY1l4c15I5pFk0bHF5aIovxkW6JP74Q+97jl9Kac5OXvl+ztvv18KZ8eOftZlZ6Yevt7uWTXy9Z
JeXkyrxkU+Tc7vIShLaXJUx1TzywhACUhS1k7AbDwFb1pis+ji54gDoy5w/vZwmXpY5bjaPsOTAi
PSEwe8DqWEzVtGQEoIAR6/qpASOgArl9LHfd8td91pwujHE1rjw+uyzpTnsvHrfcHe+uOPvNtTbY
+7sE94uJJStsLIABWgJUR4npVz48c/cSZWembc17Rzi7zmyybBL1JZx2DNbLUx7HbbGt0taCNlAS
khbze4Pi2pJrE4MJ8NfUtaOKUpalrWtS1rUVLWokqUpR3KiTuSSTuSa7MMnaT6z6oaHZKcs0rzCZ
iN5dbDM4scjsaWylXMGpUV5K2Xkg9QFpO33SKmWEzmqstnpsRqL2hnFjqVi0vE71qK1ZrPc21xrt
/Z+3x7ZJksqTsttcloF1KVgkKDak7joelYnT4S701eS1qpp/qFm+leT2/M9OsnnYhk9rCkxLtb18
i+7WNltOIUFIcbWB6yFpKT7xXTLGWarEtnluDkPaVcYeR2J6wO6kRLOiS0WpN3s9ohw7gpJ8SmQl
Cu6V/tNhJHuIrlOnwnw19TKtLbRkmRWHIYOXWW+zrZlNsnC5wMjYfWma1NSvvPSA/uVlZUSSSTv1
333NdtS+GN6bXZ1x9cVuo2HPYLkupu1hmtCPdlW23w7fKmsgbFuRJjtpWUrHRaUcoUOitwTXOcGE
u5GryZV1LUvi91+1hl4DN1Ay+Jd5GmF3bvuFKZtUGIIs5otqQ4pLDKA6AWk+qvcdPCrjxY4718pc
7XA628SesXEW/jknVzJY+RO4miU3YlR7fEgd0mYWi+CIrbfPzFlHtb7bdPGtcfFjh6W5W+1bRriG
1l0BuMy46T5vLxlNzKVXa0lDUq3y1IBShb8OQlbSlJB2CwAoee1az4sc/cSZ2embNRe0B4q9UMdl
4pfdRG7PY7kyqPdI+PQGLY7KaWOVbbkhsF4JWCQoIWkEdD0rOPTYY3xC8mVa7aZaoahaO5Mxl+me
VzcQyBlvuFzIaklDzBIJZkMOBTTzZIB5VpI36jrXbLjmc1WJlZ6bWZN2jnF1lVjfsL+okWxsymy1
KuVktcWDOUkjY8shKVKaJ82+U+RFYx6Tjl3pu8uVaSKU4844++4t555anHn3FFa1rWeZSlKVuSST
uSepNeqRytWVJ6o/u0/StRm0vIP61odH3+Ar57uTf4Cg9huzc4SdJtTsK1A1r1txtWUWvGLi5a7B
jE1LyIaURIjUyVMdYRyKkFQeSltJ3T0V0JI28nUctxskdePGXzWk3F1nfD9nOc4/P4d9LZGlmJwr
Opu9w5sAW16bOXIcIf8AR0vPJDaWUo5SCCSVbjpXbimUn3XbGdm/DWJdsurUJNzdtE1u2K9m5Liu
pjn39Hink9/nXRlUZbekLS1Hjrkur9hplCnFq9/RKQSaousWq8SpSoMWzTpM5DZdXBaiPLeS2Pvl
pKCoJ+JG1TYopURzeqAQPL4igtw4VzuIfVbrZKuKYieeWqJGcfDSfHdwtpVyj86D1l4W+EXRHVXg
s1G1uy+y3CZn2NsZc5ap8e4yI8dJs8NT0TmjtqDauVQ67jr7683Jy5Y5yT0644y47eRrDjjwYQls
OPPhIbbQjdS1EeCUjck/AV6nJenQbna1tN3S1yrY4+nmYbmxnI6lp8d0h1Kdx+VTYZ6JcO49K+zZ
Hom3N6X6O53XL4b95y8u3x3qqjZRJkr7qLEXKd2J7llpTi9h4nlQCdhRCPh+Kstyo6oro25mnmy2
sb+G6VgHr7qgty7fd7ewzKn2eXAiyf8A3eVKiOstOb/gW4lKVf0NB6CdnJw7aXcSWoGo+O6qWqXc
7ZjWPRLjaW4Mx6CpD7sssrKlMlJUCn3GuHPncJNOnHjL7aj8QGK2TTzXLWDBcbYMXG8My67WeyMv
rLzjcSHJW00lbqzzKISBuSdzXXjvdjKxlNVjN633ePDRcpFnlx7c57FxdiOojq/J1SQg+PnW4iBp
EiVyNR4ypLqlKKWWWi4ogAEkJSCTtVRZYtt1ky/s+NZpci4cvP6A1EdW/wAn4u6Skr2+O1QVVc7b
jjLjIadZUUPNLRyrQoeKVJOxB+BqnpahRZ1yf9EttueuUrbf0WJHW+5sffyNhR/wonsx1t+O+5Gl
RjFkMnZ6O80W3EHyUhQCh/UUFhUaa2wJTludahkAiWuOtLRB8CHCnl6+7rVi6TzIdwtpaFztj1sL
7YeYTLjrYLjZ6BaA4lPMk+Y6VqJVpy13iPERcJNjmR7esbtz3YbyGFDzDqkBB+dXc9IroVvseRvr
/sitSJtYSr/Yb/4RWpESpV/3bf8Aw1uQ2sJUf+zb/wCGtSMralH1PURvyJ+78K1IF36fy2/+GtaG
O6+a7mLQHELQTsFpKSfzG1B9S3ApxF5Lq3wt3vLb1j9stczSf0jGbREhLeLUqPYrPEdZdfLilELc
KyFcvTyr53NxzHLX7enDLcam8IIidoFrxkvEprbg9iSxpJZLPjuOYdFDsi2v3F52VMRMkNyi53hY
Qo8qFerzKSrbdNdOX/Vj2z5Zx+67dlwztOGM54lI2h07S+yjRbJMiXhdluilLcnFSnlRI0mQwveM
ph51IBaCAUoUDzKI2MvT6x3vyTk3dKj/AA74noL2nmhs7Abc3ZcO1OtGQXiNj7A5Y8C4RrdLamNR
0+CWl87biUjokqUlICQkU77lxXfwdusnfuMDjbxbhP1juuO4ZpNEzDUbNrRb7jqDlE6YqEEQ0trj
QIjS22nXF8qW1r23ShJVv1Uo7Ti4bnj5vgzz7a+e3FbBKzfM8dxaEsR5mZXyFaYrp6hpy5S22EqP
Tryl3evdbqOM8vo84ktcsN7OHSbTDT7R7Ti2XS6ZEX49viTFqjsqZtzbXplwuDjKe9kPvLeSOpG5
Uo7gJCa8HHheW22u+WXZPDsmkWo2Dat8C+s2o2EYVG09VlVgzaVmeJwlc0SPfk211uc5HPKgcj5Q
l4bJHVZ3HNvUyxuPJJf4Jd4sBcB2iVv0Z4TEcSdg0tOruueaW525YpZWwyJTcYyDGhQ4jsjZLCVB
PfvuJ9YgkdeVIrfNn3Z9u9RMMdTfy2C0pk6wcVmO57pfxp8LkTCLM9C7/G8gY5FMKLiu7KGS5JlP
MS2SQ426hQBAPQbbKxlrC7wrU3l7jE3BJBZzDRDib4JcxnpuVw0kveRYbHfe2JXaLquS3GfSj3d3
JQ6rp7PqjyrXN4ymc+WcPVjAnZG6UPY9levWqOWsJt7uAt/2ID8hPKliS04qTdlcx9nuwwyCfImt
9TluSROKa2zBwbYVjGvWa8QvHLmeLf2/u83KrpA0hxl5tuQqNAs8dAYMdp/ZsyXWu6ZbUojkIJBH
MTWeW3GTCLjN7yZu0j1T4m9aM3u+nHExwexMZ0byqLMRCub6mZrUPu0KW0xckPSHkvd6kcgW02jl
WR6ux3TjLHHGbxvlqW33GFuCnRq26B8c3FZppYlLONW7GbRcMXQ4orW1b7lITLZYUtXVXc94W9z1
ITuetb5c+7CVnDHVrrnC3w34RqdxjcYWr2oVoi5FbtONS7pbsUsc9tL0T7SfkuyHpjzSwUrLDYQG
woEArKtt0pIvJyXHDGT5hjj5tXdK+00Y1e4ioeiF90ssrej+b3h/FsXmrK35pUVLahuTY7oMdbUh
SAktpQOTmHrK2O7Lp+3He/JOTd0hxrh6xfh+7UHTePgsNFqwvUPE8hyG0WJrfurfIEJ+PMjMg+y1
zpS4hP3QvlHQCl5LnxXadus3M8WPG/Y+FDiKvdmwPSC05XmWQW+03HVfLrjJcjy3mAwlqFb4a20K
KQ3HbC/W3RzL9gnmNTi4byY+auefbXEdolo1hGt2iulXEjp5Z49rzDKLhjcQ3FLSWnLhbMqU2zFT
O7sfxHI777XKo9QCtO5G216fO45XGpyYyzbYrKsUzngy0kwjBOEDh5a1Ty64goyzKHw0hHNHQ330
y4rD8d992S4v+GhLgQgA+ASlJxLOTK3O6asuM8RiniU0ruXEvwd5Hqxq1oynSDiE02t026pbHcqe
Wi1jvZDYfbUtTsWUwlRQhxRLa/f6u6tcWXZnqXcqZTeO77ZGsea4Dpv2dmj+o2ouMHM7FhGJ4teL
fi45OWZdGlsJtqF94FICRJWhRKgQnbm2O2xnbcuWyfuruTHda1cMms2F8cnFlAzHVjT+y2W96aYG
+1gOKOyvtCLKlfaIdclhuQ02Fux2nfVTynbcuDqkEdeXC8OGsb7rGGUzy8tndRNdOLHT3VLKrZl3
Cw3qLw3IMqPapmHNput1egJQe4eejrkFJ59tnWVMJCR7Kjturnjx8eWPjLWX8tXLKX14fP5rlfNP
sn1WzC/6YYXcNOsSukoPMYTc0toet0rlAltJbbJDaC8FKS39zfl2AAr6nFjZjJbuvLlZb4YrSmus
YtTpT4VuJtYSn3VZBZUjqj9CfpW4H8nq1pGNq+W7iivoQ7L5J/6F+t3Q7HJcjAPmfsKD0rw9R+cd
+P01X7JjiGw/TDMMz0rzm7Rsfhanpt0zFr1McDUb7VhJcZVEcdUQlBkNujuyroVI5d91JB6dThbN
z4Z4stXTZLB+y8u+FcUEPV2dqBY3NGsZyZzMrNbwHk3VRbeVMjQ5AUgR0ttOEczodPMhPsgk7c71
G8Na8tTj87chc9f8T1v7T7QmzYFc2b9i+llnyK0qv8VYcjTLlJt0p2aqO4nottoNtt846FQXsSnY
07LjxXfyd28mi/atj/2vLn8cPsO3/wBzXbpvwY5fbQLDMkkYZl+KZhEa7+ViV5t96jsb7d4u3ymp
IRv09ot7V3ym5pzl0+j7ij0Cx/tE9KNKtRdFdQbREuNiMiRaZdw7xyK7FuTbXpcKZ6OHHGH2XGUd
Cg7EKSR13Hg48/pWyx6Mp3zcdl0i0vxLRngY1m0zxjM4efT8WsGax86yO3AiGu/uW112YwxuT6rA
WhrxJ3SebZW6RMsrlnLf4WTWOmB+CXVCNr9wXL4csO1Sd0n11we1OWuyXWLILM5LLUn0qBOjhKkr
cZUkhh8NndPrdBzJ33zY9ufdZuM4XumvlLjPDJxSYZjmX5hxQcemS6fY1Y2O8gXDHb++62lKOZTj
sp24stDqAA202krUffvskryY3xjiTGz3WgvAlrn/AGK4227jKya6ZBjus1yuOM3PJL4QLhcFXCQX
bZOnbEpD7khtvn69C4oV25sN4f0xhl9z1a417ljfCzwq61Iwxardf9ecpnobIKUrNyyg73JxAGx5
URGXdvI7V5uLeec38Omf2xqf2WGuOJSNNdQOGK+5X/YbLLxMn3HT+8oeTGfeRdIqWHxCdWQPSYrr
feoSOpCtxvyq269ThdzJnjy8aZXw7hB41rfkN5k6yccmQWLTOzR33G8gsl8lie+Ej+E68me0iPGQ
kes5zLX5A7etWby4a8Y+V7cvmut9nzeoF84wuJl606pX7Wm0W7F7XbbbqXka0uTbm3ElhtSwpHQs
pcCktH7yAFbdavPNYTxowu8q5PhQ4gsLwHjC4xtGc5u0awo1E1Mut1w+5TnAzGensyHY8iCpxZCU
reb5FN7kcxSpPtFIM5cLcMbP0mOf3WKGkfZhXfSniWgau3zUSxv6R4LfH8nxmMkvN3NakKW7DZmd
4hLDSI6lArcS4rnCR6qeY8tz6jux1ryTi1ltyVn19xXXbtQ9NE4LPavOJab4lkWPQ7/HVzsT5i4b
8iY6wsdFtJUpLaVDorkKhukg0vHceK7Xu3ktcXnAq3xUcQd1ybTjVewY9ktqt9qtmq2LXVDzkyGg
MhcOdGbZB5w7HWEgL5UlSPb35gHFz/Tx1YmfH3VX7QvVvDNBdDtIuHbCLqzdcvxu4YxLatQcSt2J
asUW1IYdmBB/hqkPx2gkHxHOodE06fC55XKnJdTTOGrDmoXGdpLp3qRwd8QL2n15t/eLyPHmbk/B
Q76W233kO4+ipccZkxHGyE8zZSoKVsdilVYw1xZWZzbV3lNytR+InS/U3Qnh1u121z44M5u+pWQw
ZMCJphbbn6RbLw5L5mhDS3JSiS4wGifSHSEp23AG5SFd+LKZ5/bjNftjKWTzWTda0EdkjhSeXYJx
XCOm3gPtCDtWcP8Avf7pl/zeZPBbpdptqxqkrHc31dvOjmSxWmp2nV8tD7ENyVNbWQ9HRLe/lPBJ
SpsJPrjnHjsD7OfLLDHcm/248clvmvcDRXS/jY011afY1B10s2ovD7b/AExSZF8Ql2/Pxu7X6JzO
JitKaebUUl1SnlIICtt9xt8/kz4ssfE1k9GOOUvm+Hjb2heY6c51xP5VeNNX4Vxt8W3QbdkV8txS
qLPu8YLEh1txHquciC20pY3ClIOxO29fR6THLHjm3m5spcvDSpCPOvZI4pgn3VZBMlNbFpadij9C
en9KsC8vT41rTO2MK+U9QoL8a7XeEyuNBu8+DGcJLsaNKeZbUSNiVIbWlJJA2O4qaHHlIUCkgFJ8
Unwqo7G9mGYSLULFIy6+yLGlPKmyO3KWuGE7bcvo6nS3tt7uWnbF3XCRZEmE6iRCkvQZDW4akRnF
MuJ3Gx5VoKVDcdOhpU2klS5k50yJ8yRPkFISZEp1bznKPAc7ilK2HlvRNoEgbK/L9xQ25a1ZBkFi
RKasWQXSxtThyzmrdNfiJfBG2zqWVoC+nTrU1KbquxdLrFjLhxbtPiwnebvYTMp5tlfP7fM2lYSe
b37jr76aN1VjvPw5DMuHIdhy4yueNKjrU062ofeQtBCkn4g1TbmL3lGU5KlhGR5ReMhRF29Gbuk+
TNS3t4ciX3FhP9Kkki7rgULW2tDja1NuNqCm3EEpUlQO4KVDYgg9QRWtKuzLtdrilCLjd59yQ2eZ
tuXKefSlW226Q4tQB294qagoDoUqBIUkhSFDoQodQQfcRVR2O5ZjmN6gItN5y++3e1N7Bu1zrlLk
xht5MuuqR/hU1Itri4U+425S1224y7a44Al1yI+4wpSR1AUW1JJHwNKygeW5JccdkurkvPKK3nnl
Fxa1E7lSlKJJJ8zRdOwScvy+da02Odlt8m2RA5U2aRcpTsQJ8gwt0t7dPDlpMYu22HADqFhOlfE7
hWa6g5FExPFLbbr4zNvc0qDDbkmAtplJKEqO6lkAdK5c+Nyw1F47rLdcvx26vWDOOKjKtQ9Hs8cu
Fkn2OzQ4uUWCVIjd4piKEPNB1stLISroR4U4MLMNWLyXd8NI3335ch6XLkOy5UlZXIlPrU464o+K
lrWSpR+JNeiRj05Sy3u+49JVNx+93GwTFgJXLtkt6G6oDwBWwtCj/U1bJWdluFxud5mLuN5uUy8X
B0bOT577kl9Q8i46pSiP61ZP0m1n7SuzsRMB27TnbekJSm3rkvKjgJ6pAZKijYbdOnStTGJtW5AR
sRuPHrXSQdrdy/MpVt+xpWYX6TZyNvsh25y3IpHkWVOlG39KkwnvRcq4RtsAAAbAdABXRhYCdqsg
lSmtidKdvzqiwsdUefIn6VqRmjl6fGtMsV18h7BQKBv+VELsKJsbfCgdtQkLsKi6OG2yvy/cUXRu
woaG3womhQ0NhQ0QpH9auzRNh5UQbCgdsBRS0Uu29VDgKHtMB/DH6j9BVgQDetaPSVKd6MJ0p8PK
roWUIrciLCU+4VqREqUeH0rUNrKEVplOlNWQTJTWhOlNVnaUJrUZ2mWAOX9CfpWoptVGKa+Q9ZQN
6FOoyUUWQ7ailAobLsKJsoA2V0937ihsmw8qGxsKaXY2FE2NqLs3wopNqqaA2/KoF2qh2womzgN/
yoH7DakEm38MfqP0FbkXZyU7+NVirCU1dCwhFakROlPyrURZQirpLU6Uf5VuImSmrILCU1pEyU/O
tJtKBV0zs/YD/wDtWB6/FH6E/SqtMqoxUBXyXrp4FRIX86KcBQLVQu1A8DbxoHgDZXT3fuKgbsKA
2HlVCbDyoE2opu3wog2oE6UCgUDgKKePpV0hwG/j4VpFgJ3bHu9Y/QVUPSmqLCEe+tSInSnetaRZ
QirIbWUJrUYtShNbkE6EVRMlNXTKUJrSbPqgqqkc+5+hP0qlR0GLQPlXyHph1GigVUp1VDwn3n5V
A8Ae+iHbDy3poOA6K6e796aWE2NXR4Gx8qaCbHyppDSB+VTQaRV0Dp7hTSk6eVTRovT3CroKBvRU
gG1WJakSnf8AKtRlZSndsfqP0FESpRWpETJT5VsWUIrUhaspTWmLU6U71ZETpRW1TpSBRLUgTWow
lAAHWqE6eVVSbUCueKP0J+lVabQYur5Ees4D/Kqlp4HvptD9vhRDgPnV0p4HzoWnhP8AWjOz0p6K
6e79xV0bHKfKml2Tl+FEHJ8NqGzOU/nV0bJy+YqLshA/KmjZNqaa2NqukuRyU/0qM7SBPwqiRKff
VRbCf4Y93rH6CtSIekb1vQsIR4VdJatJTWozanSmtSIsoTWhOE/1qw2kA2/OtaZPHT86oXrRYKKb
VZC/u/oT9Kqoqm2WMtq+S9lPTREqR76JUm1UPArUS1IEVU2mCB+dQPCOiunu/cUNk7uqbHd/CgQo
+FAwo+HhQNKKBvLTSk5aGxy1TZwTQShJpE2mSitaRYCd0Dp94/QVqQSoR/51rSWrCU1pm1OlNakR
ZQmtCwlPzqxKmSmtMl/IVQ8DaqooCoIt9qGiuHbk/Qnf5UFffrU2uvDG9fMj0npG39aCZIq6EqR8
6aTaRKa0ysIRREwTTSbSJR0V+X7irpdl5B76ukLyimgwopo2Qo2qaVGUfCgYUflTSmcnwqBeX4da
BwT/AEq6EoTVkQ8Df8q3BZSn1B+o7/IVpEyU1qRKsJTtV0ynQmtxKsJFUidIqyMpAK0pQDQO2qoa
aqmmsiI+J+FFI4fZ/Qn6Vkivzdd6jbHiRua+dXZKBSESpSfKtJamSk+VVhZQ2feKKspQfKrEShB9
wq6RMls7K6Hw9/51qA7s+X+FDY7o+X+FDZC0fHagaW1eR+VBGUK/CfhTQYUHyPyqaU0tq/CflU0G
8h8jV0HhCvwn5UkC8ij7j8q0JUtn8J+VWCylB5B6p9o+74CtRmpkoV+E/KqiZCFePKflWoLKW1fh
O/5VpmpghX4T8q1EShKvwn5VqIlShW3sn5UC8qvwn5VQvKr8J+VENKVbeyfkaKjKVb+yflUaRFKt
vZPX4UqI3Qr1Ryn2E+74VhuKuyt/ZPyNFdBSD41852Sp3qiwgGqzVlA+O9VlbQk1UWEpPnVEyUn/
AM6uk2mSDsrx8P3rWk2dynzq6TY5T500EKVeZpo2YQfM1NLtGpJ8zUJUJB8zVbMPN5n50Qz1vM/O
opRze8n51oSDm8STt+dESpJ8z86RLU435Adz7R+grabSJ5vM/OrEWEc34j860ellJP4j86qJUk9T
zH51plIFHzPzqqeFK29o/OtJS8yvxH50BzK/EfnQMKlfiPzoqPmVuTzH50EalK/EfnWaRC8pXq+s
fZT7/hWXRU5lb+0fnTav/9k=

------MultipartBoundary--QnntsHdTkr4isC3d0SvVQOY6USayKf4xOcr2E0ELIc------
