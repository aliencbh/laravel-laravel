From: <Saved by Blink>
Snapshot-Content-Location: https://laravel.com/docs/10.x/validation#available-validation-rules
Subject: Validation - Laravel 10.x - The PHP Framework For Web Artisans
Date: Thu, 2 Nov 2023 20:52:42 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----"


------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: text/html
Content-ID: <frame-A5F845707B741153CDC5CF227AB7B983@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/docs/10.x/validation#available-validation-rules

<!DOCTYPE html><html lang=3D"en" data-theme=3D"light" color-theme=3D"system=
"><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DU=
TF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-a0db748f-9=
8e3-4566-a61f-0fa1bb8cb88d@mhtml.blink" />
   =20

        <title>Validation - Laravel 10.x - The PHP Framework For Web Artisa=
ns</title>
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1, viewport-fit=3Dcover">

        <link rel=3D"canonical" href=3D"https://laravel.com/docs/10.x/valid=
ation">
   =20
    <!-- Primary Meta Tags -->
    <meta name=3D"title" content=3D"Laravel - The PHP Framework For Web Art=
isans">
    <meta name=3D"description" content=3D"Laravel is a PHP web application =
framework with expressive, elegant syntax. We=E2=80=99ve already laid the f=
oundation =E2=80=94 freeing you to create without sweating the small things=
.">

    <!-- Open Graph / Facebook -->
    <meta property=3D"og:type" content=3D"website">
    <meta property=3D"og:url" content=3D"https://laravel.com/">
    <meta property=3D"og:title" content=3D"Laravel - The PHP Framework For =
Web Artisans">
    <meta property=3D"og:description" content=3D"Laravel is a PHP web appli=
cation framework with expressive, elegant syntax. We=E2=80=99ve already lai=
d the foundation =E2=80=94 freeing you to create without sweating the small=
 things.">
    <meta property=3D"og:image" content=3D"https://laravel.com/img/og-image=
.jpg">

    <!-- Twitter -->
    <meta property=3D"twitter:card" content=3D"summary_large_image">
    <meta property=3D"twitter:url" content=3D"https://laravel.com/">
    <meta property=3D"twitter:title" content=3D"Laravel - The PHP Framework=
 For Web Artisans">
    <meta property=3D"twitter:description" content=3D"Laravel is a PHP web =
application framework with expressive, elegant syntax. We=E2=80=99ve alread=
y laid the foundation =E2=80=94 freeing you to create without sweating the =
small things.">
    <meta property=3D"twitter:image" content=3D"https://laravel.com/img/og-=
image.jpg">

    <!-- Favicon -->
    <link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://larave=
l.com/img/favicon/apple-touch-icon.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://l=
aravel.com/img/favicon/favicon-32x32.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"16x16" href=3D"https://l=
aravel.com/img/favicon/favicon-16x16.png">
    <link rel=3D"manifest" href=3D"https://laravel.com/img/favicon/site.web=
manifest">
    <link rel=3D"mask-icon" href=3D"https://laravel.com/img/favicon/safari-=
pinned-tab.svg" color=3D"#ff2d20">
    <link rel=3D"shortcut icon" href=3D"https://laravel.com/img/favicon/fav=
icon.ico">
    <meta name=3D"msapplication-TileColor" content=3D"#ff2d20">
    <meta name=3D"msapplication-config" content=3D"/img/favicon/browserconf=
ig.xml">
    <meta name=3D"theme-color" content=3D"#ffffff">
    <meta name=3D"color-scheme" content=3D"light">

    <link rel=3D"preconnect" href=3D"https://e3mirnpjh5-dsn.algolia.net/" c=
rossorigin=3D"">

    <link rel=3D"stylesheet" href=3D"https://use.typekit.net/ins2wgm.css">
    <link rel=3D"preload" as=3D"style" href=3D"https://laravel.com/build/as=
sets/app-8aa4d27a.css"><link rel=3D"modulepreload" href=3D"https://laravel.=
com/build/assets/app-c412b7b5.js"><link rel=3D"stylesheet" href=3D"https://=
laravel.com/build/assets/app-8aa4d27a.css">
            <!-- Fathom - beautiful, simple website analytics -->
       =20
        <!-- / Fathom -->
   =20
   =20
   =20

   =20
</head>
<body>

   =20

   =20

    <div class=3D"relative overflow-auto dark:bg-dark-700" id=3D"docsScreen=
">
        <div class=3D"relative lg:flex lg:items-start">
           =20

           =20

            <section class=3D"flex-1 dark:bg-dark-700">
                <div class=3D"max-w-screen-lg px-8 sm:px-16 lg:px-24">
                   =20

                    <section class=3D"mt-8 md:mt-16">
                        <section class=3D"docs_main max-w-prose">
                           =20
                           =20
                            <div id=3D"main-content">
   =20











































































































































































































































<h2 id=3D"available-validation-rules"><a href=3D"https://laravel.com/docs/1=
0.x/validation#available-validation-rules">Available Validation Rules</a></=
h2>
<p>Below is a list of all available validation rules and their function:</p=
>

<div class=3D"collection-method-list" markdown=3D"1">
<p><a href=3D"https://laravel.com/docs/10.x/validation#rule-accepted">Accep=
ted</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-accepted-if">Accep=
ted If</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-active-url">Active=
 URL</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-after">After (Date=
)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-after-or-equal">Af=
ter Or Equal (Date)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-alpha">Alpha</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-alpha-dash">Alpha =
Dash</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-alpha-num">Alpha N=
umeric</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-array">Array</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-ascii">Ascii</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-bail">Bail</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-before">Before (Da=
te)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-before-or-equal">B=
efore Or Equal (Date)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-between">Between</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-boolean">Boolean</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-confirmed">Confirm=
ed</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-current-password">=
Current Password</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-date">Date</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-date-equals">Date =
Equals</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-date-format">Date =
Format</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-decimal">Decimal</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-declined">Declined=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-declined-if">Decli=
ned If</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-different">Differe=
nt</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-digits">Digits</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-digits-between">Di=
gits Between</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-dimensions">Dimens=
ions (Image Files)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-distinct">Distinct=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-doesnt-start-with"=
>Doesnt Start With</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-doesnt-end-with">D=
oesnt End With</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-email">Email</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-ends-with">Ends Wi=
th</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-enum">Enum</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-exclude">Exclude</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-exclude-if">Exclud=
e If</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-exclude-unless">Ex=
clude Unless</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-exclude-with">Excl=
ude With</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-exclude-without">E=
xclude Without</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-exists">Exists (Da=
tabase)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-file">File</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-filled">Filled</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-gt">Greater Than</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-gte">Greater Than =
Or Equal</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-image">Image (File=
)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-in">In</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-in-array">In Array=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-integer">Integer</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-ip">IP Address</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-json">JSON</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-lt">Less Than</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-lte">Less Than Or =
Equal</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-lowercase">Lowerca=
se</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-mac">MAC Address</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-max">Max</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-max-digits">Max Di=
gits</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-mimetypes">MIME Ty=
pes</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-mimes">MIME Type B=
y File Extension</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-min">Min</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-min-digits">Min Di=
gits</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-missing">Missing</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-missing-if">Missin=
g If</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-missing-unless">Mi=
ssing Unless</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-missing-with">Miss=
ing With</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-missing-with-all">=
Missing With All</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-multiple-of">Multi=
ple Of</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-not-in">Not In</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-not-regex">Not Reg=
ex</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-nullable">Nullable=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-numeric">Numeric</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-password">Password=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-present">Present</=
a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-prohibited">Prohib=
ited</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-prohibited-if">Pro=
hibited If</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-prohibited-unless"=
>Prohibited Unless</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-prohibits">Prohibi=
ts</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-regex">Regular Exp=
ression</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required">Required=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-if">Requi=
red If</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-if-accept=
ed">Required If Accepted</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-unless">R=
equired Unless</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-with">Req=
uired With</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-with-all"=
>Required With All</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-without">=
Required Without</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-without-a=
ll">Required Without All</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-required-array-key=
s">Required Array Keys</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-same">Same</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-size">Size</a>
<a href=3D"https://laravel.com/docs/10.x/validation#validating-when-present=
">Sometimes</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-starts-with">Start=
s With</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-string">String</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-timezone">Timezone=
</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-unique">Unique (Da=
tabase)</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-uppercase">Upperca=
se</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-url">URL</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-ulid">ULID</a>
<a href=3D"https://laravel.com/docs/10.x/validation#rule-uuid">UUID</a></p>
</div>
<p></p>
<h4 id=3D"rule-accepted"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-accepted">accepted</a></h4>
<p>The field under validation must be <code>"yes"</code>, <code>"on"</code>=
, <code>1</code>, or <code>true</code>. This is useful for validating "Term=
s of Service" acceptance or similar fields.</p>
<p></p>
<h4 id=3D"rule-accepted-if"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-accepted-if">accepted_if:anotherfield,value,...</a></h4>
<p>The field under validation must be <code>"yes"</code>, <code>"on"</code>=
, <code>1</code>, or <code>true</code> if another field under validation is=
 equal to a specified value. This is useful for validating "Terms of Servic=
e" acceptance or similar fields.</p>
<p></p>
<h4 id=3D"rule-active-url"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-active-url">active_url</a></h4>
<p>The field under validation must have a valid A or AAAA record according =
to the <code>dns_get_record</code> PHP function. The hostname of the provid=
ed URL is extracted using the <code>parse_url</code> PHP function before be=
ing passed to <code>dns_get_record</code>.</p>
<p></p>
<h4 id=3D"rule-after"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-after">after:<em>date</em></a></h4>
<p>The field under validation must be a value after a given date. The dates=
 will be passed into the <code>strtotime</code> PHP function in order to be=
 converted to a valid <code>DateTime</code> instance:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-59"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">start_date</sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #C3E88D;">required|date|after:tomorrow</span><span style=3D"color: #D=
9F5DD;">'</span></div></code></pre><button id=3D"clipButton-59" class=3D"md=
:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cl=
ipboard" data-clipboard-target=3D"#clipText-59"><svg class=3D"fill-current =
h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D=
"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"><=
/path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-=
2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Instead of passing a date string to be evaluated by <code>strtotime</cod=
e>, you may specify another field to compare against the date:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-60"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">finish_date</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">required|date|after:start_date</span><span style=3D"color:=
 #D9F5DD;">'</span></div></code></pre><button id=3D"clipButton-60" class=3D=
"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to=
 Clipboard" data-clipboard-target=3D"#clipText-60"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-after-or-equal"><a href=3D"https://laravel.com/docs/10.x/val=
idation#rule-after-or-equal">after_or_equal:<em>date</em></a></h4>
<p>The field under validation must be a value after or equal to the given d=
ate. For more information, see the <a href=3D"https://laravel.com/docs/10.x=
/validation#rule-after">after</a> rule.</p>
<p></p>
<h4 id=3D"rule-alpha"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-alpha">alpha</a></h4>
<p>The field under validation must be entirely Unicode alphabetic character=
s contained in <a href=3D"https://util.unicode.org/UnicodeJsps/list-unicode=
set.jsp?a=3D%5B%3AL%3A%5D&amp;g=3D&amp;i=3D"><code>\p{L}</code></a> and <a =
href=3D"https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=3D%5B%3A=
M%3A%5D&amp;g=3D&amp;i=3D"><code>\p{M}</code></a>.</p>
<p>To restrict this validation rule to characters in the ASCII range (<code=
>a-z</code> and <code>A-Z</code>), you may provide the <code>ascii</code> o=
ption to the validation rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-61"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">username</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">alpha:ascii</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">,</span></div></code></pre><button id=3D"clipB=
utton-61" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard=
" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-61"><svg c=
lass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 id=3D"rule-alpha-dash"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-alpha-dash">alpha_dash</a></h4>
<p>The field under validation must be entirely Unicode alpha-numeric charac=
ters contained in <a href=3D"https://util.unicode.org/UnicodeJsps/list-unic=
odeset.jsp?a=3D%5B%3AL%3A%5D&amp;g=3D&amp;i=3D"><code>\p{L}</code></a>, <a =
href=3D"https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=3D%5B%3A=
M%3A%5D&amp;g=3D&amp;i=3D"><code>\p{M}</code></a>, <a href=3D"https://util.=
unicode.org/UnicodeJsps/list-unicodeset.jsp?a=3D%5B%3AN%3A%5D&amp;g=3D&amp;=
i=3D"><code>\p{N}</code></a>, as well as ASCII dashes (<code>-</code>) and =
ASCII underscores (<code>_</code>).</p>
<p>To restrict this validation rule to characters in the ASCII range (<code=
>a-z</code> and <code>A-Z</code>), you may provide the <code>ascii</code> o=
ption to the validation rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-62"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">username</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">alpha_dash:ascii</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">,</span></div></code></pre><button id=3D"=
clipButton-62" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clip=
board" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-62"><=
svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vie=
wBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 =
0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2=
h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></=
button></div>
<p></p>
<h4 id=3D"rule-alpha-num"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-alpha-num">alpha_num</a></h4>
<p>The field under validation must be entirely Unicode alpha-numeric charac=
ters contained in <a href=3D"https://util.unicode.org/UnicodeJsps/list-unic=
odeset.jsp?a=3D%5B%3AL%3A%5D&amp;g=3D&amp;i=3D"><code>\p{L}</code></a>, <a =
href=3D"https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=3D%5B%3A=
M%3A%5D&amp;g=3D&amp;i=3D"><code>\p{M}</code></a>, and <a href=3D"https://u=
til.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=3D%5B%3AN%3A%5D&amp;g=3D&=
amp;i=3D"><code>\p{N}</code></a>.</p>
<p>To restrict this validation rule to characters in the ASCII range (<code=
>a-z</code> and <code>A-Z</code>), you may provide the <code>ascii</code> o=
ption to the validation rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-63"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">username</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">alpha_num:ascii</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;">,</span></div></code></pre><button id=3D"c=
lipButton-63" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipb=
oard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-63"><s=
vg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" view=
Box=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0=
 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h=
8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></b=
utton></div>
<p></p>
<h4 id=3D"rule-array"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-array">array</a></h4>
<p>The field under validation must be a PHP <code>array</code>.</p>
<p>When additional values are provided to the <code>array</code> rule, each=
 key in the input array must be present within the list of values provided =
to the rule. In the following example, the <code>admin</code> key in the in=
put array is invalid since it is not contained in the list of values provid=
ed to the <code>array</code> rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-64"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><=
div class=3D"line"><span style=3D"color: #BEC5D4;">$input</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><spa=
n style=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">user</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;=
">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">Taylor Otwell</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"color=
: #BFC7D5;">        </span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #C3E88D;">username</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;"=
>=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">taylorotwell</span><spa=
n style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span=
></div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">admi=
n</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">true</span><span st=
yle=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"co=
lor: #BFC7D5;">    ],</span></div><div class=3D"line"><span style=3D"color:=
 #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"color: #8=
9DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$input</span><span=
 style=3D"color: #BFC7D5;">, [</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">user</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;=
">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">array:name,username</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
>,</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">]);</spa=
n></div></code></pre><button id=3D"clipButton-64" class=3D"md:block hidden =
copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-=
clipboard-target=3D"#clipText-64"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>In general, you should always specify the array keys that are allowed to=
 be present within your array.</p>
<p></p>
<h4 id=3D"rule-ascii"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-ascii">ascii</a></h4>
<p>The field under validation must be entirely 7-bit ASCII characters.</p>
<p></p>
<h4 id=3D"rule-bail"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-bail">bail</a></h4>
<p>Stop running validation rules for the field after the first validation f=
ailure.</p>
<p>While the <code>bail</code> rule will only stop validating a specific fi=
eld when it encounters a validation failure, the <code>stopOnFirstFailure</=
code> method will inform the validator that it should stop validating all a=
ttributes once a single validation failure has occurred:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-65"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">if</span><span style=3D"color: #BFC7D5;"> (</span><spa=
n style=3D"color: #BEC5D4;">$validator</span><span style=3D"color: #89DDFF;=
">-&gt;</span><span style=3D"color: #82AAFF;">stopOnFirstFailure</span><spa=
n style=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;<=
/span><span style=3D"color: #82AAFF;">fails</span><span style=3D"color: #BF=
C7D5;">()) {</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;=
">    </span><span style=3D"color: #697098;">//</span><span style=3D"color:=
 #697098;"> ...</span></div><div class=3D"line"><span style=3D"color: #BFC7=
D5;">}</span></div></code></pre><button id=3D"clipButton-65" class=3D"md:bl=
ock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipb=
oard" data-clipboard-target=3D"#clipText-65"><svg class=3D"fill-current h-5=
 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pa=
th><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2=
 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-before"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-before">before:<em>date</em></a></h4>
<p>The field under validation must be a value preceding the given date. The=
 dates will be passed into the PHP <code>strtotime</code> function in order=
 to be converted into a valid <code>DateTime</code> instance. In addition, =
like the <a href=3D"https://laravel.com/docs/10.x/validation#rule-after"><c=
ode>after</code></a> rule, the name of another field under validation may b=
e supplied as the value of <code>date</code>.</p>
<p></p>
<h4 id=3D"rule-before-or-equal"><a href=3D"https://laravel.com/docs/10.x/va=
lidation#rule-before-or-equal">before_or_equal:<em>date</em></a></h4>
<p>The field under validation must be a value preceding or equal to the giv=
en date. The dates will be passed into the PHP <code>strtotime</code> funct=
ion in order to be converted into a valid <code>DateTime</code> instance. I=
n addition, like the <a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-after"><code>after</code></a> rule, the name of another field under vali=
dation may be supplied as the value of <code>date</code>.</p>
<p></p>
<h4 id=3D"rule-between"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-between">between:<em>min</em>,<em>max</em></a></h4>
<p>The field under validation must have a size between the given <em>min</e=
m> and <em>max</em> (inclusive). Strings, numerics, arrays, and files are e=
valuated in the same fashion as the <a href=3D"https://laravel.com/docs/10.=
x/validation#rule-size"><code>size</code></a> rule.</p>
<p></p>
<h4 id=3D"rule-boolean"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-boolean">boolean</a></h4>
<p>The field under validation must be able to be cast as a boolean. Accepte=
d input are <code>true</code>, <code>false</code>, <code>1</code>, <code>0<=
/code>, <code>"1"</code>, and <code>"0"</code>.</p>
<p></p>
<h4 id=3D"rule-confirmed"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-confirmed">confirmed</a></h4>
<p>The field under validation must have a matching field of <code>{field}_c=
onfirmation</code>. For example, if the field under validation is <code>pas=
sword</code>, a matching <code>password_confirmation</code> field must be p=
resent in the input.</p>
<p></p>
<h4 id=3D"rule-current-password"><a href=3D"https://laravel.com/docs/10.x/v=
alidation#rule-current-password">current_password</a></h4>
<p>The field under validation must match the authenticated user's password.=
 You may specify an <a href=3D"https://laravel.com/docs/10.x/authentication=
">authentication guard</a> using the rule's first parameter:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-66"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">password</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">current_password:api</span><span style=3D"color: #D9F5DD;">'<=
/span></div></code></pre><button id=3D"clipButton-66" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-66"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-date"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-date">date</a></h4>
<p>The field under validation must be a valid, non-relative date according =
to the <code>strtotime</code> PHP function.</p>
<p></p>
<h4 id=3D"rule-date-equals"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-date-equals">date_equals:<em>date</em></a></h4>
<p>The field under validation must be equal to the given date. The dates wi=
ll be passed into the PHP <code>strtotime</code> function in order to be co=
nverted into a valid <code>DateTime</code> instance.</p>
<p></p>
<h4 id=3D"rule-date-format"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-date-format">date_format:<em>format</em>,...</a></h4>
<p>The field under validation must match one of the given <em>formats</em>.=
 You should use <strong>either</strong> <code>date</code> or <code>date_for=
mat</code> when validating a field, not both. This validation rule supports=
 all formats supported by PHP's <a href=3D"https://www.php.net/manual/en/cl=
ass.datetime.php">DateTime</a> class.</p>
<p></p>
<h4 id=3D"rule-decimal"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-decimal">decimal:<em>min</em>,<em>max</em></a></h4>
<p>The field under validation must be numeric and must contain the specifie=
d number of decimal places:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-67"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> Must have ex=
actly two decimal places (9.99)...</span></div><div class=3D"line"><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">decimal:2</span><span style=3D"color: #D9F5DD;">'</span></div=
><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: =
#697098;">//</span><span style=3D"color: #697098;"> Must have between 2 and=
 4 decimal places...</span></div><div class=3D"line"><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;=
">decimal:2,4</span><span style=3D"color: #D9F5DD;">'</span></div></code></=
pre><button id=3D"clipButton-67" class=3D"md:block hidden copyBtn" aria-lab=
el=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-67"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-declined"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-declined">declined</a></h4>
<p>The field under validation must be <code>"no"</code>, <code>"off"</code>=
, <code>0</code>, or <code>false</code>.</p>
<p></p>
<h4 id=3D"rule-declined-if"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-declined-if">declined_if:anotherfield,value,...</a></h4>
<p>The field under validation must be <code>"no"</code>, <code>"off"</code>=
, <code>0</code>, or <code>false</code> if another field under validation i=
s equal to a specified value.</p>
<p></p>
<h4 id=3D"rule-different"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-different">different:<em>field</em></a></h4>
<p>The field under validation must have a different value than <em>field</e=
m>.</p>
<p></p>
<h4 id=3D"rule-digits"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-digits">digits:<em>value</em></a></h4>
<p>The integer under validation must have an exact length of <em>value</em>=
.</p>
<p></p>
<h4 id=3D"rule-digits-between"><a href=3D"https://laravel.com/docs/10.x/val=
idation#rule-digits-between">digits_between:<em>min</em>,<em>max</em></a></=
h4>
<p>The integer validation must have a length between the given <em>min</em>=
 and <em>max</em>.</p>
<p></p>
<h4 id=3D"rule-dimensions"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-dimensions">dimensions</a></h4>
<p>The file under validation must be an image meeting the dimension constra=
ints as specified by the rule's parameters:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-68"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">avatar</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">dimensions:min_width=3D100,min_height=3D200</span><span style=
=3D"color: #D9F5DD;">'</span></div></code></pre><button id=3D"clipButton-68=
" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-68"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p>Available constraints are: <em>min_width</em>, <em>max_width</em>, <em>m=
in_height</em>, <em>max_height</em>, <em>width</em>, <em>height</em>, <em>r=
atio</em>.</p>
<p>A <em>ratio</em> constraint should be represented as width divided by he=
ight. This can be specified either by a fraction like <code>3/2</code> or a=
 float like <code>1.5</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-69"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">avatar</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">dimensions:ratio=3D3/2</span><span style=3D"color: #D9F5DD;">'<=
/span></div></code></pre><button id=3D"clipButton-69" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-69"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Since this rule requires several arguments, you may use the <code>Rule::=
dimensions</code> method to fluently construct the rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-70"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$data</span=
><span style=3D"color: #BFC7D5;">, [</span></div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">avatar</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><div =
class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">required</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </s=
pan><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDF=
F;">::</span><span style=3D"color: #82AAFF;">dimensions</span><span style=
=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><=
span style=3D"color: #82AAFF;">maxWidth</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #F78C6C;">1000</span><span style=3D"color:=
 #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">maxHeight</span><span style=3D"color: #BFC7D5;">(</spa=
n><span style=3D"color: #F78C6C;">500</span><span style=3D"color: #BFC7D5;"=
>)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: =
#82AAFF;">ratio</span><span style=3D"color: #BFC7D5;">(</span><span style=
=3D"color: #F78C6C;">3</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">/</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #F78C6C;">2</span><span style=3D"color: #BFC7D5;">),</=
span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    ],</span=
></div><div class=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div>=
</code></pre><button id=3D"clipButton-70" class=3D"md:block hidden copyBtn"=
 aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboar=
d-target=3D"#clipText-70"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http=
://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-distinct"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-distinct">distinct</a></h4>
<p>When validating arrays, the field under validation must not have any dup=
licate values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-71"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">foo.*.id</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">distinct</span><span style=3D"color: #D9F5DD;">'</span></div>=
</code></pre><button id=3D"clipButton-71" class=3D"md:block hidden copyBtn"=
 aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboar=
d-target=3D"#clipText-71"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http=
://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p>Distinct uses loose variable comparisons by default. To use strict compa=
risons, you may add the <code>strict</code> parameter to your validation ru=
le definition:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-72"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">foo.*.id</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">distinct:strict</span><span style=3D"color: #D9F5DD;">'</span=
></div></code></pre><button id=3D"clipButton-72" class=3D"md:block hidden c=
opyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-c=
lipboard-target=3D"#clipText-72"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may add <code>ignore_case</code> to the validation rule's arguments =
to make the rule ignore capitalization differences:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-73"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">foo.*.id</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">distinct:ignore_case</span><span style=3D"color: #D9F5DD;">'<=
/span></div></code></pre><button id=3D"clipButton-73" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-73"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-doesnt-start-with"><a href=3D"https://laravel.com/docs/10.x/=
validation#rule-doesnt-start-with">doesnt_start_with:<em>foo</em>,<em>bar</=
em>,...</a></h4>
<p>The field under validation must not start with one of the given values.<=
/p>
<p></p>
<h4 id=3D"rule-doesnt-end-with"><a href=3D"https://laravel.com/docs/10.x/va=
lidation#rule-doesnt-end-with">doesnt_end_with:<em>foo</em>,<em>bar</em>,..=
.</a></h4>
<p>The field under validation must not end with one of the given values.</p=
>
<p></p>
<h4 id=3D"rule-email"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-email">email</a></h4>
<p>The field under validation must be formatted as an email address. This v=
alidation rule utilizes the <a href=3D"https://github.com/egulias/EmailVali=
dator"><code>egulias/email-validator</code></a> package for validating the =
email address. By default, the <code>RFCValidation</code> validator is appl=
ied, but you can apply other validation styles as well:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-74"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">email:rfc,dns</span><span style=3D"color: #D9F5DD;">'</span></di=
v></code></pre><button id=3D"clipButton-74" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-74"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p>The example above will apply the <code>RFCValidation</code> and <code>DN=
SCheckValidation</code> validations. Here's a full list of validation style=
s you can apply:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>
<code>rfc</code>: <code>RFCValidation</code>
</li>
<li>
<code>strict</code>: <code>NoRFCWarningsValidation</code>
</li>
<li>
<code>dns</code>: <code>DNSCheckValidation</code>
</li>
<li>
<code>spoof</code>: <code>SpoofCheckValidation</code>
</li>
<li>
<code>filter</code>: <code>FilterEmailValidation</code>
</li>
<li>
<code>filter_unicode</code>: <code>FilterEmailValidation::unicode()</code>
</li>
</ul>
</div>
<p>The <code>filter</code> validator, which uses PHP's <code>filter_var</co=
de> function, ships with Laravel and was Laravel's default email validation=
 behavior prior to Laravel version 5.8.</p>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>The <code>dns</code> and <code>spoof</code> validators require the PHP <co=
de>intl</code> extension.</p></div>
</blockquote>
<p></p>
<h4 id=3D"rule-ends-with"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-ends-with">ends_with:<em>foo</em>,<em>bar</em>,...</a></h4>
<p>The field under validation must end with one of the given values.</p>
<p></p>
<h4 id=3D"rule-enum"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-enum">enum</a></h4>
<p>The <code>Enum</code> rule is a class based rule that validates whether =
the field under validation contains a valid enum value. The <code>Enum</cod=
e> rule accepts the name of the enum as its only constructor argument:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-75"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> App\Enums\<=
/span><span style=3D"color: #FFCB8B;">ServerStatus</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color: #C792=
EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Validation\Rules=
\</span><span style=3D"color: #FFCB8B;">Enum</span><span style=3D"color: #B=
FC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><=
span style=3D"color: #BEC5D4;">$request</span><span style=3D"color: #89DDFF=
;">-&gt;</span><span style=3D"color: #82AAFF;">validate</span><span style=
=3D"color: #BFC7D5;">([</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">status</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&=
gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #8=
9DDFF;">new</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"co=
lor: #FFCB8B;">Enum</span><span style=3D"color: #BFC7D5;">(</span><span sty=
le=3D"color: #FFCB8B;">ServerStatus</span><span style=3D"color: #89DDFF;">:=
:</span><span style=3D"color: #C792EA;">class</span><span style=3D"color: #=
BFC7D5;">)],</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;=
">]);</span></div></code></pre><button id=3D"clipButton-75" class=3D"md:blo=
ck hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipbo=
ard" data-clipboard-target=3D"#clipText-75"><svg class=3D"fill-current h-5 =
w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cur=
rentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pat=
h><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 =
3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-exclude"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-exclude">exclude</a></h4>
<p>The field under validation will be excluded from the request data return=
ed by the <code>validate</code> and <code>validated</code> methods.</p>
<p></p>
<h4 id=3D"rule-exclude-if"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-exclude-if">exclude_if:<em>anotherfield</em>,<em>value</em></a></h=
4>
<p>The field under validation will be excluded from the request data return=
ed by the <code>validate</code> and <code>validated</code> methods if the <=
em>anotherfield</em> field is equal to <em>value</em>.</p>
<p>If complex conditional exclusion logic is required, you may utilize the =
<code>Rule::excludeIf</code> method. This method accepts a boolean or a clo=
sure. When given a closure, the closure should return <code>true</code> or =
<code>false</code> to indicate if the field under validation should be excl=
uded:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-76"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$request</s=
pan><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AA=
FF;">all</span><span style=3D"color: #BFC7D5;">(), [</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">role_id</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">excludeIf</span><span style=
=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$request</span=
><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;=
">user</span><span style=3D"color: #BFC7D5;">()</span><span style=3D"color:=
 #89DDFF;">-&gt;is_admin</span><span style=3D"color: #BFC7D5;">),</span></d=
iv><div class=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div><div=
 class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #FFCB=
8B;">Validator</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">make</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #BEC5D4;">$request</span><span style=3D"color: #89DDFF;"=
>-&gt;</span><span style=3D"color: #82AAFF;">all</span><span style=3D"color=
: #BFC7D5;">(), [</span></div><div class=3D"line"><span style=3D"color: #BF=
C7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">role_id</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;=
">Rule</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color:=
 #82AAFF;">excludeIf</span><span style=3D"color: #BFC7D5;">(</span><span st=
yle=3D"color: #C792EA;">fn</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #D9F5DD;">()</span><span style=3D"color: #BFC7D5;"> =3D=
&gt; </span><span style=3D"color: #BEC5D4;">$request</span><span style=3D"c=
olor: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">user</span><spa=
n style=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;i=
s_admin</span><span style=3D"color: #BFC7D5;">),</span></div><div class=3D"=
line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><button =
id=3D"clipButton-76" class=3D"md:block hidden copyBtn" aria-label=3D"Copy t=
o Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText=
-76"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/sv=
g" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h=
2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0=
 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></=
svg></button></div>
<p></p>
<h4 id=3D"rule-exclude-unless"><a href=3D"https://laravel.com/docs/10.x/val=
idation#rule-exclude-unless">exclude_unless:<em>anotherfield</em>,<em>value=
</em></a></h4>
<p>The field under validation will be excluded from the request data return=
ed by the <code>validate</code> and <code>validated</code> methods unless <=
em>anotherfield</em>'s field is equal to <em>value</em>. If <em>value</em> =
is <code>null</code> (<code>exclude_unless:name,null</code>), the field und=
er validation will be excluded unless the comparison field is <code>null</c=
ode> or the comparison field is missing from the request data.</p>
<p></p>
<h4 id=3D"rule-exclude-with"><a href=3D"https://laravel.com/docs/10.x/valid=
ation#rule-exclude-with">exclude_with:<em>anotherfield</em></a></h4>
<p>The field under validation will be excluded from the request data return=
ed by the <code>validate</code> and <code>validated</code> methods if the <=
em>anotherfield</em> field is present.</p>
<p></p>
<h4 id=3D"rule-exclude-without"><a href=3D"https://laravel.com/docs/10.x/va=
lidation#rule-exclude-without">exclude_without:<em>anotherfield</em></a></h=
4>
<p>The field under validation will be excluded from the request data return=
ed by the <code>validate</code> and <code>validated</code> methods if the <=
em>anotherfield</em> field is not present.</p>
<p></p>
<h4 id=3D"rule-exists"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-exists">exists:<em>table</em>,<em>column</em></a></h4>
<p>The field under validation must exist in a given database table.</p>
<p></p>
<h4 id=3D"basic-usage-of-exists-rule"><a href=3D"https://laravel.com/docs/1=
0.x/validation#basic-usage-of-exists-rule">Basic Usage Of Exists Rule</a></=
h4>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-77"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">state</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">exists:states</span><span style=3D"color: #D9F5DD;">'</span></di=
v></code></pre><button id=3D"clipButton-77" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-77"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p>If the <code>column</code> option is not specified, the field name will =
be used. So, in this case, the rule will validate that the <code>states</co=
de> database table contains a record with a <code>state</code> column value=
 matching the request's <code>state</code> attribute value.</p>
<p></p>
<h4 id=3D"specifying-a-custom-column-name"><a href=3D"https://laravel.com/d=
ocs/10.x/validation#specifying-a-custom-column-name">Specifying A Custom Co=
lumn Name</a></h4>
<p>You may explicitly specify the database column name that should be used =
by the validation rule by placing it after the database table name:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-78"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">state</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">exists:states,abbreviation</span><span style=3D"color: #D9F5DD;"=
>'</span></div></code></pre><button id=3D"clipButton-78" class=3D"md:block =
hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard=
" data-clipboard-target=3D"#clipText-78"><svg class=3D"fill-current h-5 w-5=
" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curren=
tColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><=
path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3=
 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Occasionally, you may need to specify a specific database connection to =
be used for the <code>exists</code> query. You can accomplish this by prepe=
nding the connection name to the table name:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-79"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">exists:connection.staff,email</span><span style=3D"color: #D9F5D=
D;">'</span></div></code></pre><button id=3D"clipButton-79" class=3D"md:blo=
ck hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipbo=
ard" data-clipboard-target=3D"#clipText-79"><svg class=3D"fill-current h-5 =
w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cur=
rentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pat=
h><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 =
3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Instead of specifying the table name directly, you may specify the Eloqu=
ent model which should be used to determine the table name:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-80"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">user_id</span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">exists:App\Models\User,id</span><span style=3D"color: #D9F5DD;=
">'</span></div></code></pre><button id=3D"clipButton-80" class=3D"md:block=
 hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboar=
d" data-clipboard-target=3D"#clipText-80"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you would like to customize the query executed by the validation rule=
, you may use the <code>Rule</code> class to fluently define the rule. In t=
his example, we'll also specify the validation rules as an array instead of=
 using the <code>|</code> character to delimit them:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-81"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Database\Query\</span><span style=3D"color: #FFCB8B;">Builder</span><span s=
tyle=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"c=
olor: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Suppo=
rt\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><span sty=
le=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"col=
or: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Validat=
ion\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"color: #89=
DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span style=3D"c=
olor: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$data</span><span s=
tyle=3D"color: #BFC7D5;">, [</span></div><div class=3D"line"><span style=3D=
"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">email</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><div class=3D"=
line"><span style=3D"color: #BFC7D5;">        </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">required</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span s=
tyle=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDFF;">::</spa=
n><span style=3D"color: #82AAFF;">exists</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">staff</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span=
 style=3D"color: #82AAFF;">where</span><span style=3D"color: #BFC7D5;">(</s=
pan><span style=3D"color: #C792EA;">function</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"colo=
r: #FFCB8B;">Builder</span><span style=3D"color: #BFC7D5;"> </span><span st=
yle=3D"color: #BEC5D4;">$query</span><span style=3D"color: #D9F5DD;">)</spa=
n><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">            </span><span style=3D"color: #C792EA;=
">return</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #BEC5D4;">$query</span><span style=3D"color: #89DDFF;">-&gt;</span><span =
style=3D"color: #82AAFF;">where</span><span style=3D"color: #BFC7D5;">(</sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">=
account_id</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">1</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        }),</span></div><div class=3D"line"><span style=3D"col=
or: #BFC7D5;">    ],</span></div><div class=3D"line"><span style=3D"color: =
#BFC7D5;">]);</span></div></code></pre><button id=3D"clipButton-81" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-81"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may explicitly specify the database column name that should be used =
by the <code>exists</code> rule generated by the <code>Rule::exists</code> =
method by providing the column name as the second argument to the <code>exi=
sts</code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-82"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">state</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"col=
or: #89DDFF;">::</span><span style=3D"color: #82AAFF;">exists</span><span s=
tyle=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #C3E88D;">states</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #C3E88D;">abbreviation</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">),</span></di=
v></code></pre><button id=3D"clipButton-82" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-82"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-file"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-file">file</a></h4>
<p>The field under validation must be a successfully uploaded file.</p>
<p></p>
<h4 id=3D"rule-filled"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-filled">filled</a></h4>
<p>The field under validation must not be empty when it is present.</p>
<p></p>
<h4 id=3D"rule-gt"><a href=3D"https://laravel.com/docs/10.x/validation#rule=
-gt">gt:<em>field</em></a></h4>
<p>The field under validation must be greater than the given <em>field</em>=
 or <em>value</em>. The two fields must be of the same type. Strings, numer=
ics, arrays, and files are evaluated using the same conventions as the <a h=
ref=3D"https://laravel.com/docs/10.x/validation#rule-size"><code>size</code=
></a> rule.</p>
<p></p>
<h4 id=3D"rule-gte"><a href=3D"https://laravel.com/docs/10.x/validation#rul=
e-gte">gte:<em>field</em></a></h4>
<p>The field under validation must be greater than or equal to the given <e=
m>field</em> or <em>value</em>. The two fields must be of the same type. St=
rings, numerics, arrays, and files are evaluated using the same conventions=
 as the <a href=3D"https://laravel.com/docs/10.x/validation#rule-size"><cod=
e>size</code></a> rule.</p>
<p></p>
<h4 id=3D"rule-image"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-image">image</a></h4>
<p>The file under validation must be an image (jpg, jpeg, png, bmp, gif, sv=
g, or webp).</p>
<p></p>
<h4 id=3D"rule-in"><a href=3D"https://laravel.com/docs/10.x/validation#rule=
-in">in:<em>foo</em>,<em>bar</em>,...</a></h4>
<p>The field under validation must be included in the given list of values.=
 Since this rule often requires you to <code>implode</code> an array, the <=
code>Rule::in</code> method may be used to fluently construct the rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-83"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$data</span=
><span style=3D"color: #BFC7D5;">, [</span></div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">zones</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #8=
9DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><div c=
lass=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=3D=
"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">required</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</sp=
an></div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span=
><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDFF;"=
>::</span><span style=3D"color: #82AAFF;">in</span><span style=3D"color: #B=
FC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">first-zone</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">second-zone</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]),</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    ],</span></div><div class=3D"=
line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><button =
id=3D"clipButton-83" class=3D"md:block hidden copyBtn" aria-label=3D"Copy t=
o Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText=
-83"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/sv=
g" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h=
2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0=
 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></=
svg></button></div>
<p>When the <code>in</code> rule is combined with the <code>array</code> ru=
le, each value in the input array must be present within the list of values=
 provided to the <code>in</code> rule. In the following example, the <code>=
LAS</code> airport code in the input array is invalid since it is not conta=
ined in the list of airports provided to the <code>in</code> rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-84"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #BEC5D4;">$input</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">airports</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">NYC</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">LAS</spa=
n><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]=
,</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">];</span>=
</div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"co=
lor: #FFCB8B;">Validator</span><span style=3D"color: #89DDFF;">::</span><sp=
an style=3D"color: #82AAFF;">make</span><span style=3D"color: #BFC7D5;">(</=
span><span style=3D"color: #BEC5D4;">$input</span><span style=3D"color: #BF=
C7D5;">, [</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">=
    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">airports</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span>=
<span style=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">        </span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #C3E88D;">required</span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div><div class=3D=
"line"><span style=3D"color: #BFC7D5;">        </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">array</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div>=
<div class=3D"line"><span style=3D"color: #BFC7D5;">    ],</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">airports.*</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"col=
or: #89DDFF;">::</span><span style=3D"color: #82AAFF;">in</span><span style=
=3D"color: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">NYC</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #C3E88D;">LIT</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #BFC7D5;">]),</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><but=
ton id=3D"clipButton-84" class=3D"md:block hidden copyBtn" aria-label=3D"Co=
py to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clip=
Text-84"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/200=
0/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 01=
1-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2=
 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pat=
h></svg></button></div>
<p></p>
<h4 id=3D"rule-in-array"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-in-array">in_array:<em>anotherfield</em>.*</a></h4>
<p>The field under validation must exist in <em>anotherfield</em>'s values.=
</p>
<p></p>
<h4 id=3D"rule-integer"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-integer">integer</a></h4>
<p>The field under validation must be an integer.</p>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>This validation rule does not verify that the input is of the "integer" va=
riable type, only that the input is of a type accepted by PHP's <code>FILTE=
R_VALIDATE_INT</code> rule. If you need to validate the input as being a nu=
mber please use this rule in combination with <a href=3D"https://laravel.co=
m/docs/10.x/validation#rule-numeric">the <code>numeric</code> validation ru=
le</a>.</p></div>
</blockquote>
<p></p>
<h4 id=3D"rule-ip"><a href=3D"https://laravel.com/docs/10.x/validation#rule=
-ip">ip</a></h4>
<p>The field under validation must be an IP address.</p>
<p></p>
<h4 id=3D"ipv4"><a href=3D"https://laravel.com/docs/10.x/validation#ipv4">i=
pv4</a></h4>
<p>The field under validation must be an IPv4 address.</p>
<p></p>
<h4 id=3D"ipv6"><a href=3D"https://laravel.com/docs/10.x/validation#ipv6">i=
pv6</a></h4>
<p>The field under validation must be an IPv6 address.</p>
<p></p>
<h4 id=3D"rule-json"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-json">json</a></h4>
<p>The field under validation must be a valid JSON string.</p>
<p></p>
<h4 id=3D"rule-lt"><a href=3D"https://laravel.com/docs/10.x/validation#rule=
-lt">lt:<em>field</em></a></h4>
<p>The field under validation must be less than the given <em>field</em>. T=
he two fields must be of the same type. Strings, numerics, arrays, and file=
s are evaluated using the same conventions as the <a href=3D"https://larave=
l.com/docs/10.x/validation#rule-size"><code>size</code></a> rule.</p>
<p></p>
<h4 id=3D"rule-lte"><a href=3D"https://laravel.com/docs/10.x/validation#rul=
e-lte">lte:<em>field</em></a></h4>
<p>The field under validation must be less than or equal to the given <em>f=
ield</em>. The two fields must be of the same type. Strings, numerics, arra=
ys, and files are evaluated using the same conventions as the <a href=3D"ht=
tps://laravel.com/docs/10.x/validation#rule-size"><code>size</code></a> rul=
e.</p>
<p></p>
<h4 id=3D"rule-lowercase"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-lowercase">lowercase</a></h4>
<p>The field under validation must be lowercase.</p>
<p></p>
<h4 id=3D"rule-mac"><a href=3D"https://laravel.com/docs/10.x/validation#rul=
e-mac">mac_address</a></h4>
<p>The field under validation must be a MAC address.</p>
<p></p>
<h4 id=3D"rule-max"><a href=3D"https://laravel.com/docs/10.x/validation#rul=
e-max">max:<em>value</em></a></h4>
<p>The field under validation must be less than or equal to a maximum <em>v=
alue</em>. Strings, numerics, arrays, and files are evaluated in the same f=
ashion as the <a href=3D"https://laravel.com/docs/10.x/validation#rule-size=
"><code>size</code></a> rule.</p>
<p></p>
<h4 id=3D"rule-max-digits"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-max-digits">max_digits:<em>value</em></a></h4>
<p>The integer under validation must have a maximum length of <em>value</em=
>.</p>
<p></p>
<h4 id=3D"rule-mimetypes"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-mimetypes">mimetypes:<em>text/plain</em>,...</a></h4>
<p>The file under validation must match one of the given MIME types:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-85"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">video</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">mimetypes:video/avi,video/mpeg,video/quicktime</span><span style=
=3D"color: #D9F5DD;">'</span></div></code></pre><button id=3D"clipButton-85=
" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-85"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p>To determine the MIME type of the uploaded file, the file's contents wil=
l be read and the framework will attempt to guess the MIME type, which may =
be different from the client's provided MIME type.</p>
<p></p>
<h4 id=3D"rule-mimes"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-mimes">mimes:<em>foo</em>,<em>bar</em>,...</a></h4>
<p>The file under validation must have a MIME type corresponding to one of =
the listed extensions.</p>
<p></p>
<h4 id=3D"basic-usage-of-mime-rule"><a href=3D"https://laravel.com/docs/10.=
x/validation#basic-usage-of-mime-rule">Basic Usage Of MIME Rule</a></h4>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-86"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">photo</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">mimes:jpg,bmp,png</span><span style=3D"color: #D9F5DD;">'</span>=
</div></code></pre><button id=3D"clipButton-86" class=3D"md:block hidden co=
pyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cl=
ipboard-target=3D"#clipText-86"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Even though you only need to specify the extensions, this rule actually =
validates the MIME type of the file by reading the file's contents and gues=
sing its MIME type. A full listing of MIME types and their corresponding ex=
tensions may be found at the following location:</p>
<p><a href=3D"https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/=
mime.types">https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mi=
me.types</a></p>
<p></p>
<h4 id=3D"rule-min"><a href=3D"https://laravel.com/docs/10.x/validation#rul=
e-min">min:<em>value</em></a></h4>
<p>The field under validation must have a minimum <em>value</em>. Strings, =
numerics, arrays, and files are evaluated in the same fashion as the <a hre=
f=3D"https://laravel.com/docs/10.x/validation#rule-size"><code>size</code><=
/a> rule.</p>
<p></p>
<h4 id=3D"rule-min-digits"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-min-digits">min_digits:<em>value</em></a></h4>
<p>The integer under validation must have a minimum length of <em>value</em=
>.</p>
<p></p>
<h4 id=3D"rule-multiple-of"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-multiple-of">multiple_of:<em>value</em></a></h4>
<p>The field under validation must be a multiple of <em>value</em>.</p>
<p></p>
<h4 id=3D"rule-missing"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-missing">missing</a></h4>
<p>The field under validation must not be present in the input data.</p>
<p></p>
<h4 id=3D"rule-missing-if"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-missing-if">missing_if:<em>anotherfield</em>,<em>value</em>,...</a=
></h4>
<p>The field under validation must not be present if the <em>anotherfield</=
em> field is equal to any <em>value</em>.</p>
<p></p>
<h4 id=3D"rule-missing-unless"><a href=3D"https://laravel.com/docs/10.x/val=
idation#rule-missing-unless">missing_unless:<em>anotherfield</em>,<em>value=
</em></a></h4>
<p>The field under validation must not be present unless the <em>anotherfie=
ld</em> field is equal to any <em>value</em>.</p>
<p></p>
<h4 id=3D"rule-missing-with"><a href=3D"https://laravel.com/docs/10.x/valid=
ation#rule-missing-with">missing_with:<em>foo</em>,<em>bar</em>,...</a></h4=
>
<p>The field under validation must not be present <em>only if</em> any of t=
he other specified fields are present.</p>
<p></p>
<h4 id=3D"rule-missing-with-all"><a href=3D"https://laravel.com/docs/10.x/v=
alidation#rule-missing-with-all">missing_with_all:<em>foo</em>,<em>bar</em>=
,...</a></h4>
<p>The field under validation must not be present <em>only if</em> all of t=
he other specified fields are present.</p>
<p></p>
<h4 id=3D"rule-not-in"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-not-in">not_in:<em>foo</em>,<em>bar</em>,...</a></h4>
<p>The field under validation must not be included in the given list of val=
ues. The <code>Rule::notIn</code> method may be used to fluently construct =
the rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-87"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$data</span=
><span style=3D"color: #BFC7D5;">, [</span></div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">toppings</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><di=
v class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">required</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </s=
pan><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDF=
F;">::</span><span style=3D"color: #82AAFF;">notIn</span><span style=3D"col=
or: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">sprinkles</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #C3E88D;">cherries</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]),</span></div><div cl=
ass=3D"line"><span style=3D"color: #BFC7D5;">    ],</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><but=
ton id=3D"clipButton-87" class=3D"md:block hidden copyBtn" aria-label=3D"Co=
py to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clip=
Text-87"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/200=
0/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 01=
1-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2=
 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pat=
h></svg></button></div>
<p></p>
<h4 id=3D"rule-not-regex"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-not-regex">not_regex:<em>pattern</em></a></h4>
<p>The field under validation must not match the given regular expression.<=
/p>
<p>Internally, this rule uses the PHP <code>preg_match</code> function. The=
 pattern specified should obey the same formatting required by <code>preg_m=
atch</code> and thus also include valid delimiters. For example: <code>'ema=
il' =3D&gt; 'not_regex:/^.+$/i'</code>.</p>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>When using the <code>regex</code> / <code>not_regex</code> patterns, it ma=
y be necessary to specify your validation rules using an array instead of u=
sing <code>|</code> delimiters, especially if the regular expression contai=
ns a <code>|</code> character.</p></div>
</blockquote>
<p></p>
<h4 id=3D"rule-nullable"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-nullable">nullable</a></h4>
<p>The field under validation may be <code>null</code>.</p>
<p></p>
<h4 id=3D"rule-numeric"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-numeric">numeric</a></h4>
<p>The field under validation must be <a href=3D"https://www.php.net/manual=
/en/function.is-numeric.php">numeric</a>.</p>
<p></p>
<h4 id=3D"rule-password"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-password">password</a></h4>
<p>The field under validation must match the authenticated user's password.=
</p>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>This rule was renamed to <code>current_password</code> with the intention =
of removing it in Laravel 9. Please use the <a href=3D"https://laravel.com/=
docs/10.x/validation#rule-current-password">Current Password</a> rule inste=
ad.</p></div>
</blockquote>
<p></p>
<h4 id=3D"rule-present"><a href=3D"https://laravel.com/docs/10.x/validation=
#rule-present">present</a></h4>
<p>The field under validation must exist in the input data.</p>
<p></p>
<h4 id=3D"rule-prohibited"><a href=3D"https://laravel.com/docs/10.x/validat=
ion#rule-prohibited">prohibited</a></h4>
<p>The field under validation must be missing or empty. A field is "empty" =
if it meets one of the following criteria:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>The value is <code>null</code>.</li>
<li>The value is an empty string.</li>
<li>The value is an empty array or empty <code>Countable</code> object.</li=
>
<li>The value is an uploaded file with an empty path.</li>
</ul>
</div>
<p></p>
<h4 id=3D"rule-prohibited-if"><a href=3D"https://laravel.com/docs/10.x/vali=
dation#rule-prohibited-if">prohibited_if:<em>anotherfield</em>,<em>value</e=
m>,...</a></h4>
<p>The field under validation must be missing or empty if the <em>anotherfi=
eld</em> field is equal to any <em>value</em>. A field is "empty" if it mee=
ts one of the following criteria:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>The value is <code>null</code>.</li>
<li>The value is an empty string.</li>
<li>The value is an empty array or empty <code>Countable</code> object.</li=
>
<li>The value is an uploaded file with an empty path.</li>
</ul>
</div>
<p>If complex conditional prohibition logic is required, you may utilize th=
e <code>Rule::prohibitedIf</code> method. This method accepts a boolean or =
a closure. When given a closure, the closure should return <code>true</code=
> or <code>false</code> to indicate if the field under validation should be=
 prohibited:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-88"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$request</s=
pan><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AA=
FF;">all</span><span style=3D"color: #BFC7D5;">(), [</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">role_id</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">prohibitedIf</span><span styl=
e=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$request</spa=
n><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF=
;">user</span><span style=3D"color: #BFC7D5;">()</span><span style=3D"color=
: #89DDFF;">-&gt;is_admin</span><span style=3D"color: #BFC7D5;">),</span></=
div><div class=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div><di=
v class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #FFC=
B8B;">Validator</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">make</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #BEC5D4;">$request</span><span style=3D"color: #89DDFF;"=
>-&gt;</span><span style=3D"color: #82AAFF;">all</span><span style=3D"color=
: #BFC7D5;">(), [</span></div><div class=3D"line"><span style=3D"color: #BF=
C7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">role_id</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;=
">Rule</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color:=
 #82AAFF;">prohibitedIf</span><span style=3D"color: #BFC7D5;">(</span><span=
 style=3D"color: #C792EA;">fn</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #D9F5DD;">()</span><span style=3D"color: #BFC7D5;"> =
=3D&gt; </span><span style=3D"color: #BEC5D4;">$request</span><span style=
=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">user</span=
><span style=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-=
&gt;is_admin</span><span style=3D"color: #BFC7D5;">),</span></div><div clas=
s=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><bu=
tton id=3D"clipButton-88" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-88"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/20=
00/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 0=
11-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a=
2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pa=
th></svg></button></div>
<p></p>
<h4 id=3D"rule-prohibited-unless"><a href=3D"https://laravel.com/docs/10.x/=
validation#rule-prohibited-unless">prohibited_unless:<em>anotherfield</em>,=
<em>value</em>,...</a></h4>
<p>The field under validation must be missing or empty unless the <em>anoth=
erfield</em> field is equal to any <em>value</em>. A field is "empty" if it=
 meets one of the following criteria:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>The value is <code>null</code>.</li>
<li>The value is an empty string.</li>
<li>The value is an empty array or empty <code>Countable</code> object.</li=
>
<li>The value is an uploaded file with an empty path.</li>
</ul>
</div>
<p></p>
<h4 id=3D"rule-prohibits"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-prohibits">prohibits:<em>anotherfield</em>,...</a></h4>
<p>If the field under validation is not missing or empty, all fields in <em=
>anotherfield</em> must be missing or empty. A field is "empty" if it meets=
 one of the following criteria:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>The value is <code>null</code>.</li>
<li>The value is an empty string.</li>
<li>The value is an empty array or empty <code>Countable</code> object.</li=
>
<li>The value is an uploaded file with an empty path.</li>
</ul>
</div>
<p></p>
<h4 id=3D"rule-regex"><a href=3D"https://laravel.com/docs/10.x/validation#r=
ule-regex">regex:<em>pattern</em></a></h4>
<p>The field under validation must match the given regular expression.</p>
<p>Internally, this rule uses the PHP <code>preg_match</code> function. The=
 pattern specified should obey the same formatting required by <code>preg_m=
atch</code> and thus also include valid delimiters. For example: <code>'ema=
il' =3D&gt; 'regex:/^.+@.+$/i'</code>.</p>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>When using the <code>regex</code> / <code>not_regex</code> patterns, it ma=
y be necessary to specify rules in an array instead of using <code>|</code>=
 delimiters, especially if the regular expression contains a <code>|</code>=
 character.</p></div>
</blockquote>
<p></p>
<h4 id=3D"rule-required"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-required">required</a></h4>
<p>The field under validation must be present in the input data and not emp=
ty. A field is "empty" if it meets one of the following criteria:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>The value is <code>null</code>.</li>
<li>The value is an empty string.</li>
<li>The value is an empty array or empty <code>Countable</code> object.</li=
>
<li>The value is an uploaded file with no path.</li>
</ul>
</div>
<p></p>
<h4 id=3D"rule-required-if"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-required-if">required_if:<em>anotherfield</em>,<em>value</em>,...=
</a></h4>
<p>The field under validation must be present and not empty if the <em>anot=
herfield</em> field is equal to any <em>value</em>.</p>
<p>If you would like to construct a more complex condition for the <code>re=
quired_if</code> rule, you may use the <code>Rule::requiredIf</code> method=
. This method accepts a boolean or a closure. When passed a closure, the cl=
osure should return <code>true</code> or <code>false</code> to indicate if =
the field under validation is required:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-89"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$request</s=
pan><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AA=
FF;">all</span><span style=3D"color: #BFC7D5;">(), [</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">role_id</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">requiredIf</span><span style=
=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$request</span=
><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;=
">user</span><span style=3D"color: #BFC7D5;">()</span><span style=3D"color:=
 #89DDFF;">-&gt;is_admin</span><span style=3D"color: #BFC7D5;">),</span></d=
iv><div class=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div><div=
 class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #FFCB=
8B;">Validator</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">make</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #BEC5D4;">$request</span><span style=3D"color: #89DDFF;"=
>-&gt;</span><span style=3D"color: #82AAFF;">all</span><span style=3D"color=
: #BFC7D5;">(), [</span></div><div class=3D"line"><span style=3D"color: #BF=
C7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">role_id</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;=
">Rule</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color:=
 #82AAFF;">requiredIf</span><span style=3D"color: #BFC7D5;">(</span><span s=
tyle=3D"color: #C792EA;">fn</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #D9F5DD;">()</span><span style=3D"color: #BFC7D5;"> =
=3D&gt; </span><span style=3D"color: #BEC5D4;">$request</span><span style=
=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">user</span=
><span style=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-=
&gt;is_admin</span><span style=3D"color: #BFC7D5;">),</span></div><div clas=
s=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><bu=
tton id=3D"clipButton-89" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-89"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/20=
00/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 0=
11-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a=
2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pa=
th></svg></button></div>
<p></p>
<h4 id=3D"rule-required-if-accepted"><a href=3D"https://laravel.com/docs/10=
.x/validation#rule-required-if-accepted">required_if_accepted:_anotherfield=
,...</a></h4>
<p>The field under validation must be present and not empty if the <em>anot=
herfield</em> field is equal to <code>yes</code>, <code>on</code>, <code>1<=
/code>, <code>"1"</code>, <code>true</code>, or <code>"true"</code>.</p>
<p></p>
<h4 id=3D"rule-required-unless"><a href=3D"https://laravel.com/docs/10.x/va=
lidation#rule-required-unless">required_unless:<em>anotherfield</em>,<em>va=
lue</em>,...</a></h4>
<p>The field under validation must be present and not empty unless the <em>=
anotherfield</em> field is equal to any <em>value</em>. This also means <em=
>anotherfield</em> must be present in the request data unless <em>value</em=
> is <code>null</code>. If <em>value</em> is <code>null</code> (<code>requi=
red_unless:name,null</code>), the field under validation will be required u=
nless the comparison field is <code>null</code> or the comparison field is =
missing from the request data.</p>
<p></p>
<h4 id=3D"rule-required-with"><a href=3D"https://laravel.com/docs/10.x/vali=
dation#rule-required-with">required_with:<em>foo</em>,<em>bar</em>,...</a><=
/h4>
<p>The field under validation must be present and not empty <em>only if</em=
> any of the other specified fields are present and not empty.</p>
<p></p>
<h4 id=3D"rule-required-with-all"><a href=3D"https://laravel.com/docs/10.x/=
validation#rule-required-with-all">required_with_all:<em>foo</em>,<em>bar</=
em>,...</a></h4>
<p>The field under validation must be present and not empty <em>only if</em=
> all of the other specified fields are present and not empty.</p>
<p></p>
<h4 id=3D"rule-required-without"><a href=3D"https://laravel.com/docs/10.x/v=
alidation#rule-required-without">required_without:<em>foo</em>,<em>bar</em>=
,...</a></h4>
<p>The field under validation must be present and not empty <em>only when</=
em> any of the other specified fields are empty or not present.</p>
<p></p>
<h4 id=3D"rule-required-without-all"><a href=3D"https://laravel.com/docs/10=
.x/validation#rule-required-without-all">required_without_all:<em>foo</em>,=
<em>bar</em>,...</a></h4>
<p>The field under validation must be present and not empty <em>only when</=
em> all of the other specified fields are empty or not present.</p>
<p></p>
<h4 id=3D"rule-required-array-keys"><a href=3D"https://laravel.com/docs/10.=
x/validation#rule-required-array-keys">required_array_keys:<em>foo</em>,<em=
>bar</em>,...</a></h4>
<p>The field under validation must be an array and must contain at least th=
e specified keys.</p>
<p></p>
<h4 id=3D"rule-same"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-same">same:<em>field</em></a></h4>
<p>The given <em>field</em> must match the field under validation.</p>
<p></p>
<h4 id=3D"rule-size"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-size">size:<em>value</em></a></h4>
<p>The field under validation must have a size matching the given <em>value=
</em>. For string data, <em>value</em> corresponds to the number of charact=
ers. For numeric data, <em>value</em> corresponds to a given integer value =
(the attribute must also have the <code>numeric</code> or <code>integer</co=
de> rule). For an array, <em>size</em> corresponds to the <code>count</code=
> of the array. For files, <em>size</em> corresponds to the file size in ki=
lobytes. Let's look at some examples:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-90"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> Validate tha=
t a string is exactly 12 characters long...</span></div><div class=3D"line"=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">ti=
tle</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D=
"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">size:12</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;<=
/div><div class=3D"line"><span style=3D"color: #697098;">//</span><span sty=
le=3D"color: #697098;"> Validate that a provided integer equals 10...</span=
></div><div class=3D"line"><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #C3E88D;">seats</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">integer|size:10</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">;</sp=
an></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D=
"color: #697098;">//</span><span style=3D"color: #697098;"> Validate that a=
n array has exactly 5 elements...</span></div><div class=3D"line"><span sty=
le=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">tags</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">array|size:5</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><=
div class=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"=
color: #697098;"> Validate that an uploaded file is exactly 512 kilobytes..=
.</span></div><div class=3D"line"><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #C3E88D;">image</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">file|size:512</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">;<=
/span></div></code></pre><button id=3D"clipButton-90" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-90"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-starts-with"><a href=3D"https://laravel.com/docs/10.x/valida=
tion#rule-starts-with">starts_with:<em>foo</em>,<em>bar</em>,...</a></h4>
<p>The field under validation must start with one of the given values.</p>
<p></p>
<h4 id=3D"rule-string"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-string">string</a></h4>
<p>The field under validation must be a string. If you would like to allow =
the field to also be <code>null</code>, you should assign the <code>nullabl=
e</code> rule to the field.</p>
<p></p>
<h4 id=3D"rule-timezone"><a href=3D"https://laravel.com/docs/10.x/validatio=
n#rule-timezone">timezone</a></h4>
<p>The field under validation must be a valid timezone identifier according=
 to the <code>DateTimeZone::listIdentifiers</code> method.</p>
<p>The arguments <a href=3D"https://www.php.net/manual/en/datetimezone.list=
identifiers.php">accepted by the <code>DateTimeZone::listIdentifiers</code>=
 method</a> may also be provided to this validation rule:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-91"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">timezone</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">required|timezone:all</span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&n=
bsp;</div><div class=3D"line"><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">timezone</span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDF=
F;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">required|timezone:Af=
rica</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #B=
FC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">time=
zone</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">required|timezone:per_country,US</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">;</span></div=
></code></pre><button id=3D"clipButton-91" class=3D"md:block hidden copyBtn=
" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboa=
rd-target=3D"#clipText-91"><svg class=3D"fill-current h-5 w-5" xmlns=3D"htt=
p://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path =
d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3=
a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 =
3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-unique"><a href=3D"https://laravel.com/docs/10.x/validation#=
rule-unique">unique:<em>table</em>,<em>column</em></a></h4>
<p>The field under validation must not exist within the given database tabl=
e.</p>
<p><strong>Specifying A Custom Table / Column Name:</strong></p>
<p>Instead of specifying the table name directly, you may specify the Eloqu=
ent model which should be used to determine the table name:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-92"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">unique:App\Models\User,email_address</span><span style=3D"color:=
 #D9F5DD;">'</span></div></code></pre><button id=3D"clipButton-92" class=3D=
"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to=
 Clipboard" data-clipboard-target=3D"#clipText-92"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>column</code> option may be used to specify the field's corres=
ponding database column. If the <code>column</code> option is not specified=
, the name of the field under validation will be used.</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-93"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">unique:users,email_address</span><span style=3D"color: #D9F5DD;"=
>'</span></div></code></pre><button id=3D"clipButton-93" class=3D"md:block =
hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard=
" data-clipboard-target=3D"#clipText-93"><svg class=3D"fill-current h-5 w-5=
" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curren=
tColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><=
path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3=
 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p><strong>Specifying A Custom Database Connection</strong></p>
<p>Occasionally, you may need to set a custom connection for database queri=
es made by the Validator. To accomplish this, you may prepend the connectio=
n name to the table name:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-94"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">unique:connection.users,email_address</span><span style=3D"color=
: #D9F5DD;">'</span></div></code></pre><button id=3D"clipButton-94" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-94"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p><strong>Forcing A Unique Rule To Ignore A Given ID:</strong></p>
<p>Sometimes, you may wish to ignore a given ID during unique validation. F=
or example, consider an "update profile" screen that includes the user's na=
me, email address, and location. You will probably want to verify that the =
email address is unique. However, if the user only changes the name field a=
nd not the email field, you do not want a validation error to be thrown bec=
ause the user is already the owner of the email address in question.</p>
<p>To instruct the validator to ignore the user's ID, we'll use the <code>R=
ule</code> class to fluently define the rule. In this example, we'll also s=
pecify the validation rules as an array instead of using the <code>|</code>=
 character to delimit the rules:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-95"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Validator</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Validation\</span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Validator</span><span style=3D"co=
lor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">make</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$data</span=
><span style=3D"color: #BFC7D5;">, [</span></div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">email</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #8=
9DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><div c=
lass=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=3D=
"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">required</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</sp=
an></div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span=
><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDFF;"=
>::</span><span style=3D"color: #82AAFF;">unique</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">ignore</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #BEC5D4;">$user</span><span style=3D"col=
or: #89DDFF;">-&gt;id</span><span style=3D"color: #BFC7D5;">),</span></div>=
<div class=3D"line"><span style=3D"color: #BFC7D5;">    ],</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pr=
e><button id=3D"clipButton-95" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-95"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.o=
rg/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 =
1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 =
2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"=
></path></svg></button></div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>You should never pass any user controlled request input into the <code>ign=
ore</code> method. Instead, you should only pass a system generated unique =
ID such as an auto-incrementing ID or UUID from an Eloquent model instance.=
 Otherwise, your application will be vulnerable to an SQL injection attack.=
</p></div>
</blockquote>
<p>Instead of passing the model key's value to the <code>ignore</code> meth=
od, you may also pass the entire model instance. Laravel will automatically=
 extract the key from the model:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-96"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDFF;">::</span><s=
pan style=3D"color: #82AAFF;">unique</span><span style=3D"color: #BFC7D5;">=
(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span sty=
le=3D"color: #82AAFF;">ignore</span><span style=3D"color: #BFC7D5;">(</span=
><span style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;=
">)</span></div></code></pre><button id=3D"clipButton-96" class=3D"md:block=
 hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboar=
d" data-clipboard-target=3D"#clipText-96"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If your table uses a primary key column name other than <code>id</code>,=
 you may specify the name of the column when calling the <code>ignore</code=
> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-97"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDFF;">::</span><s=
pan style=3D"color: #82AAFF;">unique</span><span style=3D"color: #BFC7D5;">=
(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span sty=
le=3D"color: #82AAFF;">ignore</span><span style=3D"color: #BFC7D5;">(</span=
><span style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #89DDFF;=
">-&gt;id</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">user_id</span><span s=
tyle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">)</span></=
div></code></pre><button id=3D"clipButton-97" class=3D"md:block hidden copy=
Btn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clip=
board-target=3D"#clipText-97"><svg class=3D"fill-current h-5 w-5" xmlns=3D"=
http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><pa=
th d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M=
6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9=
a3 3 0 01-3-3z"></path></svg></button></div>
<p>By default, the <code>unique</code> rule will check the uniqueness of th=
e column matching the name of the attribute being validated. However, you m=
ay pass a different column name as the second argument to the <code>unique<=
/code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-98"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Rule</span><span style=3D"color: #89DDFF;">::</span><s=
pan style=3D"color: #82AAFF;">unique</span><span style=3D"color: #BFC7D5;">=
(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">email_address</span><span style=3D"color: #D9F5DD;">'<=
/span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF=
;">-&gt;</span><span style=3D"color: #82AAFF;">ignore</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$user</span><span =
style=3D"color: #89DDFF;">-&gt;id</span><span style=3D"color: #BFC7D5;">)</=
span></div></code></pre><button id=3D"clipButton-98" class=3D"md:block hidd=
en copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" da=
ta-clipboard-target=3D"#clipText-98"><svg class=3D"fill-current h-5 w-5" xm=
lns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCol=
or"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path=
 d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 0=
1-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p><strong>Adding Additional Where Clauses:</strong></p>
<p>You may specify additional query conditions by customizing the query usi=
ng the <code>where</code> method. For example, let's add a query condition =
that scopes the query to only search records that have an <code>account_id<=
/code> column value of <code>1</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-99"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #FFCB8B;">Rule</span><span style=3D"col=
or: #89DDFF;">::</span><span style=3D"color: #82AAFF;">unique</span><span s=
tyle=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #C3E88D;">users</span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDF=
F;">-&gt;</span><span style=3D"color: #82AAFF;">where</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #C792EA;">fn</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><spa=
n style=3D"color: #FFCB8B;">Builder</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #BEC5D4;">$query</span><span style=3D"color: #=
D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> =3D&gt; </span><span styl=
e=3D"color: #BEC5D4;">$query</span><span style=3D"color: #89DDFF;">-&gt;</s=
pan><span style=3D"color: #82AAFF;">where</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">account_id</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">1</span><s=
pan style=3D"color: #BFC7D5;">))</span></div></code></pre><button id=3D"cli=
pButton-99" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboa=
rd" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-99"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<p></p>
<h4 id=3D"rule-uppercase"><a href=3D"https://laravel.com/docs/10.x/validati=
on#rule-uppercase">uppercase</a></h4>
<p>The field under validation must be uppercase.</p>
<p></p>
<h4 id=3D"rule-url"><a href=3D"https://laravel.com/docs/10.x/validation#rul=
e-url">url</a></h4>
<p>The field under validation must be a valid URL.</p>
<p>If you would like to specify the URL protocols that should be considered=
 valid, you may pass the protocols as validation rule parameters:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-100"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">url</span><spa=
n style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">url:http,https</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">,</span></div><div class=3D"line">&nbsp;</div><d=
iv class=3D"line"><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">game</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">url:minecraft,steam</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div=
></code></pre><button id=3D"clipButton-100" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-100"><svg class=3D"fill-current h-5 w-5" xmlns=3D"h=
ttp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><pat=
h d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6=
 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a=
3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"rule-ulid"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-ulid">ulid</a></h4>
<p>The field under validation must be a valid <a href=3D"https://github.com=
/ulid/spec">Universally Unique Lexicographically Sortable Identifier</a> (U=
LID).</p>
<p></p>
<h4 id=3D"rule-uuid"><a href=3D"https://laravel.com/docs/10.x/validation#ru=
le-uuid">uuid</a></h4>
<p>The field under validation must be a valid RFC 4122 (version 1, 3, 4, or=
 5) universally unique identifier (UUID).</p>
























































































































                               =20
</div>
                        </section>
                    </section>
                </div>
            </section>
        </div>
    </div>











</body></html>
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-a0db748f-98e3-4566-a61f-0fa1bb8cb88d@mhtml.blink

@charset "utf-8";

.collection-method-list > p { columns: 10.8em 3; }

.collection-method-list a { display: block; overflow: hidden; text-overflow=
: ellipsis; white-space: nowrap; }
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://use.typekit.net/ins2wgm.css

@charset "utf-8";

@import url("https://p.typekit.net/p.css?s=3D1&k=3Dins2wgm&ht=3Dtk&f=3D1745=
4.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3D3993700&app=3Dt=
ypekit&e=3Dcss");

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/398a64/00000000000000007735dc06/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/398a64/00000000000000007735dc06/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/398a64/0000000000=
0000007735dc06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto;=
 font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/b0fedd/00000000000000007735dc01/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/b0fedd/00000000000000007735dc01/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/b0fedd/0000000000=
0000007735dc01/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto;=
 font-style: italic; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/9c393a/00000000000000007735db08/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/9c393a/00000000000000007735db08/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n7&v=3D3") format("woff"), url("https://use.typekit.net/af/9c393a/000000000=
00000007735db08/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/47cb70/00000000000000007735db06/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/47cb70/00000000000000007735db06/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n5&v=3D3") format("woff"), url("https://use.typekit.net/af/47cb70/000000000=
00000007735db06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/3cdb9c/00000000000000007735db09/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/3cdb9c/00000000000000007735db09/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n4&v=3D3") format("woff"), url("https://use.typekit.net/af/3cdb9c/000000000=
00000007735db09/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/716155/00000000000000007735dd24/30/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/716155/00000000000000007735dd24/30/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=
=3D3") format("woff"), url("https://use.typekit.net/af/716155/0000000000000=
0007735dd24/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/7e0390/0000000000000000000158e4/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/7e0390/0000000000000000000158e4/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/7e0390/0000000000000=
000000158e4/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/4cf72c/0000000000000000000158e6/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/4cf72c/0000000000000000000158e6/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/4cf72c/0000000000000=
000000158e6/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/e3f590/0000000000000000000158e7/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/e3f590/0000000000000000000158e7/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/e3f590/0000000000000=
000000158e7/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/396f3b/0000000000000000000158e8/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/396f3b/0000000000000000000158e8/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/396f3b/0000000000000=
000000158e8/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 400; font-stretch: normal; }

.tk-source-code-pro { font-family: source-code-pro, monospace; }

.tk-scandia-line-web { font-family: scandia-line-web, sans-serif; }

.tk-scandia-web { font-family: scandia-web, sans-serif; }
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://p.typekit.net/p.css?s=1&k=ins2wgm&ht=tk&f=17454.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3993700&app=typekit&e=css

@charset "utf-8";
=0A
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/build/assets/app-8aa4d27a.css

@charset "utf-8";

*, ::before, ::after { box-sizing: border-box; border-width: 0px; border-st=
yle: solid; border-color: rgb(231, 232, 242); }

::before, ::after { --tw-content: ""; }

html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-family: =
scandia-web, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-feature-settings: normal; font-variation-settings: normal; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, samp, pre { font-family: source-code-pro, ui-monospace, SFMono-R=
egular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospac=
e; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; font-weight: inherit; line-height: inherit; color: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

button, [type=3D"button"], [type=3D"reset"], [type=3D"submit"] { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; padding: 0px; }

legend { padding: 0px; }

ol, ul, menu { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(181, 181=
, 189); }

button, [role=3D"button"] { cursor: pointer; }

:disabled { cursor: default; }

img, svg, video, canvas, audio, iframe, embed, object { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

[hidden] { display: none; }

*, ::before, ::after { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: =
; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-=
numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ri=
ng-offset-color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-off=
set-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000;=
 --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contr=
ast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ;=
 --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brig=
htness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdro=
p-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backd=
rop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: ; --tw-sla=
shed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fr=
action: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-=
color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-offset-shadow=
: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000; --tw-shad=
ow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --t=
w-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepi=
a: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; =
--tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rota=
te: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-satura=
te: ; --tw-backdrop-sepia: ; }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.docs_main h1, .docs_main h2, .docs_main h3, .docs_main h4, .docs_main h5, =
.docs_main h6 { font-weight: 500; margin-bottom: 0.75em; }

.docs_main h2, .docs_main h3 { margin-top: 2em; }

.docs_main h4 { margin-top: 1.5em; }

.docs_main h1 { font-size: 2em; letter-spacing: -1px; line-height: 1.125em;=
 margin-bottom: 0.65em; }

@media (min-width: 768px) {
  .docs_main h1 { font-size: 2.5em; }
}

@media (min-width: 1024px) {
  .docs_main h1 { font-size: 3em; }
}

@media (min-width: 1280px) {
  .docs_main h1 { font-size: 3.5em; }
}

@media (min-width: 1536px) {
  .docs_main h1 { font-size: 4em; }
}

.docs_main h2 { font-size: 1.75em; font-weight: 400; letter-spacing: -0.5px=
; line-height: 1.125em; }

@media (min-width: 768px) {
  .docs_main h2 { font-size: 2.25em; }
}

@media (min-width: 1024px) {
  .docs_main h2 { font-size: 3em; }
}

.docs_main h3 { font-size: 1.25em; font-weight: 500; line-height: 1.25em; l=
etter-spacing: -0.33px; }

@media (min-width: 640px) {
  .docs_main h3 { font-size: 1.75em; }
}

@media (min-width: 768px) {
  .docs_main h3 { font-size: 2em; }
}

.docs_main h4 { font-size: 1em; font-weight: 400; letter-spacing: -0.25px; =
}

@media (min-width: 640px) {
  .docs_main h4 { font-size: 1.5em; }
}

.docs_main h5 { font-size: 0.95em; font-weight: 700; line-height: 1.666em; =
color: rgb(86, 84, 84); }

@media (min-width: 640px) {
  .docs_main h5 { font-size: 1.125em; }
}

.docs_main h6 { font-size: 0.875em; font-weight: 500; color: rgb(119, 119, =
119); }

.docs_main a { position: relative; text-decoration: none; transition: all 0=
.3s ease 0s; }

.docs_main a.learn_more { color: rgb(235, 68, 50); font-weight: 500; }

.docs_main a.learn_more span { display: inline-block; transition: transform=
 0.3s ease 0s; }

.docs_main a.learn_more:hover span { transform: translate(0.5em); }

.docs_main p { font-size: 1em; line-height: 1.666em; color: rgb(86, 84, 84)=
; }

.docs_main p strong { font-weight: 500; }

.docs_main p.small { font-size: 0.75em; line-height: 1.714em; }

@media (min-width: 768px) {
  .docs_main p { font-size: 1.125em; }
  .docs_main p.small { font-size: 0.875em; }
}

.docs_main p + pre { margin-top: 0px; }

.docs_main p, .docs_main ul, .docs_main ol, .docs_main pre { margin-bottom:=
 1.5em; }

.docs_main p a, .docs_main ul a, .docs_main ol a, .docs_main pre a { color:=
 rgb(235, 68, 50); text-decoration: underline; word-break: break-word; }

.docs_main p a:hover, .docs_main ul a:hover, .docs_main ol a:hover, .docs_m=
ain pre a:hover { }

.docs_main q, .docs_main blockquote p { quotes: "=E2=80=9C" "=E2=80=9D" "=
=E2=80=98" "=E2=80=99"; }

@media (min-width: 640px) {
  .docs_main blockquote { margin-left: 0px; margin-right: 0px; }
}

.docs_main span.small_text { display: block; font-size: 0.625em; line-heigh=
t: 1.4em; color: rgb(86, 84, 84); }

.docs_main span.label, .docs_main label { display: block; font-size: 0.625e=
m; line-height: 1.4em; text-transform: uppercase; opacity: 0.4; margin-bott=
om: 0.875em; letter-spacing: 2.5px; }

.docs_main code { font-size: 0.875em; font-family: source-code-pro, ui-mono=
space, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier=
 New", monospace; line-height: 1.714em; color: rgb(35, 35, 35); }

.docs_main :not(pre) > code { background: rgb(251, 251, 253); color: rgb(20=
2, 71, 63); padding: 0px 0.25em; }

.list-custom li { position: relative; padding-left: 1rem; }

.list-custom li::before { content: ""; position: absolute; top: 0.15em; lef=
t: 0px; width: 9px; height: 10px; background: url("/img/icons/ul_marker.min=
.svg") 50% center / contain no-repeat; }

:not(pre) > code { color: rgb(35, 35, 35); background: none; text-align: le=
ft; white-space: pre; word-spacing: normal; word-break: normal; overflow-wr=
ap: normal; tab-size: 4; hyphens: none; }

.docs_main :not(pre) > code { display: inline-flex; padding: 0px 0.125rem; =
border-radius: 0.125rem; max-width: 100%; overflow-x: auto; vertical-align:=
 middle; }

:is(.dark .docs_main :not(pre) > code) { --tw-bg-opacity: 1; background-col=
or: rgb(37 42 55 / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: rgb(=
235 68 50 / var(--tw-text-opacity)); }

pre { margin-top: 1rem; margin-bottom: 1rem; overflow-x: auto; tab-size: 4;=
 white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap:=
 normal; box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 1px; position: relative; b=
order-radius: 0.5rem; --tw-bg-opacity: 1; background-color: rgb(37 42 55 / =
var(--tw-bg-opacity)); }

.code-block-wrapper .copyBtn { position: absolute; right: 0.5rem; top: 0.5r=
em; --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-text-opacity));=
 opacity: 0.25; outline: transparent solid 2px; outline-offset: 2px; }

.code-block-wrapper .copyBtn:hover { --tw-text-opacity: 1; color: rgb(147 1=
47 158 / var(--tw-text-opacity)); opacity: 1; }

pre .copyBtn:hover, pre .copyBtn:focus, pre .copyBtn:active { --tw-text-opa=
city: 1; color: rgb(255 255 255 / var(--tw-text-opacity)); outline: transpa=
rent solid 2px; outline-offset: 2px; }

pre code.torchlight { display: block; min-width: max-content; padding-top: =
1rem; padding-bottom: 1rem; --tw-bg-opacity: 1 !important; background-color=
: rgb(37 42 55 / var(--tw-bg-opacity)) !important; }

pre code.torchlight .line { padding-left: 1rem; padding-right: 1rem; }

pre code.torchlight .line-number { padding-right: 1rem; }

.docs_sidebar ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_sidebar ul li { display: block; padding: 0.65em 0px; white-space: now=
rap; }

.docs_sidebar ul li h2 { display: block; font-size: 0.875em; font-weight: 5=
00; color: rgb(35, 35, 35); text-decoration: none; margin-bottom: 0px; curs=
or: pointer; transition: all 0.3s ease 0s; }

.docs_sidebar ul li h2:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul li a { display: block; font-size: 0.875em; font-weight: 50=
0; color: rgb(35, 35, 35); text-decoration: none; transition: transform 0.3=
s ease 0s; }

.docs_sidebar ul li a:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul ul { overflow: hidden; max-height: 0px; transition: max-he=
ight 0.45s ease 0s; }

.docs_sidebar ul ul li a { position: relative; padding-left: 1em; font-weig=
ht: 400; line-height: 1.25; }

.docs_sidebar ul ul li.active a::before { content: ""; position: absolute; =
top: 0.25em; left: 0px; width: 0.5rem; height: 0.5rem; background: url("/im=
g/icons/active_marker.min.svg") center center no-repeat; }

.docs_sidebar ul .sub--on > h2 { margin-bottom: 1em; }

.docs_sidebar ul .sub--on ul { max-height: none; }

:root { --docsearch-primary-color: #5468ff; --docsearch-text-color: #1c1e21=
; --docsearch-spacing: 12px; --docsearch-icon-stroke-width: 1.4; --docsearc=
h-highlight-color: var(--docsearch-primary-color); --docsearch-muted-color:=
 #969faf; --docsearch-container-background: rgba(101,108,133,.8); --docsear=
ch-logo-color: #5468ff; --docsearch-modal-width: 560px; --docsearch-modal-h=
eight: 600px; --docsearch-modal-background: #f5f6f7; --docsearch-modal-shad=
ow: inset 1px 1px 0 0 hsla(0,0%,100%,.5),0 3px 8px 0 #555a64; --docsearch-s=
earchbox-height: 56px; --docsearch-searchbox-background: #ebedf0; --docsear=
ch-searchbox-focus-background: #fff; --docsearch-searchbox-shadow: inset 0 =
0 0 2px var(--docsearch-primary-color); --docsearch-hit-height: 56px; --doc=
search-hit-color: #444950; --docsearch-hit-active-color: #fff; --docsearch-=
hit-background: #fff; --docsearch-hit-shadow: 0 1px 3px 0 #d4d9e1; --docsea=
rch-key-gradient: linear-gradient(-225deg,#d5dbe4,#f8f8f8); --docsearch-key=
-shadow: inset 0 -2px 0 0 #cdcde6,inset 0 0 1px 1px #fff,0 1px 2px 1px rgba=
(30,35,90,.4); --docsearch-footer-height: 44px; --docsearch-footer-backgrou=
nd: #fff; --docsearch-footer-shadow: 0 -1px 0 0 #e0e3e8,0 -3px 6px 0 rgba(6=
9,98,155,.12); }

html[data-theme=3D"dark"] { --docsearch-text-color: #f5f6f7; --docsearch-co=
ntainer-background: rgba(9,10,17,.8); --docsearch-modal-background: #15172a=
; --docsearch-modal-shadow: inset 1px 1px 0 0 #2c2e40,0 3px 8px 0 #000309; =
--docsearch-searchbox-background: #090a11; --docsearch-searchbox-focus-back=
ground: #000; --docsearch-hit-color: #bec3c9; --docsearch-hit-shadow: none;=
 --docsearch-hit-background: #090a11; --docsearch-key-gradient: linear-grad=
ient(-26.5deg,#565872,#31355b); --docsearch-key-shadow: inset 0 -2px 0 0 #2=
82d55,inset 0 0 1px 1px #51577d,0 2px 2px 0 rgba(3,4,9,.3); --docsearch-foo=
ter-background: #1e2136; --docsearch-footer-shadow: inset 0 1px 0 0 rgba(73=
,76,106,.5),0 -4px 8px 0 rgba(0,0,0,.2); --docsearch-logo-color: #fff; --do=
csearch-muted-color: #7f8497; }

.DocSearch--active { overflow: hidden !important; }

.DocSearch-Container, .DocSearch-Container * { box-sizing: border-box; }

.DocSearch-Container { background-color: var(--docsearch-container-backgrou=
nd); height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw; z-i=
ndex: 200; }

.DocSearch-Container a { text-decoration: none; }

.DocSearch-Link { appearance: none; background: none; border: 0px; color: v=
ar(--docsearch-highlight-color); cursor: pointer; font: inherit; margin: 0p=
x; padding: 0px; }

.DocSearch-Modal { background: var(--docsearch-modal-background); border-ra=
dius: 6px; box-shadow: var(--docsearch-modal-shadow); flex-direction: colum=
n; margin: 60px auto auto; max-width: var(--docsearch-modal-width); positio=
n: relative; }

.DocSearch-SearchBar { display: flex; padding: var(--docsearch-spacing) var=
(--docsearch-spacing) 0; }

.DocSearch-Form { align-items: center; background: var(--docsearch-searchbo=
x-focus-background); border-radius: 4px; box-shadow: var(--docsearch-search=
box-shadow); display: flex; height: var(--docsearch-searchbox-height); marg=
in: 0px; padding: 0 var(--docsearch-spacing); position: relative; width: 10=
0%; }

.DocSearch-Input { appearance: none; background: transparent; border: 0px; =
color: var(--docsearch-text-color); flex: 1 1 0%; font-style: inherit; font=
-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height=
: inherit; font-family: inherit; font-optical-sizing: inherit; font-kerning=
: inherit; font-feature-settings: inherit; font-variation-settings: inherit=
; font-size: 1.2em; height: 100%; outline: none; padding: 0px 0px 0px 8px; =
width: 80%; }

.DocSearch-Input::placeholder { color: var(--docsearch-muted-color); opacit=
y: 1; }

.DocSearch-Input::-webkit-search-cancel-button, .DocSearch-Input::-webkit-s=
earch-decoration, .DocSearch-Input::-webkit-search-results-button, .DocSear=
ch-Input::-webkit-search-results-decoration { display: none; }

.DocSearch-LoadingIndicator, .DocSearch-MagnifierLabel, .DocSearch-Reset { =
margin: 0px; padding: 0px; }

.DocSearch-MagnifierLabel, .DocSearch-Reset { align-items: center; color: v=
ar(--docsearch-highlight-color); display: flex; justify-content: center; }

.DocSearch-Container--Stalled .DocSearch-MagnifierLabel, .DocSearch-Loading=
Indicator { display: none; }

.DocSearch-Container--Stalled .DocSearch-LoadingIndicator { align-items: ce=
nter; color: var(--docsearch-highlight-color); display: flex; justify-conte=
nt: center; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Reset { animation: auto ease 0s 1 normal none running none; ap=
pearance: none; background: none; border: 0px; border-radius: 50%; color: v=
ar(--docsearch-icon-color); cursor: pointer; right: 0px; stroke-width: var(=
--docsearch-icon-stroke-width); }
}

.DocSearch-Reset { animation: 0.1s ease-in 0s 1 normal forwards running fad=
e-in; appearance: none; background: none; border: 0px; border-radius: 50%; =
color: var(--docsearch-icon-color); cursor: pointer; padding: 2px; right: 0=
px; stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Reset[hidden] { display: none; }

.DocSearch-Reset:hover { color: var(--docsearch-highlight-color); }

.DocSearch-LoadingIndicator svg, .DocSearch-MagnifierLabel svg { height: 24=
px; width: 24px; }

.DocSearch-Cancel { display: none; }

.DocSearch-Dropdown { max-height: calc(var(--docsearch-modal-height) - var(=
--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch-=
footer-height)); min-height: var(--docsearch-spacing); overflow-y: overlay;=
 padding: 0 var(--docsearch-spacing); }

.DocSearch-Dropdown::-webkit-scrollbar { width: 12px; }

.DocSearch-Dropdown::-webkit-scrollbar-track { background: transparent; }

.DocSearch-Dropdown::-webkit-scrollbar-thumb { background-color: var(--docs=
earch-muted-color); border: 3px solid var(--docsearch-modal-background); bo=
rder-radius: 20px; }

.DocSearch-Dropdown ul { list-style: none; margin: 0px; padding: 0px; }

.DocSearch-Label { font-size: 0.75em; line-height: 1.6em; }

.DocSearch-Help, .DocSearch-Label { color: var(--docsearch-muted-color); }

.DocSearch-Help { font-size: 0.9em; margin: 0px; user-select: none; }

.DocSearch-Title { font-size: 1.2em; }

.DocSearch-Logo a { display: flex; }

.DocSearch-Logo svg { color: var(--docsearch-logo-color); margin-left: 8px;=
 }

.DocSearch-Hits:last-of-type { margin-bottom: 24px; }

.DocSearch-Hits mark { background: none; color: var(--docsearch-highlight-c=
olor); }

.DocSearch-HitsFooter { color: var(--docsearch-muted-color); display: flex;=
 font-size: 0.85em; justify-content: center; margin-bottom: var(--docsearch=
-spacing); padding: var(--docsearch-spacing); }

.DocSearch-HitsFooter a { border-bottom: 1px solid; color: inherit; }

.DocSearch-Hit { border-radius: 4px; display: flex; padding-bottom: 4px; po=
sition: relative; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--deleting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--deleting { opacity: 0; transition: all 0.25s linear 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--favoriting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--favoriting { transform: scale(0); transform-origin: center =
top; transition: all 0.25s linear 0.25s; }

.DocSearch-Hit a { background: var(--docsearch-hit-background); border-radi=
us: 4px; box-shadow: var(--docsearch-hit-shadow); display: block; padding-l=
eft: var(--docsearch-spacing); width: 100%; }

.DocSearch-Hit-source { background: var(--docsearch-modal-background); colo=
r: var(--docsearch-highlight-color); font-size: 0.85em; font-weight: 600; l=
ine-height: 32px; margin: 0px -4px; padding: 8px 4px 0px; position: sticky;=
 top: 0px; z-index: 10; }

.DocSearch-Hit-Tree { color: var(--docsearch-muted-color); height: var(--do=
csearch-hit-height); opacity: 0.5; stroke-width: var(--docsearch-icon-strok=
e-width); width: 24px; }

.DocSearch-Hit[aria-selected=3D"true"] a { background-color: var(--docsearc=
h-highlight-color); }

.DocSearch-Hit[aria-selected=3D"true"] mark { text-decoration: underline; }

.DocSearch-Hit-Container { align-items: center; color: var(--docsearch-hit-=
color); display: flex; flex-direction: row; height: var(--docsearch-hit-hei=
ght); padding: 0 var(--docsearch-spacing) 0 0; }

.DocSearch-Hit-icon { height: 20px; width: 20px; }

.DocSearch-Hit-action, .DocSearch-Hit-icon { color: var(--docsearch-muted-c=
olor); stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Hit-action { align-items: center; display: flex; height: 22px; w=
idth: 22px; }

.DocSearch-Hit-action svg { display: block; height: 18px; width: 18px; }

.DocSearch-Hit-action + .DocSearch-Hit-action { margin-left: 6px; }

.DocSearch-Hit-action-button { appearance: none; background: none; border: =
0px; border-radius: 50%; color: inherit; cursor: pointer; padding: 2px; }

svg.DocSearch-Hit-Select-Icon { display: none; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Select-Icon { display=
: block; }

.DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { ba=
ckground: rgba(0, 0, 0, 0.2); transition: background-color 0.1s ease-in 0s;=
 }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
transition: none 0s ease 0s; }
}

.DocSearch-Hit-action-button:focus path, .DocSearch-Hit-action-button:hover=
 path { fill: rgb(255, 255, 255); }

.DocSearch-Hit-content-wrapper { display: flex; flex: 1 1 auto; flex-direct=
ion: column; font-weight: 500; justify-content: center; line-height: 1.2em;=
 margin: 0px 8px; overflow-x: hidden; position: relative; text-overflow: el=
lipsis; white-space: nowrap; width: 80%; }

.DocSearch-Hit-title { font-size: 0.9em; }

.DocSearch-Hit-path { color: var(--docsearch-muted-color); font-size: 0.75e=
m; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-action, .DocSearch-Hi=
t[aria-selected=3D"true"] .DocSearch-Hit-icon, .DocSearch-Hit[aria-selected=
=3D"true"] .DocSearch-Hit-path, .DocSearch-Hit[aria-selected=3D"true"] .Doc=
Search-Hit-text, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-titl=
e, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Tree, .DocSearch-H=
it[aria-selected=3D"true"] mark { color: var(--docsearch-hit-active-color) =
!important; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
background: rgba(0, 0, 0, 0.2); transition: none 0s ease 0s; }
}

.DocSearch-ErrorScreen, .DocSearch-NoResults, .DocSearch-StartScreen { font=
-size: 0.9em; margin: 0px auto; padding: 36px 0px; text-align: center; widt=
h: 80%; }

.DocSearch-Screen-Icon { color: var(--docsearch-muted-color); padding-botto=
m: 12px; }

.DocSearch-NoResults-Prefill-List { display: inline-block; padding-bottom: =
24px; text-align: left; }

.DocSearch-NoResults-Prefill-List ul { display: inline-block; padding: 8px =
0px 0px; }

.DocSearch-NoResults-Prefill-List li { list-style-position: inside; list-st=
yle-type: "=C2=BB "; }

.DocSearch-Prefill { appearance: none; background: none; border: 0px; borde=
r-radius: 1em; color: var(--docsearch-highlight-color); cursor: pointer; di=
splay: inline-block; font-size: 1em; font-weight: 700; padding: 0px; }

.DocSearch-Prefill:focus, .DocSearch-Prefill:hover { outline: none; text-de=
coration: underline; }

.DocSearch-Footer { align-items: center; background: var(--docsearch-footer=
-background); border-radius: 0px 0px 8px 8px; box-shadow: var(--docsearch-f=
ooter-shadow); display: flex; flex-direction: row-reverse; flex-shrink: 0; =
height: var(--docsearch-footer-height); justify-content: space-between; pad=
ding: 0 var(--docsearch-spacing); position: relative; user-select: none; wi=
dth: 100%; z-index: 300; }

.DocSearch-Commands { color: var(--docsearch-muted-color); display: flex; l=
ist-style: none; margin: 0px; padding: 0px; }

.DocSearch-Commands li { align-items: center; display: flex; }

.DocSearch-Commands li:not(:last-of-type) { margin-right: 0.8em; }

.DocSearch-Commands-Key { align-items: center; background: var(--docsearch-=
key-gradient); border-radius: 2px; box-shadow: var(--docsearch-key-shadow);=
 display: flex; height: 18px; justify-content: center; margin-right: 0.4em;=
 padding: 0px 0px 1px; color: var(--docsearch-muted-color); border: 0px; wi=
dth: 20px; }

@media (max-width: 768px) {
  :root { --docsearch-spacing: 10px; --docsearch-footer-height: 40px; }
  .DocSearch-Dropdown { height: 100%; }
  .DocSearch-Container { height: calc(var(--docsearch-vh, 1vh)*100); positi=
on: absolute; }
  .DocSearch-Footer { border-radius: 0px; bottom: 0px; position: absolute; =
}
  .DocSearch-Hit-content-wrapper { display: flex; position: relative; width=
: 80%; }
  .DocSearch-Modal { border-radius: 0px; box-shadow: none; height: calc(var=
(--docsearch-vh, 1vh)*100); margin: 0px; max-width: 100%; width: 100%; }
  .DocSearch-Dropdown { max-height: calc(var(--docsearch-vh, 1vh)*100 - var=
(--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch=
-footer-height)); }
  .DocSearch-Cancel { appearance: none; background: none; border: 0px; colo=
r: var(--docsearch-highlight-color); cursor: pointer; display: inline-block=
; flex: 0 0 auto; font-style: inherit; font-variant: inherit; font-stretch:=
 inherit; line-height: inherit; font-family: inherit; font-optical-sizing: =
inherit; font-kerning: inherit; font-feature-settings: inherit; font-variat=
ion-settings: inherit; font-size: 1em; font-weight: 500; margin-left: var(-=
-docsearch-spacing); outline: none; overflow: hidden; padding: 0px; user-se=
lect: none; white-space: nowrap; }
  .DocSearch-Commands, .DocSearch-Hit-Tree { display: none; }
}

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

:root { --docsearch-primary-color: #F9322C; }

html[data-theme=3D"dark"]:root { --docsearch-primary-color: #F9322C; }

.DocSearch-Button { width: 100%; text-align: left; }

.DocSearch-Button-Container { display: inline-block; margin-right: 5px; }

.DocSearch-Search-Icon { display: inline-block; margin-right: 14px; margin-=
top: -2px; width: 15px; height: 15px; stroke-width: 2; }

.main-header .DocSearch-Button-Placeholder, .DocSearch-Button-Keys { displa=
y: none; }

.main-header .DocSearch-Button-Container { margin-right: 0px; }

.main-header .DocSearch-Search-Icon { color: rgb(35, 35, 35); width: 20px; =
height: 20px; stroke-width: 1.5; }

.callout p { margin-bottom: 0px; }

.docs_main a[name] { position: relative; display: block; visibility: hidden=
; top: -45px; }

.docs_main table { border-collapse: collapse; width: 100%; font-size: 13px;=
 margin-bottom: 2em; }

.docs_main table th, .docs_main table td { border: 1px solid rgb(215, 215, =
220); padding: 10px; text-align: left; }

.docs_main table th { font-size: 16px; }

@media (min-width: 640px) {
  .docs_main a[name] { position: relative; display: block; visibility: hidd=
en; top: -30px; }
}

.docs_main .page_title { display: none; }

.docs_main h1 { font-size: 2.5em; letter-spacing: 0em; }

.docs_main h2 { font-size: 1.75em; letter-spacing: 0px; }

.docs_main h3 { font-size: 1.25em; letter-spacing: 0px; font-weight: 500; }

.docs_main h4 { font-size: 1em; font-weight: 500; letter-spacing: 0px; }

.docs_main h4 a, .docs_main h3 a, .docs_main h2 a { color: rgb(35, 35, 35);=
 }

.docs_main h4 a::before, .docs_main h3 a::before, .docs_main h2 a::before {=
 content: "#"; font-weight: 400; position: absolute; color: rgb(235, 68, 50=
); opacity: 0.6; }

.docs_main h3 a::before, .docs_main h2 a::before { margin-left: -25px; font=
-size: 28px; }

.docs_main h4 a::before { margin-left: -18px; font-size: 17px; }

.docs_main code { font-size: 0.8rem; font-weight: 500; line-height: 1.9; co=
lor: rgb(35, 35, 35); }

.docs_main p { font-size: 1rem; line-height: 1.8em; }

.docs_main p code { font-size: 0.8rem; }

.docs_main ul:not(:first-of-type), .docs_main .content-list ul { list-style=
-type: none; margin: 0px 0px 2.5em; padding: 0px; }

.docs_main ul:not(:first-of-type) li, .docs_main .content-list ul li { posi=
tion: relative; display: block; padding-left: 1.25em; margin-bottom: 1rem; =
font-size: 0.89em; color: rgb(86, 84, 84); line-height: 1.714em; }

.docs_main ul:not(:first-of-type) li a, .docs_main .content-list ul li a { =
text-decoration: none; }

.docs_main ul:not(:first-of-type) li code, .docs_main .content-list ul li c=
ode { font-size: 0.875em; }

.docs_main ul:not(:first-of-type) li::before, .docs_main .content-list ul l=
i::before { content: ""; position: absolute; top: 0.4em; left: 0px; width: =
9px; height: 10px; background: url("/img/icons/ul_marker.min.svg") center c=
enter / contain no-repeat; }

.docs_main h1 + ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_main h1 + ul li { display: block; margin-bottom: 0.5em; }

.docs_main h1 + ul li a { position: relative; font-size: 0.89em; font-weigh=
t: 500; color: rgb(35, 35, 35); text-decoration: none; }

.docs_main h1 + ul li a::before { content: "# "; color: rgb(235, 68, 50); }

.docs_main h1 + ul ul { margin-top: 0.5em; padding: 0px; margin-bottom: 0px=
; }

.docs_main h1 + ul ul li { padding-left: 1.5em; }

.docs_main h1 + ul ul li a { font-weight: 400; }

#carbonads { position: fixed; bottom: 20px; right: 20px; background-color: =
rgb(247, 248, 251); z-index: 100; box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 1=
px; padding: 0.625em; max-width: 130px; box-sizing: content-box; }

#carbonads span { display: block; }

#carbonads img { display: block; margin-bottom: 0.75em; }

#carbonads .carbon-text { display: block; font-size: 0.75em; line-height: 1=
.4em; color: rgb(86, 84, 84); }

#carbonads .carbon-poweredby { font-size: 0.5em; text-transform: uppercase;=
 letter-spacing: 1px; line-height: 1; color: rgb(119, 119, 119); }

@media only screen and (min-width: 320px) and (max-width: 1239px) {
  #carbonads { position: relative; float: none; bottom: initial; right: ini=
tial; margin: 20px 0px; max-width: 330px; padding: 1em; }
  #carbonads .carbon-wrap { display: flex; flex-direction: row; }
  #carbonads img { margin: 0px 1em 0px 0px; }
  #carbonads .carbon-text { font-size: 0.825em; margin-bottom: 1em; }
  #carbonads .carbon-poweredby { position: absolute; left: 162px; bottom: 1=
5px; }
}

@media only screen and (min-width: 320px) and (max-width: 429px) {
  #carbonads .carbon-wrap { flex-direction: column; }
  #carbonads img { margin: 0px 0px 0.5em; }
  #carbonads .carbon-text { margin-bottom: initial; }
  #carbonads .carbon-poweredby { position: initial; left: initial; right: i=
nitial; }
}

@media only print {
  #carbonads { display: none; }
}

#skip-to-content-link:not(:focus) { position: absolute !important; clip: re=
ct(0px, 0px, 0px, 0px) !important; width: 1px !important; height: 1px !impo=
rtant; padding: 0px !important; margin: -1px !important; overflow: hidden !=
important; }

#skip-to-content-link { z-index: 2147483647; }

#main-content { outline: none; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border-width: 0px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-y-0 { top: 0px; bottom: 0px; }

.-left-2 { left: -0.5rem; }

.-left-6 { left: -1.5rem; }

.-right-2 { right: -0.5rem; }

.-right-\[40px\] { right: -40px; }

.-top-24 { top: -6rem; }

.bottom-0 { bottom: 0px; }

.bottom-12 { bottom: 3rem; }

.bottom-40 { bottom: 10rem; }

.left-0 { left: 0px; }

.left-2 { left: 0.5rem; }

.left-28 { left: 7rem; }

.left-3 { left: 0.75rem; }

.left-\[-20\%\] { left: -20%; }

.right-0 { right: 0px; }

.right-1\/3 { right: 33.3333%; }

.right-1\/4 { right: 25%; }

.right-16 { right: 4rem; }

.right-6 { right: 1.5rem; }

.right-8 { right: 2rem; }

.right-\[-20\%\] { right: -20%; }

.right-\[12\%\] { right: 12%; }

.right-\[20\%\] { right: 20%; }

.right-\[300px\] { right: 300px; }

.right-\[80px\] { right: 80px; }

.top-0 { top: 0px; }

.top-12 { top: 3rem; }

.top-2\/3 { top: 66.6667%; }

.top-20 { top: 5rem; }

.top-24 { top: 6rem; }

.top-3 { top: 0.75rem; }

.top-40 { top: 10rem; }

.top-48 { top: 12rem; }

.top-64 { top: 16rem; }

.top-\[25\%\] { top: 25%; }

.top-\[300px\] { top: 300px; }

.top-\[45\%\] { top: 45%; }

.top-\[480px\] { top: 480px; }

.top-\[50px\] { top: 50px; }

.z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-50 { z-index: 50; }

.col-span-12 { grid-column: span 12 / span 12; }

.col-span-6 { grid-column: span 6 / span 6; }

.m-0 { margin: 0px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.mb-0 { margin-bottom: 0px; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-6 { margin-bottom: 1.5rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-2\.5 { margin-left: 0.625rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-8 { margin-left: 2rem; }

.mr-2 { margin-right: 0.5rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-12 { margin-top: 3rem; }

.mt-14 { margin-top: 3.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-2\.5 { margin-top: 0.625rem; }

.mt-24 { margin-top: 6rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-8 { margin-top: 2rem; }

.mt-px { margin-top: 1px; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.grid { display: grid; }

.hidden { display: none; }

.aspect-square { aspect-ratio: 1 / 1; }

.h-10 { height: 2.5rem; }

.h-12 { height: 3rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-20 { height: 5rem; }

.h-4 { height: 1rem; }

.h-5 { height: 1.25rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-\[300px\] { height: 300px; }

.h-\[640px\] { height: 640px; }

.h-full { height: 100%; }

.max-h-full { max-height: 100%; }

.min-h-0 { min-height: 0px; }

.min-h-full { min-height: 100%; }

.w-1\/2 { width: 50%; }

.w-10 { width: 2.5rem; }

.w-12 { width: 3rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\.5 { width: 0.625rem; }

.w-20 { width: 5rem; }

.w-224 { width: 56rem; }

.w-4 { width: 1rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-9 { width: 2.25rem; }

.w-\[302px\] { width: 302px; }

.w-\[640px\] { width: 640px; }

.w-full { width: 100%; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-\[1100px\] { max-width: 1100px; }

.max-w-\[218px\] { max-width: 218px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-none { max-width: none; }

.max-w-prose { max-width: 65ch; }

.max-w-screen-2xl { max-width: 1536px; }

.max-w-screen-lg { max-width: 1024px; }

.max-w-screen-xl { max-width: 1280px; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.flex-1 { flex: 1 1 0%; }

.flex-shrink-0, .shrink-0 { flex-shrink: 0; }

.origin-top { transform-origin: center top; }

.-translate-x-1 { --tw-translate-x: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-1 { --tw-translate-y: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-12 { --tw-translate-y: -3rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-20 { --tw-translate-y: -5rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-8 { --tw-translate-y: -2rem; transform: translate(var(--tw-tr=
anslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-sk=
ew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sc=
ale-y)); }

.translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.translate-x-32 { --tw-translate-x: 8rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-rotate-1 { --tw-rotate: -1deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; transform: translate(var(--tw-translate-=
x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) s=
kewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));=
 }

.rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translate-x),v=
ar(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY=
(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(var(--t=
w-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }

.scale-105 { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }

.scale-75 { --tw-scale-x: .75; --tw-scale-y: .75; transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(=
--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(=
--tw-scale-y)); }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))=
 scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@keyframes cube {=20
  50% { transform: translateY(1rem); }
}

.animate-cube { animation: 6s ease-in-out 0s infinite normal none running c=
ube; }

.resize { resize: both; }

.list-disc { list-style-type: disc; }

.appearance-none { appearance: none; }

.columns-1 { columns: 1; }

.break-inside-avoid-column { break-inside: avoid-column; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-6 { grid-template-columns: repeat(6, minmax(0px, 1fr)); }

.grid-cols-8 { grid-template-columns: repeat(8, minmax(0px, 1fr)); }

.flex-col { flex-direction: column; }

.flex-wrap { flex-wrap: wrap; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.gap-10 { gap: 2.5rem; }

.gap-12 { gap: 3rem; }

.gap-3 { gap: 0.75rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-x-10 { column-gap: 2.5rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-y-12 { row-gap: 3rem; }

.gap-y-6 { row-gap: 1.5rem; }

.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(.75rem * var(--tw-space-x-reverse)); margin-left: calc(.75r=
em * calc(1 - var(--tw-space-x-reverse))); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1rem * var(--tw-space-x-reverse)); margin-left: calc(1rem *=
 calc(1 - var(--tw-space-x-reverse))); }

.space-x-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1.25rem * var(--tw-space-x-reverse)); margin-left: calc(1.2=
5rem * calc(1 - var(--tw-space-x-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.25rem * var(--tw-space-y-reverse)); }

.space-y-12 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; ma=
rgin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(3rem * var(--tw-space-y-reverse)); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(.5rem * var(--tw-space-y-reverse)); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.75rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.75rem * var(--tw-space-y-reverse)); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(1rem * var(--tw-space-y-reverse)); }

.space-y-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom=
: calc(1.25rem * var(--tw-space-y-reverse)); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(2rem * var(--tw-space-y-reverse)); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-right-width: calc(1px * var(--tw-divide-x-reverse)); border-left-width:=
 calc(1px * calc(1 - var(--tw-divide-x-reverse))); }

.divide-dark-500 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(57 64 86 / var(--tw-divide-opacity)); }

.divide-gray-100 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(245 245 250 / var(--tw-divide-opacity)); }

.self-stretch { align-self: stretch; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.whitespace-nowrap { white-space: nowrap; }

.rounded-2xl { border-radius: 1rem; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-none { border-radius: 0px; }

.rounded-b-lg { border-bottom-right-radius: 0.5rem; border-bottom-left-radi=
us: 0.5rem; }

.rounded-b-none { border-bottom-right-radius: 0px; border-bottom-left-radiu=
s: 0px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.border { border-width: 1px; }

.border-\[10px\] { border-width: 10px; }

.border-b { border-bottom-width: 1px; }

.border-b-\[3px\] { border-bottom-width: 3px; }

.border-l { border-left-width: 1px; }

.border-r { border-right-width: 1px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-dashed { border-style: dashed; }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgb(245 245 250 / =
var(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgb(231 232 242 / =
var(--tw-border-opacity)); }

.border-red-400 { --tw-border-opacity: 1; border-color: rgb(248 113 113 / v=
ar(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgb(249 50 44 / var=
(--tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50 / var=
(--tw-border-opacity)); }

.border-white { --tw-border-opacity: 1; border-color: rgb(255 255 255 / var=
(--tw-border-opacity)); }

.border-b-transparent { border-bottom-color: transparent; }

.border-opacity-60 { --tw-border-opacity: .6; }

.bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(7 130 177 / var(--=
tw-bg-opacity)); }

.bg-breeze { --tw-bg-opacity: 1; background-color: rgb(243 193 75 / var(--t=
w-bg-opacity)); }

.bg-breeze\/0 { background-color: rgba(243, 193, 75, 0); }

.bg-breeze\/10 { background-color: rgba(243, 193, 75, 0.1); }

.bg-breeze\/100 { background-color: rgb(243, 193, 75); }

.bg-breeze\/20 { background-color: rgba(243, 193, 75, 0.2); }

.bg-breeze\/25 { background-color: rgba(243, 193, 75, 0.25); }

.bg-breeze\/30 { background-color: rgba(243, 193, 75, 0.3); }

.bg-breeze\/40 { background-color: rgba(243, 193, 75, 0.4); }

.bg-breeze\/5 { background-color: rgba(243, 193, 75, 0.05); }

.bg-breeze\/50 { background-color: rgba(243, 193, 75, 0.5); }

.bg-breeze\/60 { background-color: rgba(243, 193, 75, 0.6); }

.bg-breeze\/70 { background-color: rgba(243, 193, 75, 0.7); }

.bg-breeze\/75 { background-color: rgba(243, 193, 75, 0.75); }

.bg-breeze\/80 { background-color: rgba(243, 193, 75, 0.8); }

.bg-breeze\/90 { background-color: rgba(243, 193, 75, 0.9); }

.bg-breeze\/95 { background-color: rgba(243, 193, 75, 0.95); }

.bg-cashier { --tw-bg-opacity: 1; background-color: rgb(145 214 48 / var(--=
tw-bg-opacity)); }

.bg-cashier\/0 { background-color: rgba(145, 214, 48, 0); }

.bg-cashier\/10 { background-color: rgba(145, 214, 48, 0.1); }

.bg-cashier\/100 { background-color: rgb(145, 214, 48); }

.bg-cashier\/20 { background-color: rgba(145, 214, 48, 0.2); }

.bg-cashier\/25 { background-color: rgba(145, 214, 48, 0.25); }

.bg-cashier\/30 { background-color: rgba(145, 214, 48, 0.3); }

.bg-cashier\/40 { background-color: rgba(145, 214, 48, 0.4); }

.bg-cashier\/5 { background-color: rgba(145, 214, 48, 0.05); }

.bg-cashier\/50 { background-color: rgba(145, 214, 48, 0.5); }

.bg-cashier\/60 { background-color: rgba(145, 214, 48, 0.6); }

.bg-cashier\/70 { background-color: rgba(145, 214, 48, 0.7); }

.bg-cashier\/75 { background-color: rgba(145, 214, 48, 0.75); }

.bg-cashier\/80 { background-color: rgba(145, 214, 48, 0.8); }

.bg-cashier\/90 { background-color: rgba(145, 214, 48, 0.9); }

.bg-cashier\/95 { background-color: rgba(145, 214, 48, 0.95); }

.bg-dark-600 { --tw-bg-opacity: 1; background-color: rgb(37 42 55 / var(--t=
w-bg-opacity)); }

.bg-dark-700 { --tw-bg-opacity: 1; background-color: rgb(23 25 35 / var(--t=
w-bg-opacity)); }

.bg-dusk { --tw-bg-opacity: 1; background-color: rgb(187 53 139 / var(--tw-=
bg-opacity)); }

.bg-dusk\/0 { background-color: rgba(187, 53, 139, 0); }

.bg-dusk\/10 { background-color: rgba(187, 53, 139, 0.1); }

.bg-dusk\/100 { background-color: rgb(187, 53, 139); }

.bg-dusk\/20 { background-color: rgba(187, 53, 139, 0.2); }

.bg-dusk\/25 { background-color: rgba(187, 53, 139, 0.25); }

.bg-dusk\/30 { background-color: rgba(187, 53, 139, 0.3); }

.bg-dusk\/40 { background-color: rgba(187, 53, 139, 0.4); }

.bg-dusk\/5 { background-color: rgba(187, 53, 139, 0.05); }

.bg-dusk\/50 { background-color: rgba(187, 53, 139, 0.5); }

.bg-dusk\/60 { background-color: rgba(187, 53, 139, 0.6); }

.bg-dusk\/70 { background-color: rgba(187, 53, 139, 0.7); }

.bg-dusk\/75 { background-color: rgba(187, 53, 139, 0.75); }

.bg-dusk\/80 { background-color: rgba(187, 53, 139, 0.8); }

.bg-dusk\/90 { background-color: rgba(187, 53, 139, 0.9); }

.bg-dusk\/95 { background-color: rgba(187, 53, 139, 0.95); }

.bg-echo { --tw-bg-opacity: 1; background-color: rgb(74 178 176 / var(--tw-=
bg-opacity)); }

.bg-echo\/0 { background-color: rgba(74, 178, 176, 0); }

.bg-echo\/10 { background-color: rgba(74, 178, 176, 0.1); }

.bg-echo\/100 { background-color: rgb(74, 178, 176); }

.bg-echo\/20 { background-color: rgba(74, 178, 176, 0.2); }

.bg-echo\/25 { background-color: rgba(74, 178, 176, 0.25); }

.bg-echo\/30 { background-color: rgba(74, 178, 176, 0.3); }

.bg-echo\/40 { background-color: rgba(74, 178, 176, 0.4); }

.bg-echo\/5 { background-color: rgba(74, 178, 176, 0.05); }

.bg-echo\/50 { background-color: rgba(74, 178, 176, 0.5); }

.bg-echo\/60 { background-color: rgba(74, 178, 176, 0.6); }

.bg-echo\/70 { background-color: rgba(74, 178, 176, 0.7); }

.bg-echo\/75 { background-color: rgba(74, 178, 176, 0.75); }

.bg-echo\/80 { background-color: rgba(74, 178, 176, 0.8); }

.bg-echo\/90 { background-color: rgba(74, 178, 176, 0.9); }

.bg-echo\/95 { background-color: rgba(74, 178, 176, 0.95); }

.bg-envoyer { --tw-bg-opacity: 1; background-color: rgb(245 104 87 / var(--=
tw-bg-opacity)); }

.bg-envoyer\/0 { background-color: rgba(245, 104, 87, 0); }

.bg-envoyer\/10 { background-color: rgba(245, 104, 87, 0.1); }

.bg-envoyer\/100 { background-color: rgb(245, 104, 87); }

.bg-envoyer\/20 { background-color: rgba(245, 104, 87, 0.2); }

.bg-envoyer\/25 { background-color: rgba(245, 104, 87, 0.25); }

.bg-envoyer\/30 { background-color: rgba(245, 104, 87, 0.3); }

.bg-envoyer\/40 { background-color: rgba(245, 104, 87, 0.4); }

.bg-envoyer\/5 { background-color: rgba(245, 104, 87, 0.05); }

.bg-envoyer\/50 { background-color: rgba(245, 104, 87, 0.5); }

.bg-envoyer\/60 { background-color: rgba(245, 104, 87, 0.6); }

.bg-envoyer\/70 { background-color: rgba(245, 104, 87, 0.7); }

.bg-envoyer\/75 { background-color: rgba(245, 104, 87, 0.75); }

.bg-envoyer\/80 { background-color: rgba(245, 104, 87, 0.8); }

.bg-envoyer\/90 { background-color: rgba(245, 104, 87, 0.9); }

.bg-envoyer\/95 { background-color: rgba(245, 104, 87, 0.95); }

.bg-forge { --tw-bg-opacity: 1; background-color: rgb(30 183 134 / var(--tw=
-bg-opacity)); }

.bg-forge\/0 { background-color: rgba(30, 183, 134, 0); }

.bg-forge\/10 { background-color: rgba(30, 183, 134, 0.1); }

.bg-forge\/100 { background-color: rgb(30, 183, 134); }

.bg-forge\/20 { background-color: rgba(30, 183, 134, 0.2); }

.bg-forge\/25 { background-color: rgba(30, 183, 134, 0.25); }

.bg-forge\/30 { background-color: rgba(30, 183, 134, 0.3); }

.bg-forge\/40 { background-color: rgba(30, 183, 134, 0.4); }

.bg-forge\/5 { background-color: rgba(30, 183, 134, 0.05); }

.bg-forge\/50 { background-color: rgba(30, 183, 134, 0.5); }

.bg-forge\/60 { background-color: rgba(30, 183, 134, 0.6); }

.bg-forge\/70 { background-color: rgba(30, 183, 134, 0.7); }

.bg-forge\/75 { background-color: rgba(30, 183, 134, 0.75); }

.bg-forge\/80 { background-color: rgba(30, 183, 134, 0.8); }

.bg-forge\/90 { background-color: rgba(30, 183, 134, 0.9); }

.bg-forge\/95 { background-color: rgba(30, 183, 134, 0.95); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(245 245 250 / var(=
--tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(251 251 253 / var(-=
-tw-bg-opacity)); }

.bg-herd { --tw-bg-opacity: 1; background-color: rgb(220 38 38 / var(--tw-b=
g-opacity)); }

.bg-herd\/0 { background-color: rgba(220, 38, 38, 0); }

.bg-herd\/10 { background-color: rgba(220, 38, 38, 0.1); }

.bg-herd\/100 { background-color: rgb(220, 38, 38); }

.bg-herd\/20 { background-color: rgba(220, 38, 38, 0.2); }

.bg-herd\/25 { background-color: rgba(220, 38, 38, 0.25); }

.bg-herd\/30 { background-color: rgba(220, 38, 38, 0.3); }

.bg-herd\/40 { background-color: rgba(220, 38, 38, 0.4); }

.bg-herd\/5 { background-color: rgba(220, 38, 38, 0.05); }

.bg-herd\/50 { background-color: rgba(220, 38, 38, 0.5); }

.bg-herd\/60 { background-color: rgba(220, 38, 38, 0.6); }

.bg-herd\/70 { background-color: rgba(220, 38, 38, 0.7); }

.bg-herd\/75 { background-color: rgba(220, 38, 38, 0.75); }

.bg-herd\/80 { background-color: rgba(220, 38, 38, 0.8); }

.bg-herd\/90 { background-color: rgba(220, 38, 38, 0.9); }

.bg-herd\/95 { background-color: rgba(220, 38, 38, 0.95); }

.bg-homestead { --tw-bg-opacity: 1; background-color: rgb(231 128 28 / var(=
--tw-bg-opacity)); }

.bg-homestead\/0 { background-color: rgba(231, 128, 28, 0); }

.bg-homestead\/10 { background-color: rgba(231, 128, 28, 0.1); }

.bg-homestead\/100 { background-color: rgb(231, 128, 28); }

.bg-homestead\/20 { background-color: rgba(231, 128, 28, 0.2); }

.bg-homestead\/25 { background-color: rgba(231, 128, 28, 0.25); }

.bg-homestead\/30 { background-color: rgba(231, 128, 28, 0.3); }

.bg-homestead\/40 { background-color: rgba(231, 128, 28, 0.4); }

.bg-homestead\/5 { background-color: rgba(231, 128, 28, 0.05); }

.bg-homestead\/50 { background-color: rgba(231, 128, 28, 0.5); }

.bg-homestead\/60 { background-color: rgba(231, 128, 28, 0.6); }

.bg-homestead\/70 { background-color: rgba(231, 128, 28, 0.7); }

.bg-homestead\/75 { background-color: rgba(231, 128, 28, 0.75); }

.bg-homestead\/80 { background-color: rgba(231, 128, 28, 0.8); }

.bg-homestead\/90 { background-color: rgba(231, 128, 28, 0.9); }

.bg-homestead\/95 { background-color: rgba(231, 128, 28, 0.95); }

.bg-horizon { --tw-bg-opacity: 1; background-color: rgb(140 110 211 / var(-=
-tw-bg-opacity)); }

.bg-horizon\/0 { background-color: rgba(140, 110, 211, 0); }

.bg-horizon\/10 { background-color: rgba(140, 110, 211, 0.1); }

.bg-horizon\/100 { background-color: rgb(140, 110, 211); }

.bg-horizon\/20 { background-color: rgba(140, 110, 211, 0.2); }

.bg-horizon\/25 { background-color: rgba(140, 110, 211, 0.25); }

.bg-horizon\/30 { background-color: rgba(140, 110, 211, 0.3); }

.bg-horizon\/40 { background-color: rgba(140, 110, 211, 0.4); }

.bg-horizon\/5 { background-color: rgba(140, 110, 211, 0.05); }

.bg-horizon\/50 { background-color: rgba(140, 110, 211, 0.5); }

.bg-horizon\/60 { background-color: rgba(140, 110, 211, 0.6); }

.bg-horizon\/70 { background-color: rgba(140, 110, 211, 0.7); }

.bg-horizon\/75 { background-color: rgba(140, 110, 211, 0.75); }

.bg-horizon\/80 { background-color: rgba(140, 110, 211, 0.8); }

.bg-horizon\/90 { background-color: rgba(140, 110, 211, 0.9); }

.bg-horizon\/95 { background-color: rgba(140, 110, 211, 0.95); }

.bg-inertia { --tw-bg-opacity: 1; background-color: rgb(149 83 233 / var(--=
tw-bg-opacity)); }

.bg-inertia\/0 { background-color: rgba(149, 83, 233, 0); }

.bg-inertia\/10 { background-color: rgba(149, 83, 233, 0.1); }

.bg-inertia\/100 { background-color: rgb(149, 83, 233); }

.bg-inertia\/20 { background-color: rgba(149, 83, 233, 0.2); }

.bg-inertia\/25 { background-color: rgba(149, 83, 233, 0.25); }

.bg-inertia\/30 { background-color: rgba(149, 83, 233, 0.3); }

.bg-inertia\/40 { background-color: rgba(149, 83, 233, 0.4); }

.bg-inertia\/5 { background-color: rgba(149, 83, 233, 0.05); }

.bg-inertia\/50 { background-color: rgba(149, 83, 233, 0.5); }

.bg-inertia\/60 { background-color: rgba(149, 83, 233, 0.6); }

.bg-inertia\/70 { background-color: rgba(149, 83, 233, 0.7); }

.bg-inertia\/75 { background-color: rgba(149, 83, 233, 0.75); }

.bg-inertia\/80 { background-color: rgba(149, 83, 233, 0.8); }

.bg-inertia\/90 { background-color: rgba(149, 83, 233, 0.9); }

.bg-inertia\/95 { background-color: rgba(149, 83, 233, 0.95); }

.bg-jetstream { --tw-bg-opacity: 1; background-color: rgb(104 117 245 / var=
(--tw-bg-opacity)); }

.bg-jetstream\/0 { background-color: rgba(104, 117, 245, 0); }

.bg-jetstream\/10 { background-color: rgba(104, 117, 245, 0.1); }

.bg-jetstream\/100 { background-color: rgb(104, 117, 245); }

.bg-jetstream\/20 { background-color: rgba(104, 117, 245, 0.2); }

.bg-jetstream\/25 { background-color: rgba(104, 117, 245, 0.25); }

.bg-jetstream\/30 { background-color: rgba(104, 117, 245, 0.3); }

.bg-jetstream\/40 { background-color: rgba(104, 117, 245, 0.4); }

.bg-jetstream\/5 { background-color: rgba(104, 117, 245, 0.05); }

.bg-jetstream\/50 { background-color: rgba(104, 117, 245, 0.5); }

.bg-jetstream\/60 { background-color: rgba(104, 117, 245, 0.6); }

.bg-jetstream\/70 { background-color: rgba(104, 117, 245, 0.7); }

.bg-jetstream\/75 { background-color: rgba(104, 117, 245, 0.75); }

.bg-jetstream\/80 { background-color: rgba(104, 117, 245, 0.8); }

.bg-jetstream\/90 { background-color: rgba(104, 117, 245, 0.9); }

.bg-jetstream\/95 { background-color: rgba(104, 117, 245, 0.95); }

.bg-livewire { --tw-bg-opacity: 1; background-color: rgb(251 112 169 / var(=
--tw-bg-opacity)); }

.bg-livewire\/0 { background-color: rgba(251, 112, 169, 0); }

.bg-livewire\/10 { background-color: rgba(251, 112, 169, 0.1); }

.bg-livewire\/100 { background-color: rgb(251, 112, 169); }

.bg-livewire\/20 { background-color: rgba(251, 112, 169, 0.2); }

.bg-livewire\/25 { background-color: rgba(251, 112, 169, 0.25); }

.bg-livewire\/30 { background-color: rgba(251, 112, 169, 0.3); }

.bg-livewire\/40 { background-color: rgba(251, 112, 169, 0.4); }

.bg-livewire\/5 { background-color: rgba(251, 112, 169, 0.05); }

.bg-livewire\/50 { background-color: rgba(251, 112, 169, 0.5); }

.bg-livewire\/60 { background-color: rgba(251, 112, 169, 0.6); }

.bg-livewire\/70 { background-color: rgba(251, 112, 169, 0.7); }

.bg-livewire\/75 { background-color: rgba(251, 112, 169, 0.75); }

.bg-livewire\/80 { background-color: rgba(251, 112, 169, 0.8); }

.bg-livewire\/90 { background-color: rgba(251, 112, 169, 0.9); }

.bg-livewire\/95 { background-color: rgba(251, 112, 169, 0.95); }

.bg-lumen { --tw-bg-opacity: 1; background-color: rgb(246 174 122 / var(--t=
w-bg-opacity)); }

.bg-lumen\/0 { background-color: rgba(246, 174, 122, 0); }

.bg-lumen\/10 { background-color: rgba(246, 174, 122, 0.1); }

.bg-lumen\/100 { background-color: rgb(246, 174, 122); }

.bg-lumen\/20 { background-color: rgba(246, 174, 122, 0.2); }

.bg-lumen\/25 { background-color: rgba(246, 174, 122, 0.25); }

.bg-lumen\/30 { background-color: rgba(246, 174, 122, 0.3); }

.bg-lumen\/40 { background-color: rgba(246, 174, 122, 0.4); }

.bg-lumen\/5 { background-color: rgba(246, 174, 122, 0.05); }

.bg-lumen\/50 { background-color: rgba(246, 174, 122, 0.5); }

.bg-lumen\/60 { background-color: rgba(246, 174, 122, 0.6); }

.bg-lumen\/70 { background-color: rgba(246, 174, 122, 0.7); }

.bg-lumen\/75 { background-color: rgba(246, 174, 122, 0.75); }

.bg-lumen\/80 { background-color: rgba(246, 174, 122, 0.8); }

.bg-lumen\/90 { background-color: rgba(246, 174, 122, 0.9); }

.bg-lumen\/95 { background-color: rgba(246, 174, 122, 0.95); }

.bg-mix { --tw-bg-opacity: 1; background-color: rgb(41 75 165 / var(--tw-bg=
-opacity)); }

.bg-mix\/0 { background-color: rgba(41, 75, 165, 0); }

.bg-mix\/10 { background-color: rgba(41, 75, 165, 0.1); }

.bg-mix\/100 { background-color: rgb(41, 75, 165); }

.bg-mix\/20 { background-color: rgba(41, 75, 165, 0.2); }

.bg-mix\/25 { background-color: rgba(41, 75, 165, 0.25); }

.bg-mix\/30 { background-color: rgba(41, 75, 165, 0.3); }

.bg-mix\/40 { background-color: rgba(41, 75, 165, 0.4); }

.bg-mix\/5 { background-color: rgba(41, 75, 165, 0.05); }

.bg-mix\/50 { background-color: rgba(41, 75, 165, 0.5); }

.bg-mix\/60 { background-color: rgba(41, 75, 165, 0.6); }

.bg-mix\/70 { background-color: rgba(41, 75, 165, 0.7); }

.bg-mix\/75 { background-color: rgba(41, 75, 165, 0.75); }

.bg-mix\/80 { background-color: rgba(41, 75, 165, 0.8); }

.bg-mix\/90 { background-color: rgba(41, 75, 165, 0.9); }

.bg-mix\/95 { background-color: rgba(41, 75, 165, 0.95); }

.bg-nova { --tw-bg-opacity: 1; background-color: rgb(64 153 222 / var(--tw-=
bg-opacity)); }

.bg-nova\/0 { background-color: rgba(64, 153, 222, 0); }

.bg-nova\/10 { background-color: rgba(64, 153, 222, 0.1); }

.bg-nova\/100 { background-color: rgb(64, 153, 222); }

.bg-nova\/20 { background-color: rgba(64, 153, 222, 0.2); }

.bg-nova\/25 { background-color: rgba(64, 153, 222, 0.25); }

.bg-nova\/30 { background-color: rgba(64, 153, 222, 0.3); }

.bg-nova\/40 { background-color: rgba(64, 153, 222, 0.4); }

.bg-nova\/5 { background-color: rgba(64, 153, 222, 0.05); }

.bg-nova\/50 { background-color: rgba(64, 153, 222, 0.5); }

.bg-nova\/60 { background-color: rgba(64, 153, 222, 0.6); }

.bg-nova\/70 { background-color: rgba(64, 153, 222, 0.7); }

.bg-nova\/75 { background-color: rgba(64, 153, 222, 0.75); }

.bg-nova\/80 { background-color: rgba(64, 153, 222, 0.8); }

.bg-nova\/90 { background-color: rgba(64, 153, 222, 0.9); }

.bg-nova\/95 { background-color: rgba(64, 153, 222, 0.95); }

.bg-octane { --tw-bg-opacity: 1; background-color: rgb(202 58 49 / var(--tw=
-bg-opacity)); }

.bg-octane\/0 { background-color: rgba(202, 58, 49, 0); }

.bg-octane\/10 { background-color: rgba(202, 58, 49, 0.1); }

.bg-octane\/100 { background-color: rgb(202, 58, 49); }

.bg-octane\/20 { background-color: rgba(202, 58, 49, 0.2); }

.bg-octane\/25 { background-color: rgba(202, 58, 49, 0.25); }

.bg-octane\/30 { background-color: rgba(202, 58, 49, 0.3); }

.bg-octane\/40 { background-color: rgba(202, 58, 49, 0.4); }

.bg-octane\/5 { background-color: rgba(202, 58, 49, 0.05); }

.bg-octane\/50 { background-color: rgba(202, 58, 49, 0.5); }

.bg-octane\/60 { background-color: rgba(202, 58, 49, 0.6); }

.bg-octane\/70 { background-color: rgba(202, 58, 49, 0.7); }

.bg-octane\/75 { background-color: rgba(202, 58, 49, 0.75); }

.bg-octane\/80 { background-color: rgba(202, 58, 49, 0.8); }

.bg-octane\/90 { background-color: rgba(202, 58, 49, 0.9); }

.bg-octane\/95 { background-color: rgba(202, 58, 49, 0.95); }

.bg-orange-600 { --tw-bg-opacity: 1; background-color: rgb(244 157 55 / var=
(--tw-bg-opacity)); }

.bg-passport { --tw-bg-opacity: 1; background-color: rgb(125 217 242 / var(=
--tw-bg-opacity)); }

.bg-passport\/0 { background-color: rgba(125, 217, 242, 0); }

.bg-passport\/10 { background-color: rgba(125, 217, 242, 0.1); }

.bg-passport\/100 { background-color: rgb(125, 217, 242); }

.bg-passport\/20 { background-color: rgba(125, 217, 242, 0.2); }

.bg-passport\/25 { background-color: rgba(125, 217, 242, 0.25); }

.bg-passport\/30 { background-color: rgba(125, 217, 242, 0.3); }

.bg-passport\/40 { background-color: rgba(125, 217, 242, 0.4); }

.bg-passport\/5 { background-color: rgba(125, 217, 242, 0.05); }

.bg-passport\/50 { background-color: rgba(125, 217, 242, 0.5); }

.bg-passport\/60 { background-color: rgba(125, 217, 242, 0.6); }

.bg-passport\/70 { background-color: rgba(125, 217, 242, 0.7); }

.bg-passport\/75 { background-color: rgba(125, 217, 242, 0.75); }

.bg-passport\/80 { background-color: rgba(125, 217, 242, 0.8); }

.bg-passport\/90 { background-color: rgba(125, 217, 242, 0.9); }

.bg-passport\/95 { background-color: rgba(125, 217, 242, 0.95); }

.bg-pennant { --tw-bg-opacity: 1; background-color: rgb(26 164 74 / var(--t=
w-bg-opacity)); }

.bg-pennant\/0 { background-color: rgba(26, 164, 74, 0); }

.bg-pennant\/10 { background-color: rgba(26, 164, 74, 0.1); }

.bg-pennant\/100 { background-color: rgb(26, 164, 74); }

.bg-pennant\/20 { background-color: rgba(26, 164, 74, 0.2); }

.bg-pennant\/25 { background-color: rgba(26, 164, 74, 0.25); }

.bg-pennant\/30 { background-color: rgba(26, 164, 74, 0.3); }

.bg-pennant\/40 { background-color: rgba(26, 164, 74, 0.4); }

.bg-pennant\/5 { background-color: rgba(26, 164, 74, 0.05); }

.bg-pennant\/50 { background-color: rgba(26, 164, 74, 0.5); }

.bg-pennant\/60 { background-color: rgba(26, 164, 74, 0.6); }

.bg-pennant\/70 { background-color: rgba(26, 164, 74, 0.7); }

.bg-pennant\/75 { background-color: rgba(26, 164, 74, 0.75); }

.bg-pennant\/80 { background-color: rgba(26, 164, 74, 0.8); }

.bg-pennant\/90 { background-color: rgba(26, 164, 74, 0.9); }

.bg-pennant\/95 { background-color: rgba(26, 164, 74, 0.95); }

.bg-pint { --tw-bg-opacity: 1; background-color: rgb(255 208 0 / var(--tw-b=
g-opacity)); }

.bg-pint\/0 { background-color: rgba(255, 208, 0, 0); }

.bg-pint\/10 { background-color: rgba(255, 208, 0, 0.1); }

.bg-pint\/100 { background-color: rgb(255, 208, 0); }

.bg-pint\/20 { background-color: rgba(255, 208, 0, 0.2); }

.bg-pint\/25 { background-color: rgba(255, 208, 0, 0.25); }

.bg-pint\/30 { background-color: rgba(255, 208, 0, 0.3); }

.bg-pint\/40 { background-color: rgba(255, 208, 0, 0.4); }

.bg-pint\/5 { background-color: rgba(255, 208, 0, 0.05); }

.bg-pint\/50 { background-color: rgba(255, 208, 0, 0.5); }

.bg-pint\/60 { background-color: rgba(255, 208, 0, 0.6); }

.bg-pint\/70 { background-color: rgba(255, 208, 0, 0.7); }

.bg-pint\/75 { background-color: rgba(255, 208, 0, 0.75); }

.bg-pint\/80 { background-color: rgba(255, 208, 0, 0.8); }

.bg-pint\/90 { background-color: rgba(255, 208, 0, 0.9); }

.bg-pint\/95 { background-color: rgba(255, 208, 0, 0.95); }

.bg-prompts { --tw-bg-opacity: 1; background-color: rgb(74 222 128 / var(--=
tw-bg-opacity)); }

.bg-prompts\/0 { background-color: rgba(74, 222, 128, 0); }

.bg-prompts\/10 { background-color: rgba(74, 222, 128, 0.1); }

.bg-prompts\/100 { background-color: rgb(74, 222, 128); }

.bg-prompts\/20 { background-color: rgba(74, 222, 128, 0.2); }

.bg-prompts\/25 { background-color: rgba(74, 222, 128, 0.25); }

.bg-prompts\/30 { background-color: rgba(74, 222, 128, 0.3); }

.bg-prompts\/40 { background-color: rgba(74, 222, 128, 0.4); }

.bg-prompts\/5 { background-color: rgba(74, 222, 128, 0.05); }

.bg-prompts\/50 { background-color: rgba(74, 222, 128, 0.5); }

.bg-prompts\/60 { background-color: rgba(74, 222, 128, 0.6); }

.bg-prompts\/70 { background-color: rgba(74, 222, 128, 0.7); }

.bg-prompts\/75 { background-color: rgba(74, 222, 128, 0.75); }

.bg-prompts\/80 { background-color: rgba(74, 222, 128, 0.8); }

.bg-prompts\/90 { background-color: rgba(74, 222, 128, 0.9); }

.bg-prompts\/95 { background-color: rgba(74, 222, 128, 0.95); }

.bg-purple-600 { --tw-bg-opacity: 1; background-color: rgb(131 56 236 / var=
(--tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(249 50 44 / var(--t=
w-bg-opacity)); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgb(235 68 50 / var(--t=
w-bg-opacity)); }

.bg-sail { --tw-bg-opacity: 1; background-color: rgb(56 189 247 / var(--tw-=
bg-opacity)); }

.bg-sail\/0 { background-color: rgba(56, 189, 247, 0); }

.bg-sail\/10 { background-color: rgba(56, 189, 247, 0.1); }

.bg-sail\/100 { background-color: rgb(56, 189, 247); }

.bg-sail\/20 { background-color: rgba(56, 189, 247, 0.2); }

.bg-sail\/25 { background-color: rgba(56, 189, 247, 0.25); }

.bg-sail\/30 { background-color: rgba(56, 189, 247, 0.3); }

.bg-sail\/40 { background-color: rgba(56, 189, 247, 0.4); }

.bg-sail\/5 { background-color: rgba(56, 189, 247, 0.05); }

.bg-sail\/50 { background-color: rgba(56, 189, 247, 0.5); }

.bg-sail\/60 { background-color: rgba(56, 189, 247, 0.6); }

.bg-sail\/70 { background-color: rgba(56, 189, 247, 0.7); }

.bg-sail\/75 { background-color: rgba(56, 189, 247, 0.75); }

.bg-sail\/80 { background-color: rgba(56, 189, 247, 0.8); }

.bg-sail\/90 { background-color: rgba(56, 189, 247, 0.9); }

.bg-sail\/95 { background-color: rgba(56, 189, 247, 0.95); }

.bg-sanctum { --tw-bg-opacity: 1; background-color: rgb(29 88 115 / var(--t=
w-bg-opacity)); }

.bg-sanctum\/0 { background-color: rgba(29, 88, 115, 0); }

.bg-sanctum\/10 { background-color: rgba(29, 88, 115, 0.1); }

.bg-sanctum\/100 { background-color: rgb(29, 88, 115); }

.bg-sanctum\/20 { background-color: rgba(29, 88, 115, 0.2); }

.bg-sanctum\/25 { background-color: rgba(29, 88, 115, 0.25); }

.bg-sanctum\/30 { background-color: rgba(29, 88, 115, 0.3); }

.bg-sanctum\/40 { background-color: rgba(29, 88, 115, 0.4); }

.bg-sanctum\/5 { background-color: rgba(29, 88, 115, 0.05); }

.bg-sanctum\/50 { background-color: rgba(29, 88, 115, 0.5); }

.bg-sanctum\/60 { background-color: rgba(29, 88, 115, 0.6); }

.bg-sanctum\/70 { background-color: rgba(29, 88, 115, 0.7); }

.bg-sanctum\/75 { background-color: rgba(29, 88, 115, 0.75); }

.bg-sanctum\/80 { background-color: rgba(29, 88, 115, 0.8); }

.bg-sanctum\/90 { background-color: rgba(29, 88, 115, 0.9); }

.bg-sanctum\/95 { background-color: rgba(29, 88, 115, 0.95); }

.bg-scout { --tw-bg-opacity: 1; background-color: rgb(245 93 92 / var(--tw-=
bg-opacity)); }

.bg-scout\/0 { background-color: rgba(245, 93, 92, 0); }

.bg-scout\/10 { background-color: rgba(245, 93, 92, 0.1); }

.bg-scout\/100 { background-color: rgb(245, 93, 92); }

.bg-scout\/20 { background-color: rgba(245, 93, 92, 0.2); }

.bg-scout\/25 { background-color: rgba(245, 93, 92, 0.25); }

.bg-scout\/30 { background-color: rgba(245, 93, 92, 0.3); }

.bg-scout\/40 { background-color: rgba(245, 93, 92, 0.4); }

.bg-scout\/5 { background-color: rgba(245, 93, 92, 0.05); }

.bg-scout\/50 { background-color: rgba(245, 93, 92, 0.5); }

.bg-scout\/60 { background-color: rgba(245, 93, 92, 0.6); }

.bg-scout\/70 { background-color: rgba(245, 93, 92, 0.7); }

.bg-scout\/75 { background-color: rgba(245, 93, 92, 0.75); }

.bg-scout\/80 { background-color: rgba(245, 93, 92, 0.8); }

.bg-scout\/90 { background-color: rgba(245, 93, 92, 0.9); }

.bg-scout\/95 { background-color: rgba(245, 93, 92, 0.95); }

.bg-socialite { --tw-bg-opacity: 1; background-color: rgb(227 148 186 / var=
(--tw-bg-opacity)); }

.bg-socialite\/0 { background-color: rgba(227, 148, 186, 0); }

.bg-socialite\/10 { background-color: rgba(227, 148, 186, 0.1); }

.bg-socialite\/100 { background-color: rgb(227, 148, 186); }

.bg-socialite\/20 { background-color: rgba(227, 148, 186, 0.2); }

.bg-socialite\/25 { background-color: rgba(227, 148, 186, 0.25); }

.bg-socialite\/30 { background-color: rgba(227, 148, 186, 0.3); }

.bg-socialite\/40 { background-color: rgba(227, 148, 186, 0.4); }

.bg-socialite\/5 { background-color: rgba(227, 148, 186, 0.05); }

.bg-socialite\/50 { background-color: rgba(227, 148, 186, 0.5); }

.bg-socialite\/60 { background-color: rgba(227, 148, 186, 0.6); }

.bg-socialite\/70 { background-color: rgba(227, 148, 186, 0.7); }

.bg-socialite\/75 { background-color: rgba(227, 148, 186, 0.75); }

.bg-socialite\/80 { background-color: rgba(227, 148, 186, 0.8); }

.bg-socialite\/90 { background-color: rgba(227, 148, 186, 0.9); }

.bg-socialite\/95 { background-color: rgba(227, 148, 186, 0.95); }

.bg-spark { --tw-bg-opacity: 1; background-color: rgb(155 139 251 / var(--t=
w-bg-opacity)); }

.bg-spark\/0 { background-color: rgba(155, 139, 251, 0); }

.bg-spark\/10 { background-color: rgba(155, 139, 251, 0.1); }

.bg-spark\/100 { background-color: rgb(155, 139, 251); }

.bg-spark\/20 { background-color: rgba(155, 139, 251, 0.2); }

.bg-spark\/25 { background-color: rgba(155, 139, 251, 0.25); }

.bg-spark\/30 { background-color: rgba(155, 139, 251, 0.3); }

.bg-spark\/40 { background-color: rgba(155, 139, 251, 0.4); }

.bg-spark\/5 { background-color: rgba(155, 139, 251, 0.05); }

.bg-spark\/50 { background-color: rgba(155, 139, 251, 0.5); }

.bg-spark\/60 { background-color: rgba(155, 139, 251, 0.6); }

.bg-spark\/70 { background-color: rgba(155, 139, 251, 0.7); }

.bg-spark\/75 { background-color: rgba(155, 139, 251, 0.75); }

.bg-spark\/80 { background-color: rgba(155, 139, 251, 0.8); }

.bg-spark\/90 { background-color: rgba(155, 139, 251, 0.9); }

.bg-spark\/95 { background-color: rgba(155, 139, 251, 0.95); }

.bg-telescope { --tw-bg-opacity: 1; background-color: rgb(64 64 200 / var(-=
-tw-bg-opacity)); }

.bg-telescope\/0 { background-color: rgba(64, 64, 200, 0); }

.bg-telescope\/10 { background-color: rgba(64, 64, 200, 0.1); }

.bg-telescope\/100 { background-color: rgb(64, 64, 200); }

.bg-telescope\/20 { background-color: rgba(64, 64, 200, 0.2); }

.bg-telescope\/25 { background-color: rgba(64, 64, 200, 0.25); }

.bg-telescope\/30 { background-color: rgba(64, 64, 200, 0.3); }

.bg-telescope\/40 { background-color: rgba(64, 64, 200, 0.4); }

.bg-telescope\/5 { background-color: rgba(64, 64, 200, 0.05); }

.bg-telescope\/50 { background-color: rgba(64, 64, 200, 0.5); }

.bg-telescope\/60 { background-color: rgba(64, 64, 200, 0.6); }

.bg-telescope\/70 { background-color: rgba(64, 64, 200, 0.7); }

.bg-telescope\/75 { background-color: rgba(64, 64, 200, 0.75); }

.bg-telescope\/80 { background-color: rgba(64, 64, 200, 0.8); }

.bg-telescope\/90 { background-color: rgba(64, 64, 200, 0.9); }

.bg-telescope\/95 { background-color: rgba(64, 64, 200, 0.95); }

.bg-tinker { --tw-bg-opacity: 1; background-color: rgb(236 118 88 / var(--t=
w-bg-opacity)); }

.bg-tinker\/0 { background-color: rgba(236, 118, 88, 0); }

.bg-tinker\/10 { background-color: rgba(236, 118, 88, 0.1); }

.bg-tinker\/100 { background-color: rgb(236, 118, 88); }

.bg-tinker\/20 { background-color: rgba(236, 118, 88, 0.2); }

.bg-tinker\/25 { background-color: rgba(236, 118, 88, 0.25); }

.bg-tinker\/30 { background-color: rgba(236, 118, 88, 0.3); }

.bg-tinker\/40 { background-color: rgba(236, 118, 88, 0.4); }

.bg-tinker\/5 { background-color: rgba(236, 118, 88, 0.05); }

.bg-tinker\/50 { background-color: rgba(236, 118, 88, 0.5); }

.bg-tinker\/60 { background-color: rgba(236, 118, 88, 0.6); }

.bg-tinker\/70 { background-color: rgba(236, 118, 88, 0.7); }

.bg-tinker\/75 { background-color: rgba(236, 118, 88, 0.75); }

.bg-tinker\/80 { background-color: rgba(236, 118, 88, 0.8); }

.bg-tinker\/90 { background-color: rgba(236, 118, 88, 0.9); }

.bg-tinker\/95 { background-color: rgba(236, 118, 88, 0.95); }

.bg-valet { --tw-bg-opacity: 1; background-color: rgb(94 71 205 / var(--tw-=
bg-opacity)); }

.bg-valet\/0 { background-color: rgba(94, 71, 205, 0); }

.bg-valet\/10 { background-color: rgba(94, 71, 205, 0.1); }

.bg-valet\/100 { background-color: rgb(94, 71, 205); }

.bg-valet\/20 { background-color: rgba(94, 71, 205, 0.2); }

.bg-valet\/25 { background-color: rgba(94, 71, 205, 0.25); }

.bg-valet\/30 { background-color: rgba(94, 71, 205, 0.3); }

.bg-valet\/40 { background-color: rgba(94, 71, 205, 0.4); }

.bg-valet\/5 { background-color: rgba(94, 71, 205, 0.05); }

.bg-valet\/50 { background-color: rgba(94, 71, 205, 0.5); }

.bg-valet\/60 { background-color: rgba(94, 71, 205, 0.6); }

.bg-valet\/70 { background-color: rgba(94, 71, 205, 0.7); }

.bg-valet\/75 { background-color: rgba(94, 71, 205, 0.75); }

.bg-valet\/80 { background-color: rgba(94, 71, 205, 0.8); }

.bg-valet\/90 { background-color: rgba(94, 71, 205, 0.9); }

.bg-valet\/95 { background-color: rgba(94, 71, 205, 0.95); }

.bg-vapor { --tw-bg-opacity: 1; background-color: rgb(37 196 242 / var(--tw=
-bg-opacity)); }

.bg-vapor\/0 { background-color: rgba(37, 196, 242, 0); }

.bg-vapor\/10 { background-color: rgba(37, 196, 242, 0.1); }

.bg-vapor\/100 { background-color: rgb(37, 196, 242); }

.bg-vapor\/20 { background-color: rgba(37, 196, 242, 0.2); }

.bg-vapor\/25 { background-color: rgba(37, 196, 242, 0.25); }

.bg-vapor\/30 { background-color: rgba(37, 196, 242, 0.3); }

.bg-vapor\/40 { background-color: rgba(37, 196, 242, 0.4); }

.bg-vapor\/5 { background-color: rgba(37, 196, 242, 0.05); }

.bg-vapor\/50 { background-color: rgba(37, 196, 242, 0.5); }

.bg-vapor\/60 { background-color: rgba(37, 196, 242, 0.6); }

.bg-vapor\/70 { background-color: rgba(37, 196, 242, 0.7); }

.bg-vapor\/75 { background-color: rgba(37, 196, 242, 0.75); }

.bg-vapor\/80 { background-color: rgba(37, 196, 242, 0.8); }

.bg-vapor\/90 { background-color: rgba(37, 196, 242, 0.9); }

.bg-vapor\/95 { background-color: rgba(37, 196, 242, 0.95); }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--t=
w-bg-opacity)); }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.from-\[rgba\(255\,255\,255\,\.2\)\] { --tw-gradient-from: rgba(255,255,255=
,.2) var(--tw-gradient-from-position); --tw-gradient-from-position: ; --tw-=
gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-from-position); --tw-=
gradient-to-position: ; --tw-gradient-stops: var(--tw-gradient-from), var(-=
-tw-gradient-to); }

.from-gray-100 { --tw-gradient-from: #f5f5fa var(--tw-gradient-from-positio=
n); --tw-gradient-from-position: ; --tw-gradient-to: rgb(245 245 250 / 0) v=
ar(--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient=
-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-red-500 { --tw-gradient-from: #F9322C var(--tw-gradient-from-position=
); --tw-gradient-from-position: ; --tw-gradient-to: rgb(249 50 44 / 0) var(=
--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-st=
ops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-from-position: ; --tw-gradient-to: rgb(255 255 255 / 0) var(--t=
w-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-stops=
: var(--tw-gradient-from), var(--tw-gradient-to); }

.to-\[rgba\(255\,255\,255\,0\)\] { --tw-gradient-to: rgba(255,255,255,0) va=
r(--tw-gradient-to-position); --tw-gradient-to-position: ; }

.to-red-600 { --tw-gradient-to: #EB4432 var(--tw-gradient-to-position); --t=
w-gradient-to-position: ; }

.to-white { --tw-gradient-to: #fff var(--tw-gradient-to-position); --tw-gra=
dient-to-position: ; }

.fill-current { fill: currentcolor; }

.fill-gray-700 { fill: rgb(86, 84, 84); }

.fill-gray-900 { fill: rgb(35, 35, 35); }

.fill-purple-600 { fill: rgb(131, 56, 236); }

.stroke-gray-800 { stroke: rgb(34, 34, 34); }

.stroke-red-500 { stroke: rgb(249, 50, 44); }

.object-cover { object-fit: cover; }

.object-center { object-position: center center; }

.p-10 { padding: 2.5rem; }

.p-12 { padding: 3rem; }

.p-2 { padding: 0.5rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-8 { padding: 2rem; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; }

.py-12 { padding-top: 3rem; padding-bottom: 3rem; }

.py-16 { padding-top: 4rem; padding-bottom: 4rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-16 { padding-bottom: 4rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-24 { padding-bottom: 6rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pr-3 { padding-right: 0.75rem; }

.pt-0 { padding-top: 0px; }

.pt-12 { padding-top: 3rem; }

.pt-16 { padding-top: 4rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-4 { padding-top: 1rem; }

.pt-48 { padding-top: 12rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[4\.2rem\] { padding-top: 4.2rem; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.font-sans { font-family: scandia-web, ui-sans-serif, system-ui, -apple-sys=
tem, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto=
 Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol=
", "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-5xl { font-size: 3rem; line-height: 1; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.lowercase { text-transform: lowercase; }

.italic { font-style: italic; }

.not-italic { font-style: normal; }

.leading-4 { line-height: 1rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-8 { line-height: 2rem; }

.leading-loose { line-height: 2; }

.leading-relaxed { line-height: 1.625; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.text-\[\#d97707\] { --tw-text-opacity: 1; color: rgb(217 119 7 / var(--tw-=
text-opacity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-te=
xt-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(181 181 189 / var(--tw-te=
xt-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(147 147 158 / var(--tw-te=
xt-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(119 119 119 / var(--tw-te=
xt-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgb(86 84 84 / var(--tw-text-=
opacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(34 34 34 / var(--tw-text-=
opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(35 35 35 / var(--tw-text-=
opacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgb(34 197 94 / var(--tw-tex=
t-opacity)); }

.text-jetstream { --tw-text-opacity: 1; color: rgb(104 117 245 / var(--tw-t=
ext-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(249 50 44 / var(--tw-text-=
opacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-=
opacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgb(236 14 0 / var(--tw-text-o=
pacity)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-=
opacity)); }

.underline { text-decoration-line: underline; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-gray-900::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(35 35 35 / var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-25 { opacity: 0.25; }

.opacity-75 { opacity: 0.75; }

.opacity-\[\.15\] { opacity: 0.15; }

.\!shadow-\[64px_64px_100px_-20px_theme\(colors\.red\.400\)\] { --tw-shadow=
: 64px 64px 100px -20px #f87171 !important; --tw-shadow-colored: 64px 64px =
100px -20px var(--tw-shadow-color) !important; box-shadow: var(--tw-ring-of=
fset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow) !=
important; }

.shadow-\[32px_32px_40px_-20px_theme\(colors\.gray\.400\)\] { --tw-shadow: =
32px 32px 40px -20px #B5B5BD; --tw-shadow-colored: 32px 32px 40px -20px var=
(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),va=
r(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 20px 30px -16px rgba(9, 9, 16, .2); --tw-shadow=
-colored: 0 20px 30px -16px var(--tw-shadow-color); box-shadow: var(--tw-ri=
ng-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shad=
ow); }

.shadow-sm { --tw-shadow: 0 10px 15px -8px rgba(9, 9, 16, .1); --tw-shadow-=
colored: 0 10px 15px -8px var(--tw-shadow-color); box-shadow: var(--tw-ring=
-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow=
); }

.shadow-xl { --tw-shadow: 0 10px 20px 0 rgba(9, 9, 16, .15); --tw-shadow-co=
lored: 0 10px 20px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offs=
et-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow, 0 0 #0000); }

.ring-red-500 { --tw-ring-opacity: 1; --tw-ring-color: rgb(249 50 44 / var(=
--tw-ring-opacity)); }

.ring-red-600 { --tw-ring-opacity: 1; --tw-ring-color: rgb(235 68 50 / var(=
--tw-ring-opacity)); }

.ring-offset-1 { --tw-ring-offset-width: 1px; }

.ring-offset-red-500 { --tw-ring-offset-color: #F9322C; }

.blur { --tw-blur: blur(8px); filter: var(--tw-blur) var(--tw-brightness) v=
ar(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)=
 var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.grayscale { --tw-grayscale: grayscale(100%); filter: var(--tw-blur) var(--=
tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) =
var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); =
}

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.transition { transition-property: color, background-color, border-color, t=
ext-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,=
 backdrop-filter, -webkit-backdrop-filter; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-all { transition-property: all; transition-timing-function: cub=
ic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-transform { transition-property: transform; transition-timing-f=
unction: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

:is(.dark .docs_main h1), :is(.dark .docs_main h2), :is(.dark .docs_main h3=
), :is(.dark .docs_main h4), :is(.dark .docs_main h5), :is(.dark .docs_main=
 h6), :is(.dark .docs_main h4 a), :is(.dark .docs_main h3 a), :is(.dark .do=
cs_main h2 a) { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-tex=
t-opacity)); }

:is(.dark .docs_main p), :is(.dark .docs_main ul:not(:first-of-type) li), :=
is(.dark .docs_main .content-list ul li), :is(.dark .docs_main #software-li=
st), :is(.dark .docs_main #valet-support) { --tw-text-opacity: 1; color: rg=
b(181 181 189 / var(--tw-text-opacity)); }

:is(.dark .docs_main h1 + ul li a) { --tw-text-opacity: 1; color: rgb(215 2=
15 220 / var(--tw-text-opacity)); }

:is(.dark .docs_main p a), :is(.dark .docs_main ul a), :is(.dark .docs_main=
 ol a) { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-opacity=
)); }

:is(.dark .docs_main table th) { --tw-text-opacity: 1; color: rgb(231 232 2=
42 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td) { --tw-text-opacity: 1; color: rgb(181 181 1=
89 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td.support-policy-highlight) { --tw-text-opacity=
: 1; color: rgb(0 0 0 / var(--tw-text-opacity)); }

:is(.dark .docs_sidebar ul li h2), :is(.dark .docs_sidebar ul li a) { --tw-=
text-opacity: 1; color: rgb(181 181 189 / var(--tw-text-opacity)); }

.dark .docs_main h4 a::before, .dark .docs_main h3 a::before, .dark .docs_m=
ain h2 a::before { opacity: 1; }

:is(.dark #carbonads) { --tw-bg-opacity: 1; background-color: rgb(37 42 55 =
/ var(--tw-bg-opacity)); }

:is(.dark #carbonads .carbon-text) { --tw-text-opacity: 1; color: rgb(181 1=
81 189 / var(--tw-text-opacity)); }

:is(.dark #carbonads .carbon-poweredby) { --tw-text-opacity: 1; color: rgb(=
147 147 158 / var(--tw-text-opacity)); }

#header__sun, #header__moon, #header__indeterminate { display: none; }

html[color-theme=3D"dark"] #header__moon, html[color-theme=3D"light"] #head=
er__sun, html[color-theme=3D"system"] #header__indeterminate { display: blo=
ck; }

[x-cloak] { display: none !important; }

.bg-radial-gradient { background-image: radial-gradient(50% 50% at 50% 50%,=
 rgb(235, 68, 50) 0%, rgba(255, 255, 255, 0) 100%); }

.partners_body a { color: rgb(235, 68, 50); text-decoration: underline; }

.version-colors { margin-bottom: 0.25rem; }

:is(.dark .version-colors) { --tw-text-opacity: 1; color: rgb(181 181 189 /=
 var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .version-colors { display: flex; }
}

.version-colors .color-box { margin-right: 0.5rem; height: 0.75rem; width: =
0.75rem; }

.version-colors div.end-of-life { margin-right: 1rem; display: flex; align-=
items: center; }

.version-colors div.end-of-life div:first-child { --tw-bg-opacity: 1; backg=
round-color: rgb(249 50 44 / var(--tw-bg-opacity)); }

.version-colors div.security-fixes { display: flex; align-items: center; }

.version-colors div.security-fixes div:first-child { --tw-bg-opacity: 1; ba=
ckground-color: rgb(244 157 55 / var(--tw-bg-opacity)); }

.even\:-translate-y-1\/2:nth-child(2n) { --tw-translate-y: -50%; transform:=
 translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rot=
ate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-=
x)) scaleY(var(--tw-scale-y)); }

.focus-within\:border-gray-600:focus-within { --tw-border-opacity: 1; borde=
r-color: rgb(119 119 119 / var(--tw-border-opacity)); }

.hover\:border-gray-300:hover { --tw-border-opacity: 1; border-color: rgb(2=
15 215 220 / var(--tw-border-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(251 25=
1 253 / var(--tw-bg-opacity)); }

.hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgb(255 255 =
255 / var(--tw-bg-opacity)); }

.hover\:text-gray-500:hover { --tw-text-opacity: 1; color: rgb(147 147 158 =
/ var(--tw-text-opacity)); }

.hover\:text-gray-600:hover { --tw-text-opacity: 1; color: rgb(119 119 119 =
/ var(--tw-text-opacity)); }

.hover\:no-underline:hover { text-decoration-line: none; }

.hover\:grayscale-0:hover { --tw-grayscale: grayscale(0); filter: var(--tw-=
blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-=
hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-dr=
op-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.disabled\:text-gray-200:disabled { --tw-text-opacity: 1; color: rgb(231 23=
2 242 / var(--tw-text-opacity)); }

.group:hover .group-hover\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:hover .group-hover\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

:is(.dark .dark\:block) { display: block; }

:is(.dark .dark\:inline-block) { display: inline-block; }

:is(.dark .dark\:hidden) { display: none; }

:is(.dark .dark\:border-dark-500) { --tw-border-opacity: 1; border-color: r=
gb(57 64 86 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-400) { --tw-border-opacity: 1; border-color: r=
gb(181 181 189 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-700) { --tw-border-opacity: 1; border-color: r=
gb(86 84 84 / var(--tw-border-opacity)); }

:is(.dark .dark\:bg-dark-600) { --tw-bg-opacity: 1; background-color: rgb(3=
7 42 55 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-dark-700) { --tw-bg-opacity: 1; background-color: rgb(2=
3 25 35 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-gray-800) { --tw-bg-opacity: 1; background-color: rgb(3=
4 34 34 / var(--tw-bg-opacity)); }

:is(.dark .dark\:from-dark-800) { --tw-gradient-from: #12141C var(--tw-grad=
ient-from-position); --tw-gradient-from-position: ; --tw-gradient-to: rgb(1=
8 20 28 / 0) var(--tw-gradient-from-position); --tw-gradient-to-position: ;=
 --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

:is(.dark .dark\:to-dark-700) { --tw-gradient-to: #171923 var(--tw-gradient=
-to-position); --tw-gradient-to-position: ; }

:is(.dark .dark\:text-gray-200) { --tw-text-opacity: 1; color: rgb(231 232 =
242 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-400) { --tw-text-opacity: 1; color: rgb(181 181 =
189 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-500) { --tw-text-opacity: 1; color: rgb(147 147 =
158 / var(--tw-text-opacity)); }

:is(.dark .dark\:placeholder-gray-500)::placeholder { --tw-placeholder-opac=
ity: 1; color: rgb(147 147 158 / var(--tw-placeholder-opacity)); }

:is(.dark .dark\:hover\:text-gray-400:hover) { --tw-text-opacity: 1; color:=
 rgb(181 181 189 / var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .sm\:left-\[12\%\] { left: 12%; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-12 { margin-top: 3rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:hidden { display: none; }
  .sm\:h-\[500px\] { height: 500px; }
  .sm\:w-auto { width: auto; }
  .sm\:max-w-5xl { max-width: 64rem; }
  .sm\:max-w-\[480px\] { max-width: 480px; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:max-w-xl { max-width: 36rem; }
  .sm\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .sm\:columns-2 { columns: 2; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:justify-center { justify-content: center; }
  .sm\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .sm\:py-12 { padding-top: 3rem; padding-bottom: 3rem; }
  .sm\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .sm\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-5xl { font-size: 3rem; line-height: 1; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
}

@media (min-width: 768px) {
  .md\:absolute { position: absolute; }
  .md\:inset-y-0 { top: 0px; bottom: 0px; }
  .md\:bottom-64 { bottom: 16rem; }
  .md\:left-0 { left: 0px; }
  .md\:left-1\/2 { left: 50%; }
  .md\:left-2 { left: 0.5rem; }
  .md\:left-\[12\%\] { left: 12%; }
  .md\:right-1\/2 { right: 50%; }
  .md\:right-1\/4 { right: 25%; }
  .md\:right-\[12\%\] { right: 12%; }
  .md\:right-auto { right: auto; }
  .md\:top-48 { top: 12rem; }
  .md\:top-auto { top: auto; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:col-span-3 { grid-column: span 3 / span 3; }
  .md\:-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }
  .md\:-mx-3 { margin-left: -0.75rem; margin-right: -0.75rem; }
  .md\:ml-auto { margin-left: auto; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-12 { margin-top: 3rem; }
  .md\:mt-16 { margin-top: 4rem; }
  .md\:mt-24 { margin-top: 6rem; }
  .md\:mt-6 { margin-top: 1.5rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:block { display: block; }
  .md\:inline { display: inline; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:w-3\/4 { width: 75%; }
  .md\:w-full { width: 100%; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .md\:scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }
  .md\:transform { transform: translate(var(--tw-translate-x),var(--tw-tran=
slate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-sk=
ew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .md\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .md\:items-end { align-items: flex-end; }
  .md\:items-center { align-items: center; }
  .md\:gap-12 { gap: 3rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-8 { column-gap: 2rem; }
  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: =
0; margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse))); margin-bott=
om: calc(0px * var(--tw-space-y-reverse)); }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:p-8 { padding: 2rem; }
  .md\:py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .md\:pr-0 { padding-right: 0px; }
  .md\:pt-12 { padding-top: 3rem; }
  .md\:pt-24 { padding-top: 6rem; }
  .md\:pt-32 { padding-top: 8rem; }
  .md\:pt-48 { padding-top: 12rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-9 { line-height: 2.25rem; }
  .md\:leading-tight { line-height: 1.25; }
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:sticky { position: sticky; }
  .lg\:bottom-12 { bottom: 3rem; }
  .lg\:bottom-64 { bottom: 16rem; }
  .lg\:left-1\/2 { left: 50%; }
  .lg\:left-1\/3 { left: 33.3333%; }
  .lg\:left-\[12\%\] { left: 12%; }
  .lg\:right-auto { right: auto; }
  .lg\:top-2\/3 { top: 66.6667%; }
  .lg\:top-auto { top: auto; }
  .lg\:order-last { order: 9999; }
  .lg\:col-span-2 { grid-column: span 2 / span 2; }
  .lg\:col-span-3 { grid-column: span 3 / span 3; }
  .lg\:col-span-4 { grid-column: span 4 / span 4; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:ml-4 { margin-left: 1rem; }
  .lg\:ml-6 { margin-left: 1.5rem; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:mt-10 { margin-top: 2.5rem; }
  .lg\:mt-24 { margin-top: 6rem; }
  .lg\:mt-4 { margin-top: 1rem; }
  .lg\:mt-8 { margin-top: 2rem; }
  .lg\:block { display: block; }
  .lg\:inline { display: inline; }
  .lg\:flex { display: flex; }
  .lg\:inline-flex { display: inline-flex; }
  .lg\:grid { display: grid; }
  .lg\:hidden { display: none; }
  .lg\:h-12 { height: 3rem; }
  .lg\:h-6 { height: 1.5rem; }
  .lg\:h-8 { height: 2rem; }
  .lg\:h-\[550px\] { height: 550px; }
  .lg\:h-screen { height: 100vh; }
  .lg\:w-12 { width: 3rem; }
  .lg\:w-40 { width: 10rem; }
  .lg\:w-80 { width: 20rem; }
  .lg\:w-\[454px\] { width: 454px; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-xs { max-width: 20rem; }
  .lg\:shrink-0 { flex-shrink: 0; }
  .lg\:translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--=
tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--=
tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--=
tw-scale-y)); }
  .lg\:-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:-rotate-3 { --tw-rotate: -3deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:rotate-1 { --tw-rotate: 1deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:columns-3 { columns: 3; }
  .lg\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .lg\:flex-row { flex-direction: row; }
  .lg\:flex-row-reverse { flex-direction: row-reverse; }
  .lg\:flex-col { flex-direction: column; }
  .lg\:items-start { align-items: flex-start; }
  .lg\:items-end { align-items: flex-end; }
  .lg\:items-center { align-items: center; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-end { justify-content: flex-end; }
  .lg\:justify-center { justify-content: center; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-12 { gap: 3rem; }
  .lg\:gap-6 { gap: 1.5rem; }
  .lg\:gap-8 { gap: 2rem; }
  .lg\:divide-x-0 > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse=
: 0; border-right-width: calc(0px * var(--tw-divide-x-reverse)); border-lef=
t-width: calc(0px * calc(1 - var(--tw-divide-x-reverse))); }
  .lg\:divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: =
0; border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse))); bord=
er-bottom-width: calc(1px * var(--tw-divide-y-reverse)); }
  .lg\:overflow-hidden { overflow: hidden; }
  .lg\:overflow-y-auto { overflow-y: auto; }
  .lg\:overflow-x-visible { overflow-x: visible; }
  .lg\:overscroll-y-contain { overscroll-behavior-y: contain; }
  .lg\:border-\[16px\] { border-width: 16px; }
  .lg\:border-b-0 { border-bottom-width: 0px; }
  .lg\:border-r { border-right-width: 1px; }
  .lg\:border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50=
 / var(--tw-border-opacity)); }
  .lg\:bg-transparent { background-color: transparent; }
  .lg\:bg-gradient-to-b { background-image: linear-gradient(to bottom,var(-=
-tw-gradient-stops)); }
  .lg\:bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw=
-gradient-stops)); }
  .lg\:px-12 { padding-left: 3rem; padding-right: 3rem; }
  .lg\:px-24 { padding-left: 6rem; padding-right: 6rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .lg\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .lg\:py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
  .lg\:pb-64 { padding-bottom: 16rem; }
  .lg\:pl-12 { padding-left: 3rem; }
  .lg\:pt-16 { padding-top: 4rem; }
  .lg\:pt-36 { padding-top: 9rem; }
  .lg\:pt-48 { padding-top: 12rem; }
  .lg\:pt-64 { padding-top: 16rem; }
  .lg\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .lg\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .lg\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .lg\:leading-10 { line-height: 2.5rem; }
}

@media (min-width: 1280px) {
  .xl\:left-16 { left: 4rem; }
  .xl\:top-3\/4 { top: 75%; }
  .xl\:col-span-5 { grid-column: span 5 / span 5; }
  .xl\:col-span-7 { grid-column: span 7 / span 7; }
  .xl\:w-80 { width: 20rem; }
  .xl\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .xl\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); =
}
  .xl\:gap-10 { gap: 2.5rem; }
  .xl\:gap-16 { gap: 4rem; }
  .xl\:p-16 { padding: 4rem; }
  .xl\:px-0 { padding-left: 0px; padding-right: 0px; }
  .xl\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:pb-28 { padding-bottom: 7rem; }
  .xl\:pr-8 { padding-right: 2rem; }
  .xl\:pt-56 { padding-top: 14rem; }
  .xl\:text-6xl { font-size: 3.75rem; line-height: 1; }
}

@media (min-width: 1536px) {
  .\32 xl\:left-32 { left: 8rem; }
  .\32 xl\:w-full { width: 100%; }
  .\32 xl\:max-w-lg { max-width: 32rem; }
}

.\[\&_a\]\:text-red-600 a { --tw-text-opacity: 1; color: rgb(235 68 50 / va=
r(--tw-text-opacity)); }

.\[\&_a\]\:underline a { text-decoration-line: underline; }

.hover\:\[\&_a\]\:no-underline a:hover { text-decoration-line: none; }

.\[\&_pre\]\:bg-\[\#161414\] pre { --tw-bg-opacity: 1; background-color: rg=
b(22 20 20 / var(--tw-bg-opacity)); }

.\[\&_pre\]\:p-2 pre { padding: 0.5rem; }

.\[\&_pre\]\:leading-8 pre { line-height: 2rem; }

.\[\&_pre_code\.torchlight\]\:\!bg-\[\#161414\] pre code.torchlight { --tw-=
bg-opacity: 1 !important; background-color: rgb(22 20 20 / var(--tw-bg-opac=
ity)) !important; }

.\[\&_strong\]\:font-medium strong { font-weight: 500; }

.\[\&_ul\]\:ml-4 ul { margin-left: 1rem; }

.\[\&_ul\]\:list-disc ul { list-style-type: disc; }
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/active_marker.min.svg

<svg width=3D"8" height=3D"8" viewBox=3D"0 0 8 8" xmlns=3D"http://www.w3.or=
g/2000/svg"><title>active_marker</title><path d=3D"M4 0l3.464 2v4L4 8 .536 =
6V2z" fill=3D"#FF2D20" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/ul_marker.min.svg

<svg width=3D"10" height=3D"11" viewBox=3D"0 0 10 11" xmlns=3D"http://www.w=
3.org/2000/svg"><title>Polygon</title><path d=3D"M5.036 1.965l-3.492 1.94v3=
.88l3.492 1.94 3.492-1.94v-3.88l-3.492-1.94zm0-1.12l4.5 2.5v5l-4.5 2.5-4.5-=
2.5v-5l4.5-2.5z" fill=3D"#FF2D20" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/callouts/exclamation.min.svg

<svg width=3D"6" height=3D"35" viewBox=3D"0 0 6 35" xmlns=3D"http://www.w3.=
org/2000/svg"><title>exclamation</title><path d=3D"M0 29h6v6H0v-6zM0 0h6v24=
H0V0z" fill=3D"#FFF" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--YAhr6Uyvek0cw07pF8pYAG7U1DHfa2BrXyYVtja3RN------
