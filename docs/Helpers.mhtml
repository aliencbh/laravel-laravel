From: <Saved by Blink>
Snapshot-Content-Location: https://laravel.com/docs/10.x/helpers#available-methods
Subject: Helpers - Laravel 10.x - The PHP Framework For Web Artisans
Date: Thu, 2 Nov 2023 20:26:45 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----"


------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: text/html
Content-ID: <frame-40A822B76B3F3D2E586DB946270667E8@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/docs/10.x/helpers#available-methods

<!DOCTYPE html><html lang=3D"en" data-theme=3D"light" color-theme=3D"system=
"><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DU=
TF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-383ed792-2=
cad-4d9e-b822-8bfcc41839f2@mhtml.blink" /><link rel=3D"stylesheet" type=3D"=
text/css" href=3D"cid:css-e2516112-be93-4e17-9c5a-01ae2f932a25@mhtml.blink"=
 />
   =20

        <title>Helpers - Laravel 10.x - The PHP Framework For Web Artisans<=
/title>
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1, viewport-fit=3Dcover">

        <link rel=3D"canonical" href=3D"https://laravel.com/docs/10.x/helpe=
rs">
   =20
    <!-- Primary Meta Tags -->
    <meta name=3D"title" content=3D"Laravel - The PHP Framework For Web Art=
isans">
    <meta name=3D"description" content=3D"Laravel is a PHP web application =
framework with expressive, elegant syntax. We=E2=80=99ve already laid the f=
oundation =E2=80=94 freeing you to create without sweating the small things=
.">

    <!-- Open Graph / Facebook -->
    <meta property=3D"og:type" content=3D"website">
    <meta property=3D"og:url" content=3D"https://laravel.com/">
    <meta property=3D"og:title" content=3D"Laravel - The PHP Framework For =
Web Artisans">
    <meta property=3D"og:description" content=3D"Laravel is a PHP web appli=
cation framework with expressive, elegant syntax. We=E2=80=99ve already lai=
d the foundation =E2=80=94 freeing you to create without sweating the small=
 things.">
    <meta property=3D"og:image" content=3D"https://laravel.com/img/og-image=
.jpg">

    <!-- Twitter -->
    <meta property=3D"twitter:card" content=3D"summary_large_image">
    <meta property=3D"twitter:url" content=3D"https://laravel.com/">
    <meta property=3D"twitter:title" content=3D"Laravel - The PHP Framework=
 For Web Artisans">
    <meta property=3D"twitter:description" content=3D"Laravel is a PHP web =
application framework with expressive, elegant syntax. We=E2=80=99ve alread=
y laid the foundation =E2=80=94 freeing you to create without sweating the =
small things.">
    <meta property=3D"twitter:image" content=3D"https://laravel.com/img/og-=
image.jpg">

    <!-- Favicon -->
    <link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://larave=
l.com/img/favicon/apple-touch-icon.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://l=
aravel.com/img/favicon/favicon-32x32.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"16x16" href=3D"https://l=
aravel.com/img/favicon/favicon-16x16.png">
    <link rel=3D"manifest" href=3D"https://laravel.com/img/favicon/site.web=
manifest">
    <link rel=3D"mask-icon" href=3D"https://laravel.com/img/favicon/safari-=
pinned-tab.svg" color=3D"#ff2d20">
    <link rel=3D"shortcut icon" href=3D"https://laravel.com/img/favicon/fav=
icon.ico">
    <meta name=3D"msapplication-TileColor" content=3D"#ff2d20">
    <meta name=3D"msapplication-config" content=3D"/img/favicon/browserconf=
ig.xml">
    <meta name=3D"theme-color" content=3D"#ffffff">
    <meta name=3D"color-scheme" content=3D"light">

    <link rel=3D"preconnect" href=3D"https://e3mirnpjh5-dsn.algolia.net/" c=
rossorigin=3D"">

    <link rel=3D"stylesheet" href=3D"https://use.typekit.net/ins2wgm.css">
    <link rel=3D"preload" as=3D"style" href=3D"https://laravel.com/build/as=
sets/app-8aa4d27a.css"><link rel=3D"modulepreload" href=3D"https://laravel.=
com/build/assets/app-c412b7b5.js"><link rel=3D"stylesheet" href=3D"https://=
laravel.com/build/assets/app-8aa4d27a.css">
            <!-- Fathom - beautiful, simple website analytics -->
       =20
        <!-- / Fathom -->
   =20
   =20
   =20

   =20
</head>
<body>

   =20

   =20

    <div class=3D"relative overflow-auto dark:bg-dark-700" id=3D"docsScreen=
">
        <div class=3D"relative lg:flex lg:items-start">
           =20

           =20

            <section class=3D"flex-1 dark:bg-dark-700">
                <div class=3D"max-w-screen-lg px-8 sm:px-16 lg:px-24">
                   =20

                    <section class=3D"mt-8 md:mt-16">
                        <section class=3D"docs_main max-w-prose">
                           =20
                           =20
                            <div id=3D"main-content">
    <h1>Helpers</h1>
<ul>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#introduction">Introduction=
</a>
</li>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#available-methods">Availab=
le Methods</a>
</li>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#other-utilities">Other Uti=
lities</a>
<ul>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#benchmarking">Benchmarking=
</a>
</li>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#dates">Dates</a>
</li>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#lottery">Lottery</a>
</li>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#pipeline">Pipeline</a>
</li>
<li>
<a href=3D"https://laravel.com/docs/10.x/helpers#sleep">Sleep</a>
</li>
</ul>
</li>
</ul>
<p></p>
<h2 id=3D"introduction"><a href=3D"https://laravel.com/docs/10.x/helpers#in=
troduction">Introduction</a></h2>
<p>Laravel includes a variety of global "helper" PHP functions. Many of the=
se functions are used by the framework itself; however, you are free to use=
 them in your own applications if you find them convenient.</p>
<p></p>
<h2 id=3D"available-methods"><a href=3D"https://laravel.com/docs/10.x/helpe=
rs#available-methods">Available Methods</a></h2>

<p></p>
<h3 id=3D"arrays-and-objects-method-list"><a href=3D"https://laravel.com/do=
cs/10.x/helpers#arrays-and-objects-method-list">Arrays &amp; Objects</a></h=
3>
<div class=3D"collection-method-list" markdown=3D"1">
<p><a href=3D"https://laravel.com/docs/10.x/helpers#method-array-accessible=
">Arr::accessible</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-add">Arr::add=
</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-collapse">Arr=
::collapse</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-crossjoin">Ar=
r::crossJoin</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-divide">Arr::=
divide</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-dot">Arr::dot=
</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-except">Arr::=
except</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-exists">Arr::=
exists</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-first">Arr::f=
irst</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-flatten">Arr:=
:flatten</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-forget">Arr::=
forget</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-get">Arr::get=
</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-has">Arr::has=
</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-hasany">Arr::=
hasAny</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-isassoc">Arr:=
:isAssoc</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-islist">Arr::=
isList</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-join">Arr::jo=
in</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-keyby">Arr::k=
eyBy</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-last">Arr::la=
st</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-map">Arr::map=
</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-map-with-keys=
">Arr::mapWithKeys</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-only">Arr::on=
ly</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-pluck">Arr::p=
luck</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-prepend">Arr:=
:prepend</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-prependkeyswi=
th">Arr::prependKeysWith</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-pull">Arr::pu=
ll</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-query">Arr::q=
uery</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-random">Arr::=
random</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-set">Arr::set=
</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-shuffle">Arr:=
:shuffle</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-sort">Arr::so=
rt</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-sort-desc">Ar=
r::sortDesc</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-sort-recursiv=
e">Arr::sortRecursive</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-sort-recursiv=
e-desc">Arr::sortRecursiveDesc</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-to-css-classe=
s">Arr::toCssClasses</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-to-css-styles=
">Arr::toCssStyles</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-undot">Arr::u=
ndot</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-where">Arr::w=
here</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-where-not-nul=
l">Arr::whereNotNull</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-array-wrap">Arr::wr=
ap</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-data-fill">data_fil=
l</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-data-get">data_get<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-data-set">data_set<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-data-forget">data_f=
orget</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-head">head</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-last">last</a></p>
</div>
<p></p>
<h3 id=3D"paths-method-list"><a href=3D"https://laravel.com/docs/10.x/helpe=
rs#paths-method-list">Paths</a></h3>
<div class=3D"collection-method-list" markdown=3D"1">
<p><a href=3D"https://laravel.com/docs/10.x/helpers#method-app-path">app_pa=
th</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-base-path">base_pat=
h</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-config-path">config=
_path</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-database-path">data=
base_path</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-lang-path">lang_pat=
h</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-mix">mix</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-public-path">public=
_path</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-resource-path">reso=
urce_path</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-storage-path">stora=
ge_path</a></p>
</div>
<p></p>
<h3 id=3D"urls-method-list"><a href=3D"https://laravel.com/docs/10.x/helper=
s#urls-method-list">URLs</a></h3>
<div class=3D"collection-method-list" markdown=3D"1">
<p><a href=3D"https://laravel.com/docs/10.x/helpers#method-action">action</=
a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-asset">asset</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-route">route</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-secure-asset">secur=
e_asset</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-secure-url">secure_=
url</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-to-route">to_route<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-url">url</a></p>
</div>
<p></p>
<h3 id=3D"miscellaneous-method-list"><a href=3D"https://laravel.com/docs/10=
.x/helpers#miscellaneous-method-list">Miscellaneous</a></h3>
<div class=3D"collection-method-list" markdown=3D"1">
<p><a href=3D"https://laravel.com/docs/10.x/helpers#method-abort">abort</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-abort-if">abort_if<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-abort-unless">abort=
_unless</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-app">app</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-auth">auth</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-back">back</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-bcrypt">bcrypt</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-blank">blank</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-broadcast">broadcas=
t</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-cache">cache</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-class-uses-recursiv=
e">class_uses_recursive</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-collect">collect</a=
>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-config">config</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-cookie">cookie</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-csrf-field">csrf_fi=
eld</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-csrf-token">csrf_to=
ken</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-decrypt">decrypt</a=
>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-dd">dd</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-dispatch">dispatch<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-dispatch-sync">disp=
atch_sync</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-dump">dump</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-encrypt">encrypt</a=
>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-env">env</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-event">event</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-fake">fake</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-filled">filled</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-info">info</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-logger">logger</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-method-field">metho=
d_field</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-now">now</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-old">old</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-optional">optional<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-policy">policy</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-redirect">redirect<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-report">report</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-report-if">report_i=
f</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-report-unless">repo=
rt_unless</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-request">request</a=
>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-rescue">rescue</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-resolve">resolve</a=
>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-response">response<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-retry">retry</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-session">session</a=
>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-tap">tap</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-throw-if">throw_if<=
/a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-throw-unless">throw=
_unless</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-today">today</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-trait-uses-recursiv=
e">trait_uses_recursive</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-transform">transfor=
m</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-validator">validato=
r</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-value">value</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-view">view</a>
<a href=3D"https://laravel.com/docs/10.x/helpers#method-with">with</a></p>
</div>
<p></p>
<h2 id=3D"arrays"><a href=3D"https://laravel.com/docs/10.x/helpers#arrays">=
Arrays &amp; Objects</a></h2>
<p></p>
<h4 class=3D"collection-method first-collection-method" id=3D"method-array-=
accessible"><a href=3D"https://laravel.com/docs/10.x/helpers#method-array-a=
ccessible"><code>Arr::accessible()</code></a></h4>
<p>The <code>Arr::accessible</code> method determines if the given value is=
 array accessible:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-0"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color: #C792EA;=
">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Support\</span><spa=
n style=3D"color: #FFCB8B;">Collection</span><span style=3D"color: #BFC7D5;=
">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span s=
tyle=3D"color: #BEC5D4;">$isAccessible</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"c=
olor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">accessible</span><=
span style=3D"color: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">a</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89=
DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D=
"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">, </span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">b</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #F78C6C;">2</span><span style=3D"color: =
#BFC7D5;">]);</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #697098;">//</span><span style=3D"color: #697098;"=
> true</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><spa=
n style=3D"color: #BEC5D4;">$isAccessible</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">accessible</s=
pan><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #89DDFF;"=
>new</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F=
FCB8B;">Collection</span><span style=3D"color: #BFC7D5;">);</span></div><di=
v class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697=
098;">//</span><span style=3D"color: #697098;"> true</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$=
isAccessible</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span sty=
le=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><=
span style=3D"color: #82AAFF;">accessible</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">abc</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> false</span></div><div class=3D"line">&nbsp;</div><div class=3D"li=
ne"><span style=3D"color: #BEC5D4;">$isAccessible</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><spa=
n style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">access=
ible</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #8=
9DDFF;">new</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"co=
lor: #FFCB6B;">stdClass</span><span style=3D"color: #BFC7D5;">);</span></di=
v><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color:=
 #697098;">//</span><span style=3D"color: #697098;"> false</span></div></co=
de></pre><button id=3D"clipButton-0" class=3D"md:block hidden copyBtn" aria=
-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-tar=
get=3D"#clipText-0"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www=
.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8=
 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 =
00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-=
3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-add"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-array-add"><code>Arr::add()</code></a>=
</h4>
<p>The <code>Arr::add</code> method adds a given key / value pair to an arr=
ay if the given key doesn't already exist in the array or is set to <code>n=
ull</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-1"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">add</span><span =
style=3D"color: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">], </span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">pric=
e</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7=
D5;">, </span><span style=3D"color: #F78C6C;">100</span><span style=3D"colo=
r: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #697098;">//</span><span style=3D"color: #697098=
;"> ['name' =3D&gt; 'Desk', 'price' =3D&gt; 100]</span></div><div class=3D"=
line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$arra=
y</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792=
EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">add</span><span style=3D"color: #BFC7D5;">([</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #C3E88D;">Desk</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">price</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89D=
DFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"=
color: #82AAFF;">null</span><span style=3D"color: #BFC7D5;">], </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
>, </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #=
BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"=
><span style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> =
['name' =3D&gt; 'Desk', 'price' =3D&gt; 100]</span></div></code></pre><butt=
on id=3D"clipButton-1" class=3D"md:block hidden copyBtn" aria-label=3D"Copy=
 to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipTe=
xt-1"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/s=
vg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1=
h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 =
0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path><=
/svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-collapse"><a href=3D"htt=
ps://laravel.com/docs/10.x/helpers#method-array-collapse"><code>Arr::collap=
se()</code></a></h4>
<p>The <code>Arr::collapse</code> method collapses an array of arrays into =
a single array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-2"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">collapse</span><=
span style=3D"color: #BFC7D5;">([[</span><span style=3D"color: #F78C6C;">1<=
/span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6=
C;">2</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: =
#F78C6C;">3</span><span style=3D"color: #BFC7D5;">], [</span><span style=3D=
"color: #F78C6C;">4</span><span style=3D"color: #BFC7D5;">, </span><span st=
yle=3D"color: #F78C6C;">5</span><span style=3D"color: #BFC7D5;">, </span><s=
pan style=3D"color: #F78C6C;">6</span><span style=3D"color: #BFC7D5;">], [<=
/span><span style=3D"color: #F78C6C;">7</span><span style=3D"color: #BFC7D5=
;">, </span><span style=3D"color: #F78C6C;">8</span><span style=3D"color: #=
BFC7D5;">, </span><span style=3D"color: #F78C6C;">9</span><span style=3D"co=
lor: #BFC7D5;">]]);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></div></code></pre><button id=3D=
"clipButton-2" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clip=
board" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-2"><s=
vg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" view=
Box=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0=
 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h=
8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></b=
utton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-crossjoin"><a href=3D"ht=
tps://laravel.com/docs/10.x/helpers#method-array-crossjoin"><code>Arr::cros=
sJoin()</code></a></h4>
<p>The <code>Arr::crossJoin</code> method cross joins the given arrays, ret=
urning a Cartesian product with all possible permutations:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-3"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$matrix</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">crossJoin</sp=
an><span style=3D"color: #BFC7D5;">([</span><span style=3D"color: #F78C6C;"=
>1</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F7=
8C6C;">2</span><span style=3D"color: #BFC7D5;">], [</span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">a</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">b</span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]);=
</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span styl=
e=3D"color: #697098;">/*</span></div><div class=3D"line"><span style=3D"col=
or: #697098;">    [</span></div><div class=3D"line"><span style=3D"color: #=
697098;">        [1, 'a'],</span></div><div class=3D"line"><span style=3D"c=
olor: #697098;">        [1, 'b'],</span></div><div class=3D"line"><span sty=
le=3D"color: #697098;">        [2, 'a'],</span></div><div class=3D"line"><s=
pan style=3D"color: #697098;">        [2, 'b'],</span></div><div class=3D"l=
ine"><span style=3D"color: #697098;">    ]</span></div><div class=3D"line">=
<span style=3D"color: #697098;">*/</span></div><div class=3D"line">&nbsp;</=
div><div class=3D"line"><span style=3D"color: #BEC5D4;">$matrix</span><span=
 style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">A=
rr</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82=
AAFF;">crossJoin</span><span style=3D"color: #BFC7D5;">([</span><span style=
=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #F78C6C;">2</span><span style=3D"color: #BFC7D5;">], [</sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">=
a</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7=
D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">b</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #BFC7D5;">], [</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #C3E88D;">I</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">II</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #BFC7D5;">]);</span></div><div class=3D"line=
">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/*</span>=
</div><div class=3D"line"><span style=3D"color: #697098;">    [</span></div=
><div class=3D"line"><span style=3D"color: #697098;">        [1, 'a', 'I'],=
</span></div><div class=3D"line"><span style=3D"color: #697098;">        [1=
, 'a', 'II'],</span></div><div class=3D"line"><span style=3D"color: #697098=
;">        [1, 'b', 'I'],</span></div><div class=3D"line"><span style=3D"co=
lor: #697098;">        [1, 'b', 'II'],</span></div><div class=3D"line"><spa=
n style=3D"color: #697098;">        [2, 'a', 'I'],</span></div><div class=
=3D"line"><span style=3D"color: #697098;">        [2, 'a', 'II'],</span></d=
iv><div class=3D"line"><span style=3D"color: #697098;">        [2, 'b', 'I'=
],</span></div><div class=3D"line"><span style=3D"color: #697098;">        =
[2, 'b', 'II'],</span></div><div class=3D"line"><span style=3D"color: #6970=
98;">    ]</span></div><div class=3D"line"><span style=3D"color: #697098;">=
*/</span></div></code></pre><button id=3D"clipButton-3" class=3D"md:block h=
idden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard"=
 data-clipboard-target=3D"#clipText-3"><svg class=3D"fill-current h-5 w-5" =
xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentC=
olor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pa=
th d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0=
 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-divide"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-divide"><code>Arr::divide()</=
code></a></h4>
<p>The <code>Arr::divide</code> method returns two arrays: one containing t=
he keys and the other containing the values of the given array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-4"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BFC7D5;">[</span><span style=3D"color: #BEC5D4;">$=
keys</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #=
BEC5D4;">$values</span><span style=3D"color: #BFC7D5;">] </span><span style=
=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</s=
pan><span style=3D"color: #82AAFF;">divide</span><span style=3D"color: #BFC=
7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #BFC7D5;">]);</span></div><div class=3D"=
line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</s=
pan><span style=3D"color: #697098;"> $keys: ['name']</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/=
/</span><span style=3D"color: #697098;"> $values: ['Desk']</span></div></co=
de></pre><button id=3D"clipButton-4" class=3D"md:block hidden copyBtn" aria=
-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-tar=
get=3D"#clipText-4"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www=
.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8=
 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 =
00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-=
3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-dot"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-array-dot"><code>Arr::dot()</code></a>=
</h4>
<p>The <code>Arr::dot</code> method flattens a multi-dimensional array into=
 a single level array that uses "dot" notation to indicate depth:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-5"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">products</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #C3E88D;">desk</span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">pr=
ice</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D=
"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span s=
tyle=3D"color: #BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</div><=
div class=3D"line"><span style=3D"color: #BEC5D4;">$flattened</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr=
</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AA=
FF;">dot</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color=
: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">);</span></div><di=
v class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697=
098;">//</span><span style=3D"color: #697098;"> ['products.desk.price' =3D&=
gt; 100]</span></div></code></pre><button id=3D"clipButton-5" class=3D"md:b=
lock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clip=
board" data-clipboard-target=3D"#clipText-5"><svg class=3D"fill-current h-5=
 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pa=
th><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2=
 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-except"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-except"><code>Arr::except()</=
code></a></h4>
<p>The <code>Arr::except</code> method removes the given key / value pairs =
from an array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-6"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #BF=
C7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><=
span style=3D"color: #BEC5D4;">$filtered</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">except</span><sp=
an style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array=
</span><span style=3D"color: #BFC7D5;">, [</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]);</span></div><div=
 class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #6970=
98;">//</span><span style=3D"color: #697098;"> ['name' =3D&gt; 'Desk']</spa=
n></div></code></pre><button id=3D"clipButton-6" class=3D"md:block hidden c=
opyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-c=
lipboard-target=3D"#clipText-6"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-exists"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-exists"><code>Arr::exists()</=
code></a></h4>
<p>The <code>Arr::exists</code> method checks that the given key exists in =
the provided array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-7"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #C3E88D;">John Doe</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">age</span><spa=
n style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #F78C6C;">17</span><span style=3D"color: =
#BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$exists</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">exists</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$ar=
ray</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div=
 class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #6970=
98;">//</span><span style=3D"color: #697098;"> true</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$=
exists</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: =
#C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"=
color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span s=
tyle=3D"color: #82AAFF;">exists</span><span style=3D"color: #BFC7D5;">(</sp=
an><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7=
D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">salary</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div cl=
ass=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color:=
 #697098;"> false</span></div></code></pre><button id=3D"clipButton-7" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-7"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-first"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-array-first"><code>Arr::first()</cod=
e></a></h4>
<p>The <code>Arr::first</code> method returns the first element of an array=
 passing a given truth test:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-8"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> [</span><span style=3D"color: #F78C6C;">100</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">200</span><sp=
an style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">300</=
span><span style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nb=
sp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$first</span><=
span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D<=
/span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B=
;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color:=
 #82AAFF;">first</span><span style=3D"color: #BFC7D5;">(</span><span style=
=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">, </span>=
<span style=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"color: #=
C792EA;">int</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #C792EA;">int</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #BEC5D4;">$key</span><span style=3D"color: #D9F5DD;=
">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"line=
"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: #C792EA;=
">return</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #C792EA;">&gt;=3D</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #F78C6C;">150</span><span style=3D"color: #BFC7D5;">=
;</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">});</span=
></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"c=
olor: #697098;">//</span><span style=3D"color: #697098;"> 200</span></div><=
/code></pre><button id=3D"clipButton-8" class=3D"md:block hidden copyBtn" a=
ria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-=
target=3D"#clipText-8"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p>A default value may also be passed as the third parameter to the method.=
 This value will be returned if no value passes the truth test:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-9"><!--=
 Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=3D=
"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Sup=
port\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color:=
 #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$first</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">first</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array<=
/span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D=
4;">$callback</span><span style=3D"color: #BFC7D5;">, </span><span style=3D=
"color: #BEC5D4;">$default</span><span style=3D"color: #BFC7D5;">);</span><=
/div></code></pre><button id=3D"clipButton-9" class=3D"md:block hidden copy=
Btn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clip=
board-target=3D"#clipText-9"><svg class=3D"fill-current h-5 w-5" xmlns=3D"h=
ttp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><pat=
h d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6=
 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a=
3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-flatten"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-array-flatten"><code>Arr::flatten(=
)</code></a></h4>
<p>The <code>Arr::flatten</code> method flattens a multi-dimensional array =
into a single level array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-10"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">Joe</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D=
"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">languages</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BF=
C7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">PHP</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">Ruby</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">]];</span></div><div class=3D"line">&nbs=
p;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$flattened</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=
=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FF=
CB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=3D"co=
lor: #82AAFF;">flatten</span><span style=3D"color: #BFC7D5;">(</span><span =
style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">);</=
span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ['Joe', 'PHP=
', 'Ruby']</span></div></code></pre><button id=3D"clipButton-10" class=3D"m=
d:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to C=
lipboard" data-clipboard-target=3D"#clipText-10"><svg class=3D"fill-current=
 h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-forget"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-forget"><code>Arr::forget()</=
code></a></h4>
<p>The <code>Arr::forget</code> method removes a given key / value pair fro=
m a deeply nested array using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-11"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">products</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">desk</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><s=
pan style=3D"color: #BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</=
div><div class=3D"line"><span style=3D"color: #FFCB8B;">Arr</span><span sty=
le=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">forget</spa=
n><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$=
array</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.desk</span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span=
></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"c=
olor: #697098;">//</span><span style=3D"color: #697098;"> ['products' =3D&g=
t; []]</span></div></code></pre><button id=3D"clipButton-11" class=3D"md:bl=
ock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipb=
oard" data-clipboard-target=3D"#clipText-11"><svg class=3D"fill-current h-5=
 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pa=
th><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2=
 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-get"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-array-get"><code>Arr::get()</code></a>=
</h4>
<p>The <code>Arr::get</code> method retrieves a value from a deeply nested =
array using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-12"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">products</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">desk</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><s=
pan style=3D"color: #BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</=
div><div class=3D"line"><span style=3D"color: #BEC5D4;">$price</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Ar=
r</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82A=
AFF;">get</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"colo=
r: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">, </span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.de=
sk.price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"li=
ne"><span style=3D"color: #697098;">//</span><span style=3D"color: #697098;=
"> 100</span></div></code></pre><button id=3D"clipButton-12" class=3D"md:bl=
ock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipb=
oard" data-clipboard-target=3D"#clipText-12"><svg class=3D"fill-current h-5=
 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pa=
th><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2=
 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>Arr::get</code> method also accepts a default value, which wil=
l be returned if the specified key is not present in the array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-13"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$discount</span><span style=3D"color: =
#BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span st=
yle=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">get</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$ar=
ray</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #C3E88D;">products.desk.discount</spa=
n><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,=
 </span><span style=3D"color: #F78C6C;">0</span><span style=3D"color: #BFC7=
D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><sp=
an style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 0</s=
pan></div></code></pre><button id=3D"clipButton-13" class=3D"md:block hidde=
n copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" dat=
a-clipboard-target=3D"#clipText-13"><svg class=3D"fill-current h-5 w-5" xml=
ns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColo=
r"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path =
d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01=
-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-has"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-array-has"><code>Arr::has()</code></a>=
</h4>
<p>The <code>Arr::has</code> method checks whether a given item or items ex=
ists in an array using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-14"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">product</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D=
&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">De=
sk</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">price</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100=
</span><span style=3D"color: #BFC7D5;">]];</span></div><div class=3D"line">=
&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$contains</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;=
">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=3D"=
color: #82AAFF;">has</span><span style=3D"color: #BFC7D5;">(</span><span st=
yle=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">, </sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">=
product.name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> true</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #BEC5D4;">$contains</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span styl=
e=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">has</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$arra=
y</span><span style=3D"color: #BFC7D5;">, [</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">product.price</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">produ=
ct.discount</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">]);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> false</span></div></code></pre><button id=3D"clipButton-14" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-14"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-hasany"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-hasany"><code>Arr::hasAny()</=
code></a></h4>
<p>The <code>Arr::hasAny</code> method checks whether any item in a given s=
et exists in an array using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-15"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">product</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D=
&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">De=
sk</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">price</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100=
</span><span style=3D"color: #BFC7D5;">]];</span></div><div class=3D"line">=
&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$contains</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;=
">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=3D"=
color: #82AAFF;">hasAny</span><span style=3D"color: #BFC7D5;">(</span><span=
 style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">, <=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">product.name</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div cl=
ass=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color:=
 #697098;"> true</span></div><div class=3D"line">&nbsp;</div><div class=3D"=
line"><span style=3D"color: #BEC5D4;">$contains</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D=
"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span s=
tyle=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">hasAny</s=
pan><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;"=
>$array</span><span style=3D"color: #BFC7D5;">, [</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">product.name</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">=
product.discount</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">]);</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color=
: #697098;"> true</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #BEC5D4;">$contains</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><spa=
n style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">hasAny=
</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D=
4;">$array</span><span style=3D"color: #BFC7D5;">, [</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">category</span><spa=
n style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </spa=
n><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">p=
roduct.discount</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">]);</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color=
: #697098;"> false</span></div></code></pre><button id=3D"clipButton-15" cl=
ass=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"C=
opy to Clipboard" data-clipboard-target=3D"#clipText-15"><svg class=3D"fill=
-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20=
" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 0=
1-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a=
2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-isassoc"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-array-isassoc"><code>Arr::isAssoc(=
)</code></a></h4>
<p>The <code>Arr::isAssoc</code> method returns <code>true</code> if the gi=
ven array is an associative array. An array is considered "associative" if =
it doesn't have sequential numerical keys beginning with zero:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-16"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$isAssoc</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span sty=
le=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">isAssoc</sp=
an><span style=3D"color: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #C3E88D;">product</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"=
color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #C3E88D;">Desk</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">price</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89D=
DFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"=
color: #F78C6C;">100</span><span style=3D"color: #BFC7D5;">]]);</span></div=
><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: =
#697098;">//</span><span style=3D"color: #697098;"> true</span></div><div c=
lass=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4=
;">$isAssoc</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"co=
lor: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><s=
pan style=3D"color: #82AAFF;">isAssoc</span><span style=3D"color: #BFC7D5;"=
>([</span><span style=3D"color: #F78C6C;">1</span><span style=3D"color: #BF=
C7D5;">, </span><span style=3D"color: #F78C6C;">2</span><span style=3D"colo=
r: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">3</span><span style=
=3D"color: #BFC7D5;">]);</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color=
: #697098;"> false</span></div></code></pre><button id=3D"clipButton-16" cl=
ass=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"C=
opy to Clipboard" data-clipboard-target=3D"#clipText-16"><svg class=3D"fill=
-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20=
" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 0=
1-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a=
2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-islist"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-islist"><code>Arr::isList()</=
code></a></h4>
<p>The <code>Arr::isList</code> method returns <code>true</code> if the giv=
en array's keys are sequential integers beginning from zero:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-17"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$isList</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span styl=
e=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">isList</span=
><span style=3D"color: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">foo</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">bar</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">baz</spa=
n><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]=
);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span st=
yle=3D"color: #697098;">//</span><span style=3D"color: #697098;"> true</spa=
n></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"=
color: #BEC5D4;">$isList</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;=
">::</span><span style=3D"color: #82AAFF;">isList</span><span style=3D"colo=
r: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">product</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D=
&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">De=
sk</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">price</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100=
</span><span style=3D"color: #BFC7D5;">]]);</span></div><div class=3D"line"=
>&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</span><=
span style=3D"color: #697098;"> false</span></div></code></pre><button id=
=3D"clipButton-17" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-1=
7"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-join"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-array-join"><code>Arr::join()</code><=
/a></h4>
<p>The <code>Arr::join</code> method joins array elements with a string. Us=
ing this method's second argument, you may also specify the joining string =
for the final element of the array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-18"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">Tailwind</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">Alpine</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Laravel</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Liv=
ewire</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"=
><span style=3D"color: #BEC5D4;">$joined</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">join</span><span=
 style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</=
span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #C3E88D;">, </span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/=
/</span><span style=3D"color: #697098;"> Tailwind, Alpine, Laravel, Livewir=
e</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span sty=
le=3D"color: #BEC5D4;">$joined</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #8=
9DDFF;">::</span><span style=3D"color: #82AAFF;">join</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">, </span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;"> and </span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div c=
lass=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098=
;">//</span><span style=3D"color: #697098;"> Tailwind, Alpine, Laravel and =
Livewire</span></div></code></pre><button id=3D"clipButton-18" class=3D"md:=
block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cli=
pboard" data-clipboard-target=3D"#clipText-18"><svg class=3D"fill-current h=
-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"=
currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></=
path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2=
-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-keyby"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-array-keyby"><code>Arr::keyBy()</cod=
e></a></h4>
<p>The <code>Arr::keyBy</code> method keys the array by the given key. If m=
ultiple items have the same key, only the last one will appear in the new a=
rray:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-19"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">product_id</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">prod-100</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span sty=
le=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">Desk</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">product_id</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;"=
>=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">prod-200</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">Chair</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #BEC5D4;">$keyed</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><s=
pan style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">keyB=
y</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5=
D4;">$array</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">product_id</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</s=
pan></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=
=3D"color: #697098;">/*</span></div><div class=3D"line"><span style=3D"colo=
r: #697098;">    [</span></div><div class=3D"line"><span style=3D"color: #6=
97098;">        'prod-100' =3D&gt; ['product_id' =3D&gt; 'prod-100', 'name'=
 =3D&gt; 'Desk'],</span></div><div class=3D"line"><span style=3D"color: #69=
7098;">        'prod-200' =3D&gt; ['product_id' =3D&gt; 'prod-200', 'name' =
=3D&gt; 'Chair'],</span></div><div class=3D"line"><span style=3D"color: #69=
7098;">    ]</span></div><div class=3D"line"><span style=3D"color: #697098;=
">*/</span></div></code></pre><button id=3D"clipButton-19" class=3D"md:bloc=
k hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboa=
rd" data-clipboard-target=3D"#clipText-19"><svg class=3D"fill-current h-5 w=
-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curr=
entColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path=
><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3=
 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-last"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-array-last"><code>Arr::last()</code><=
/a></h4>
<p>The <code>Arr::last</code> method returns the last element of an array p=
assing a given truth test:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-20"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #F78C6C;">100</span><span styl=
e=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">200</span><s=
pan style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">300<=
/span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6=
C;">110</span><span style=3D"color: #BFC7D5;">];</span></div><div class=3D"=
line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$last=
</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792E=
A;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">last</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">,=
 </span><span style=3D"color: #C792EA;">function</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"=
color: #C792EA;">int</span><span style=3D"color: #BFC7D5;"> </span><span st=
yle=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;">, </sp=
an><span style=3D"color: #C792EA;">int</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #BEC5D4;">$key</span><span style=3D"color: =
#D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: =
#C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">&gt;=3D</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #F78C6C;">150</span><span style=3D"color: #=
BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">=
});</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span s=
tyle=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 300</spa=
n></div></code></pre><button id=3D"clipButton-20" class=3D"md:block hidden =
copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-=
clipboard-target=3D"#clipText-20"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A default value may be passed as the third argument to the method. This =
value will be returned if no value passes the truth test:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-21"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$last</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">last</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$arra=
y</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC=
5D4;">$callback</span><span style=3D"color: #BFC7D5;">, </span><span style=
=3D"color: #BEC5D4;">$default</span><span style=3D"color: #BFC7D5;">);</spa=
n></div></code></pre><button id=3D"clipButton-21" class=3D"md:block hidden =
copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-=
clipboard-target=3D"#clipText-21"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-map"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-array-map"><code>Arr::map()</code></a>=
</h4>
<p>The <code>Arr::map</code> method iterates through the array and passes e=
ach value and key to the given callback. The array value is replaced by the=
 value returned by the callback:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-22"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">first</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&g=
t;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #C3E88D;">james</span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">last</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">kirk</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #BEC5D4;">$mapped</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><spa=
n style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">map</s=
pan><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;"=
>$array</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color=
: #C792EA;">function</span><span style=3D"color: #BFC7D5;"> </span><span st=
yle=3D"color: #D9F5DD;">(</span><span style=3D"color: #C792EA;">string</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$=
value</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: =
#C792EA;">string</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #BEC5D4;">$key</span><span style=3D"color: #D9F5DD;">)</span><sp=
an style=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">    </span><span style=3D"color: #C792EA;">return</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">u=
cfirst</span><span style=3D"color: #BFC7D5;">($</span><span style=3D"color:=
 #BEC5D4;">value</span><span style=3D"color: #BFC7D5;">);</span></div><div =
class=3D"line"><span style=3D"color: #BFC7D5;">});</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/=
/</span><span style=3D"color: #697098;"> ['first' =3D&gt; 'James', 'last' =
=3D&gt; 'Kirk']</span></div></code></pre><button id=3D"clipButton-22" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-22"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-map-with-keys"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-array-map-with-keys"><code=
>Arr::mapWithKeys()</code></a></h4>
<p>The <code>Arr::mapWithKeys</code> method iterates through the array and =
passes each value to the given callback. The callback should return an asso=
ciative array containing a single key / value pair:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-23"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    [</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;"=
>        </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">John</span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div><div class=3D"li=
ne"><span style=3D"color: #BFC7D5;">        </span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #C3E88D;">department</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">Sales</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"color: #BFC7D5=
;">        </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">email</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</sp=
an><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #C3E88D;">john@example.com</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div>=
<div class=3D"line"><span style=3D"color: #BFC7D5;">    ],</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    [</span></div><div clas=
s=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span sty=
le=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88=
D;">Jane</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"color: #BFC7D5=
;">        </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">department</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">Marketing</span><span style=3D=
"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div><di=
v class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">jane@example.com</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">    ]</span></div><div class=3D"line"><span style=3D"=
color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #BEC5D4;">$mapped</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><spa=
n style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">mapWit=
hKeys</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #=
BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">, </span><span style=
=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #D9F5DD;">(</span><span style=3D"color: #C792EA;">ar=
ray</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BE=
C5D4;">$item</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"=
color: #C792EA;">int</span><span style=3D"color: #BFC7D5;"> </span><span st=
yle=3D"color: #BEC5D4;">$key</span><span style=3D"color: #D9F5DD;">)</span>=
<span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">    </span><span style=3D"color: #C792EA;">return</=
span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #BEC5D4=
;">$item</span><span style=3D"color: #BFC7D5;">[</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">email</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">] </span><span=
 style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #BEC5D4;">$item</span><span style=3D"color: #BF=
C7D5;">[</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">]];</span></div><div class=3D"line"><span style=3D"col=
or: #BFC7D5;">});</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #697098;">/*</span></div><div class=3D"line"><=
span style=3D"color: #697098;">    [</span></div><div class=3D"line"><span =
style=3D"color: #697098;">        'john@example.com' =3D&gt; 'John',</span>=
</div><div class=3D"line"><span style=3D"color: #697098;">        'jane@exa=
mple.com' =3D&gt; 'Jane',</span></div><div class=3D"line"><span style=3D"co=
lor: #697098;">    ]</span></div><div class=3D"line"><span style=3D"color: =
#697098;">*/</span></div></code></pre><button id=3D"clipButton-23" class=3D=
"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to=
 Clipboard" data-clipboard-target=3D"#clipText-23"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-only"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-array-only"><code>Arr::only()</code><=
/a></h4>
<p>The <code>Arr::only</code> method returns only the specified key / value=
 pairs from the given array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-24"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"colo=
r: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">orders</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&=
gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F7=
8C6C;">10</span><span style=3D"color: #BFC7D5;">];</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$=
slice</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span st=
yle=3D"color: #82AAFF;">only</span><span style=3D"color: #BFC7D5;">(</span>=
<span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;=
">, [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">price</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;">]);</span></div><div class=3D"line">&nbsp;<=
/div><div class=3D"line"><span style=3D"color: #697098;">//</span><span sty=
le=3D"color: #697098;"> ['name' =3D&gt; 'Desk', 'price' =3D&gt; 100]</span>=
</div></code></pre><button id=3D"clipButton-24" class=3D"md:block hidden co=
pyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cl=
ipboard-target=3D"#clipText-24"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-pluck"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-array-pluck"><code>Arr::pluck()</cod=
e></a></h4>
<p>The <code>Arr::pluck</code> method retrieves all of the values for a giv=
en key from an array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-25"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">developer</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;=
</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">id</span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">, </span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">na=
me</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">Taylor</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;">]],</span></div><div class=3D"line"><span s=
tyle=3D"color: #BFC7D5;">    [</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">developer</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">id</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #F78C6C;">2</span><span style=3D"color:=
 #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #C3E88D;">Abigail</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]],</span></div><div cl=
ass=3D"line"><span style=3D"color: #BFC7D5;">];</span></div><div class=3D"l=
ine">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$names=
</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792E=
A;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">pluck</span><span style=3D"color: #BFC7D5;">(</span><s=
pan style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">=
, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">developer.name</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"col=
or: #697098;"> ['Taylor', 'Abigail']</span></div></code></pre><button id=3D=
"clipButton-25" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cli=
pboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-25">=
<svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vi=
ewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1=
 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 =
2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg><=
/button></div>
<p>You may also specify how you wish the resulting list to be keyed:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-26"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$names</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">pluck</span><=
span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$arr=
ay</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">developer.name</span><span s=
tyle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">deve=
loper.id</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"li=
ne"><span style=3D"color: #697098;">//</span><span style=3D"color: #697098;=
"> [1 =3D&gt; 'Taylor', 2 =3D&gt; 'Abigail']</span></div></code></pre><butt=
on id=3D"clipButton-26" class=3D"md:block hidden copyBtn" aria-label=3D"Cop=
y to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipT=
ext-26"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000=
/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011=
-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 =
2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path=
></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-prepend"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-array-prepend"><code>Arr::prepend(=
)</code></a></h4>
<p>The <code>Arr::prepend</code> method will push an item onto the beginnin=
g of an array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-27"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">one</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">two</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">three</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">four</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">];</s=
pan></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">prepend</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">zero</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"=
>&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</span><=
span style=3D"color: #697098;"> ['zero', 'one', 'two', 'three', 'four']</sp=
an></div></code></pre><button id=3D"clipButton-27" class=3D"md:block hidden=
 copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data=
-clipboard-target=3D"#clipText-27"><svg class=3D"fill-current h-5 w-5" xmln=
s=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor=
"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If needed, you may specify the key that should be used for the value:</p=
>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-28"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">price</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&g=
t;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78=
C6C;">100</span><span style=3D"color: #BFC7D5;">];</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$=
array</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span st=
yle=3D"color: #82AAFF;">prepend</span><span style=3D"color: #BFC7D5;">(</sp=
an><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7=
D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">Desk</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp=
;</div><div class=3D"line"><span style=3D"color: #697098;">//</span><span s=
tyle=3D"color: #697098;"> ['name' =3D&gt; 'Desk', 'price' =3D&gt; 100]</spa=
n></div></code></pre><button id=3D"clipButton-28" class=3D"md:block hidden =
copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-=
clipboard-target=3D"#clipText-28"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-prependkeyswith"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-array-prependkeyswith"><co=
de>Arr::prependKeysWith()</code></a></h4>
<p>The <code>Arr::prependKeysWith</code> prepends all key names of an assoc=
iative array with the given prefix:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-29"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'<=
/span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div><div class=3D"l=
ine"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">price</span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #F78C6C;">100</span><span style=3D"color: #BFC7D5;">,=
</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">];</span><=
/div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"col=
or: #BEC5D4;">$keyed</span><span style=3D"color: #BFC7D5;"> </span><span st=
yle=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::=
</span><span style=3D"color: #82AAFF;">prependKeysWith</span><span style=3D=
"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</span><spa=
n style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">product.</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"=
line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/*</s=
pan></div><div class=3D"line"><span style=3D"color: #697098;">    [</span><=
/div><div class=3D"line"><span style=3D"color: #697098;">        'product.n=
ame' =3D&gt; 'Desk',</span></div><div class=3D"line"><span style=3D"color: =
#697098;">        'product.price' =3D&gt; 100,</span></div><div class=3D"li=
ne"><span style=3D"color: #697098;">    ]</span></div><div class=3D"line"><=
span style=3D"color: #697098;">*/</span></div></code></pre><button id=3D"cl=
ipButton-29" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipbo=
ard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-29"><sv=
g class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewB=
ox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 =
110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8=
a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></bu=
tton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-pull"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-array-pull"><code>Arr::pull()</code><=
/a></h4>
<p>The <code>Arr::pull</code> method returns and removes a key / value pair=
 from an array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-30"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"colo=
r: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$name</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">pull</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$arra=
y</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div c=
lass=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098=
;">//</span><span style=3D"color: #697098;"> $name: Desk</span></div><div c=
lass=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098=
;">//</span><span style=3D"color: #697098;"> $array: ['price' =3D&gt; 100]<=
/span></div></code></pre><button id=3D"clipButton-30" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-30"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A default value may be passed as the third argument to the method. This =
value will be returned if the key doesn't exist:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-31"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">pull</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$arra=
y</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC=
5D4;">$key</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"co=
lor: #BEC5D4;">$default</span><span style=3D"color: #BFC7D5;">);</span></di=
v></code></pre><button id=3D"clipButton-31" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-31"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-query"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-array-query"><code>Arr::query()</cod=
e></a></h4>
<p>The <code>Arr::query</code> method converts the array into a query strin=
g:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-32"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'<=
/span><span style=3D"color: #C3E88D;">Taylor</span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div><div class=3D=
"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">order</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span=
></div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">colu=
mn</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">created_at</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span=
 style=3D"color: #BFC7D5;">        </span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">direction</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"=
color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">desc</s=
pan><span style=3D"color: #D9F5DD;">'</span></div><div class=3D"line"><span=
 style=3D"color: #BFC7D5;">    ]</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"colo=
r: #89DDFF;">::</span><span style=3D"color: #82AAFF;">query</span><span sty=
le=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</span=
><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;<=
/div><div class=3D"line"><span style=3D"color: #697098;">//</span><span sty=
le=3D"color: #697098;"> name=3DTaylor&amp;order[column]=3Dcreated_at&amp;or=
der[direction]=3Ddesc</span></div></code></pre><button id=3D"clipButton-32"=
 class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-32"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-random"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-array-random"><code>Arr::random()</=
code></a></h4>
<p>The <code>Arr::random</code> method returns a random value from an array=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-33"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #F78C6C;">1</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">2</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">3</span=
><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">4=
</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C=
6C;">5</span><span style=3D"color: #BFC7D5;">];</span></div><div class=3D"l=
ine">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$rando=
m</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792=
EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">random</span><span style=3D"color: #BFC7D5;">(</span><=
span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;"=
>);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span s=
tyle=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 4 - (ret=
rieved randomly)</span></div></code></pre><button id=3D"clipButton-33" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-33"><svg class=3D"fill-c=
urrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" =
fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-=
1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 =
2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also specify the number of items to return as an optional second=
 argument. Note that providing this argument will return an array even if o=
nly one item is desired:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-34"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$items</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">random</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$ar=
ray</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F=
78C6C;">2</span><span style=3D"color: #BFC7D5;">);</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/=
/</span><span style=3D"color: #697098;"> [2, 5] - (retrieved randomly)</spa=
n></div></code></pre><button id=3D"clipButton-34" class=3D"md:block hidden =
copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-=
clipboard-target=3D"#clipText-34"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-set"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-array-set"><code>Arr::set()</code></a>=
</h4>
<p>The <code>Arr::set</code> method sets a value within a deeply nested arr=
ay using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-35"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">products</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">desk</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><s=
pan style=3D"color: #BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</=
div><div class=3D"line"><span style=3D"color: #FFCB8B;">Arr</span><span sty=
le=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">set</span><=
span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$arr=
ay</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">products.desk.price</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </s=
pan><span style=3D"color: #F78C6C;">200</span><span style=3D"color: #BFC7D5=
;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span=
 style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ['prod=
ucts' =3D&gt; ['desk' =3D&gt; ['price' =3D&gt; 200]]]</span></div></code></=
pre><button id=3D"clipButton-35" class=3D"md:block hidden copyBtn" aria-lab=
el=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-35"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-shuffle"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-array-shuffle"><code>Arr::shuffle(=
)</code></a></h4>
<p>The <code>Arr::shuffle</code> method randomly shuffles the items in the =
array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-36"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">shuffle</span=
><span style=3D"color: #BFC7D5;">([</span><span style=3D"color: #F78C6C;">1=
</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C=
6C;">2</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color:=
 #F78C6C;">3</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"=
color: #F78C6C;">4</span><span style=3D"color: #BFC7D5;">, </span><span sty=
le=3D"color: #F78C6C;">5</span><span style=3D"color: #BFC7D5;">]);</span></=
div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"colo=
r: #697098;">//</span><span style=3D"color: #697098;"> [3, 2, 5, 1, 4] - (g=
enerated randomly)</span></div></code></pre><button id=3D"clipButton-36" cl=
ass=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"C=
opy to Clipboard" data-clipboard-target=3D"#clipText-36"><svg class=3D"fill=
-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20=
" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 0=
1-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a=
2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-sort"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-array-sort"><code>Arr::sort()</code><=
/a></h4>
<p>The <code>Arr::sort</code> method sorts an array by its values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-37"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">Desk</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">Table</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">Chair</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">];</span></div=
><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: =
#BEC5D4;">$sorted</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</s=
pan><span style=3D"color: #82AAFF;">sort</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #BEC5D4;">$array</span><span style=3D"col=
or: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"=
line"><span style=3D"color: #697098;">//</span><span style=3D"color: #69709=
8;"> ['Chair', 'Desk', 'Table']</span></div></code></pre><button id=3D"clip=
Button-37" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-37"><svg =
class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p>You may also sort the array by the results of a given closure:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-38"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #BFC7D5;">],</span></div><div class=3D=
"line"><span style=3D"color: #BFC7D5;">    [</span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Tab=
le</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;">],</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">  =
  [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3=
E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #C3E88D;">Chair</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;">],</span></div><div class=3D"line">=
<span style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</=
div><div class=3D"line"><span style=3D"color: #BEC5D4;">$sorted</span><span=
 style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">a=
rray_values</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"co=
lor: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span sty=
le=3D"color: #82AAFF;">sort</span><span style=3D"color: #BFC7D5;">($</span>=
<span style=3D"color: #BEC5D4;">array</span><span style=3D"color: #BFC7D5;"=
>,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #C79=
2EA;">function</span><span style=3D"color: #82AAFF;"> </span><span style=3D=
"color: #D9F5DD;">(</span><span style=3D"color: #C792EA;">array</span><span=
 style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span>=
<span style=3D"color: #BEC5D4;">value</span><span style=3D"color: #D9F5DD;"=
>)</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC=
7D5;">{</span></div><div class=3D"line"><span style=3D"color: #82AAFF;">   =
 </span><span style=3D"color: #C792EA;">return</span><span style=3D"color: =
#82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><span style=3D"co=
lor: #BEC5D4;">value</span><span style=3D"color: #BFC7D5;">[</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">];<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">}));</span>=
</div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"co=
lor: #697098;">/*</span></div><div class=3D"line"><span style=3D"color: #69=
7098;">    [</span></div><div class=3D"line"><span style=3D"color: #697098;=
">        ['name' =3D&gt; 'Chair'],</span></div><div class=3D"line"><span s=
tyle=3D"color: #697098;">        ['name' =3D&gt; 'Desk'],</span></div><div =
class=3D"line"><span style=3D"color: #697098;">        ['name' =3D&gt; 'Tab=
le'],</span></div><div class=3D"line"><span style=3D"color: #697098;">    ]=
</span></div><div class=3D"line"><span style=3D"color: #697098;">*/</span><=
/div></code></pre><button id=3D"clipButton-38" class=3D"md:block hidden cop=
yBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cli=
pboard-target=3D"#clipText-38"><svg class=3D"fill-current h-5 w-5" xmlns=3D=
"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><p=
ath d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"=
M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H=
9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-sort-desc"><a href=3D"ht=
tps://laravel.com/docs/10.x/helpers#method-array-sort-desc"><code>Arr::sort=
Desc()</code></a></h4>
<p>The <code>Arr::sortDesc</code> method sorts an array in descending order=
 by its values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-39"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">Desk</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">Table</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">Chair</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">];</span></div=
><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: =
#BEC5D4;">$sorted</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</s=
pan><span style=3D"color: #82AAFF;">sortDesc</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</span><span style=3D=
"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> ['Table', 'Desk', 'Chair']</span></div></code></pre><button id=3D"=
clipButton-39" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clip=
board" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-39"><=
svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vie=
wBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 =
0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2=
h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></=
button></div>
<p>You may also sort the array by the results of a given closure:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-40"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">Desk</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #BFC7D5;">],</span></div><div class=3D=
"line"><span style=3D"color: #BFC7D5;">    [</span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Tab=
le</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;">],</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">  =
  [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3=
E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #C3E88D;">Chair</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;">],</span></div><div class=3D"line">=
<span style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</=
div><div class=3D"line"><span style=3D"color: #BEC5D4;">$sorted</span><span=
 style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">a=
rray_values</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"co=
lor: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">::</span><span sty=
le=3D"color: #82AAFF;">sortDesc</span><span style=3D"color: #BFC7D5;">($</s=
pan><span style=3D"color: #BEC5D4;">array</span><span style=3D"color: #BFC7=
D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: =
#C792EA;">function</span><span style=3D"color: #82AAFF;"> </span><span styl=
e=3D"color: #D9F5DD;">(</span><span style=3D"color: #C792EA;">array</span><=
span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</s=
pan><span style=3D"color: #BEC5D4;">value</span><span style=3D"color: #D9F5=
DD;">)</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: =
#BFC7D5;">{</span></div><div class=3D"line"><span style=3D"color: #82AAFF;"=
>    </span><span style=3D"color: #C792EA;">return</span><span style=3D"col=
or: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><span style=
=3D"color: #BEC5D4;">value</span><span style=3D"color: #BFC7D5;">[</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5=
;">];</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">}));<=
/span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=
=3D"color: #697098;">/*</span></div><div class=3D"line"><span style=3D"colo=
r: #697098;">    [</span></div><div class=3D"line"><span style=3D"color: #6=
97098;">        ['name' =3D&gt; 'Table'],</span></div><div class=3D"line"><=
span style=3D"color: #697098;">        ['name' =3D&gt; 'Desk'],</span></div=
><div class=3D"line"><span style=3D"color: #697098;">        ['name' =3D&gt=
; 'Chair'],</span></div><div class=3D"line"><span style=3D"color: #697098;"=
>    ]</span></div><div class=3D"line"><span style=3D"color: #697098;">*/</=
span></div></code></pre><button id=3D"clipButton-40" class=3D"md:block hidd=
en copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" da=
ta-clipboard-target=3D"#clipText-40"><svg class=3D"fill-current h-5 w-5" xm=
lns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCol=
or"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path=
 d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 0=
1-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-sort-recursive"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-array-sort-recursive"><cod=
e>Arr::sortRecursive()</code></a></h4>
<p>The <code>Arr::sortRecursive</code> method recursively sorts an array us=
ing the <code>sort</code> function for numerically indexed sub-arrays and t=
he <code>ksort</code> function for associative sub-arrays:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-41"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">Roman</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #C3E88D;">Taylor</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #C3E88D;">Li</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">],</span></div><div cla=
ss=3D"line"><span style=3D"color: #BFC7D5;">    [</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">PHP</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Ruby</sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">=
, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">JavaScript</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    [</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">one</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C=
6C;">1</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">two</span><span style=3D=
"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span sty=
le=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #F78C6C;">2</span><span style=3D"color: #BFC7D5;">,=
 </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">three</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">3</span><s=
pan style=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #BEC5D4;">$sorted</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span st=
yle=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><=
span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">sor=
tRecursive</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"col=
or: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">);</span></div><=
div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #6=
97098;">/*</span></div><div class=3D"line"><span style=3D"color: #697098;">=
    [</span></div><div class=3D"line"><span style=3D"color: #697098;">     =
   ['JavaScript', 'PHP', 'Ruby'],</span></div><div class=3D"line"><span sty=
le=3D"color: #697098;">        ['one' =3D&gt; 1, 'three' =3D&gt; 3, 'two' =
=3D&gt; 2],</span></div><div class=3D"line"><span style=3D"color: #697098;"=
>        ['Li', 'Roman', 'Taylor'],</span></div><div class=3D"line"><span s=
tyle=3D"color: #697098;">    ]</span></div><div class=3D"line"><span style=
=3D"color: #697098;">*/</span></div></code></pre><button id=3D"clipButton-4=
1" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-41"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p>If you would like the results sorted in descending order, you may use th=
e <code>Arr::sortRecursiveDesc</code> method.</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-42"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$sorted</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89D=
DFF;">::</span><span style=3D"color: #82AAFF;">sortRecursiveDesc</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array<=
/span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button i=
d=3D"clipButton-42" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to=
 Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-=
42"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg=
" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2=
a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 =
002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></s=
vg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-to-css-classes"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-array-to-css-classes"><cod=
e>Arr::toCssClasses()</code></a></h4>
<p>The <code>Arr::toCssClasses</code> conditionally compiles a CSS class st=
ring. The method accepts an array of classes where the array key contains t=
he class or classes you wish to add, while the value is a boolean expressio=
n. If the array element has a numeric key, it will always be included in th=
e rendered class list:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-43"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$isActive</span><span style=3D"color: =
#BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">false</span><span =
style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"=
color: #BEC5D4;">$hasError</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">true</span><span style=3D"color: #BFC7=
D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><spa=
n style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7=
D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">p-4</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #C3E88D;">font-bold</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;=
">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"colo=
r: #BEC5D4;">$isActive</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">bg-red</=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$hasError</span><span =
style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><d=
iv class=3D"line"><span style=3D"color: #BEC5D4;">$classes</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</s=
pan><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;=
">toCssClasses</span><span style=3D"color: #BFC7D5;">(</span><span style=3D=
"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">);</span></d=
iv><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color=
: #697098;">/*</span></div><div class=3D"line"><span style=3D"color: #69709=
8;">    'p-4 bg-red'</span></div><div class=3D"line"><span style=3D"color: =
#697098;">*/</span></div></code></pre><button id=3D"clipButton-43" class=3D=
"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to=
 Clipboard" data-clipboard-target=3D"#clipText-43"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-to-css-styles"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-array-to-css-styles"><code=
>Arr::toCssStyles()</code></a></h4>
<p>The <code>Arr::toCssStyles</code> conditionally compiles a CSS style str=
ing. The method accepts an array of classes where the array key contains th=
e class or classes you wish to add, while the value is a boolean expression=
. If the array element has a numeric key, it will always be included in the=
 rendered class list:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-44"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$hasColor</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #82AAFF;">true</span><span style=3D"color: #=
BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line">=
<span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #=
BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">background-color: blue</span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">color: blue</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #BEC5D4;">$hasColor</span><span style=3D"color:=
 #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #BEC5D4;">$classes</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">toCssStyles</=
span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;=
">$array</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D=
"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">/*</=
span></div><div class=3D"line"><span style=3D"color: #697098;">    'backgro=
und-color: blue; color: blue;'</span></div><div class=3D"line"><span style=
=3D"color: #697098;">*/</span></div></code></pre><button id=3D"clipButton-4=
4" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-44"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p>This method powers Laravel's functionality allowing <a href=3D"https://l=
aravel.com/docs/10.x/blade#conditionally-merge-classes">merging classes wit=
h a Blade component's attribute bag</a> as well as the <code>@class</code> =
<a href=3D"https://laravel.com/docs/10.x/blade#conditional-classes">Blade d=
irective</a>.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-undot"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-array-undot"><code>Arr::undot()</cod=
e></a></h4>
<p>The <code>Arr::undot</code> method expands a single-dimensional array th=
at uses "dot" notation into a multi-dimensional array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-45"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">user.name</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;<=
/span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #C3E88D;">Kevin Malone</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span></div>=
<div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">user.occupatio=
n</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">Accountant</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><d=
iv class=3D"line"><span style=3D"color: #BEC5D4;">$array</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</sp=
an><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;"=
>undot</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: =
#BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">);</span></div><div =
class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #69709=
8;">//</span><span style=3D"color: #697098;"> ['user' =3D&gt; ['name' =3D&g=
t; 'Kevin Malone', 'occupation' =3D&gt; 'Accountant']]</span></div></code><=
/pre><button id=3D"clipButton-45" class=3D"md:block hidden copyBtn" aria-la=
bel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-45"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-where"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-array-where"><code>Arr::where()</cod=
e></a></h4>
<p>The <code>Arr::where</code> method filters an array using the given clos=
ure:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-46"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #F78C6C;">100</span><span styl=
e=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #C3E88D;">200</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;"=
>300</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #C3E88D;">400</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span styl=
e=3D"color: #F78C6C;">500</span><span style=3D"color: #BFC7D5;">];</span></=
div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"colo=
r: #BEC5D4;">$filtered</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"color: #89DDFF;">=
::</span><span style=3D"color: #82AAFF;">where</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$array</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(=
</span><span style=3D"color: #C792EA;">string</span><span style=3D"color: #=
BFC7D5;">|</span><span style=3D"color: #C792EA;">int</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$value</span><span =
style=3D"color: #BFC7D5;">, </span><span style=3D"color: #C792EA;">int</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$=
key</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #BF=
C7D5;"> {</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;"> =
   </span><span style=3D"color: #C792EA;">return</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">is_string</span><span s=
tyle=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">value</sp=
an><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span=
 style=3D"color: #BFC7D5;">});</span></div><div class=3D"line">&nbsp;</div>=
<div class=3D"line"><span style=3D"color: #697098;">//</span><span style=3D=
"color: #697098;"> [1 =3D&gt; '200', 3 =3D&gt; '400']</span></div></code></=
pre><button id=3D"clipButton-46" class=3D"md:block hidden copyBtn" aria-lab=
el=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-46"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-where-not-null"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-array-where-not-null"><cod=
e>Arr::whereNotNull()</code></a></h4>
<p>The <code>Arr::whereNotNull</code> method removes all <code>null</code> =
values from the given array:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-47"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> [</span><span style=3D"color: #F78C6C;">0</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #82AAFF;">null</span><s=
pan style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</di=
v><div class=3D"line"><span style=3D"color: #BEC5D4;">$filtered</span><span=
 style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">A=
rr</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82=
AAFF;">whereNotNull</span><span style=3D"color: #BFC7D5;">(</span><span sty=
le=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;">);</spa=
n></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"=
color: #697098;">//</span><span style=3D"color: #697098;"> [0 =3D&gt; 0]</s=
pan></div></code></pre><button id=3D"clipButton-47" class=3D"md:block hidde=
n copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" dat=
a-clipboard-target=3D"#clipText-47"><svg class=3D"fill-current h-5 w-5" xml=
ns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColo=
r"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path =
d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01=
-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-array-wrap"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-array-wrap"><code>Arr::wrap()</code><=
/a></h4>
<p>The <code>Arr::wrap</code> method wraps the given value in an array. If =
the given value is already an array it will be returned without modificatio=
n:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-48"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$string</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">Laravel</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</d=
iv><div class=3D"line"><span style=3D"color: #BEC5D4;">$array</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr=
</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AA=
FF;">wrap</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"colo=
r: #BEC5D4;">$string</span><span style=3D"color: #BFC7D5;">);</span></div><=
div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #6=
97098;">//</span><span style=3D"color: #697098;"> ['Laravel']</span></div><=
/code></pre><button id=3D"clipButton-48" class=3D"md:block hidden copyBtn" =
aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard=
-target=3D"#clipText-48"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http:=
//www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p>If the given value is <code>null</code>, an empty array will be returned=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-49"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Arr</span><span style=3D"col=
or: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Arr</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">wrap</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">null<=
/span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&n=
bsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</span><spa=
n style=3D"color: #697098;"> []</span></div></code></pre><button id=3D"clip=
Button-49" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-49"><svg =
class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-data-fill"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-data-fill"><code>data_fill()</code></a=
></h4>
<p>The <code>data_fill</code> function sets a missing value within a nested=
 array or object using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-50"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">products</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">desk</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #=
BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #82AAFF;">data_fill</span><span style=3D"color: #B=
FC7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span style=3D"=
color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.desk=
.price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"co=
lor: #F78C6C;">200</span><span style=3D"color: #BFC7D5;">);</span></div><di=
v class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697=
098;">//</span><span style=3D"color: #697098;"> ['products' =3D&gt; ['desk'=
 =3D&gt; ['price' =3D&gt; 100]]]</span></div><div class=3D"line">&nbsp;</di=
v><div class=3D"line"><span style=3D"color: #82AAFF;">data_fill</span><span=
 style=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">data</s=
pan><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"=
> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">products.desk.discount</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </=
span><span style=3D"color: #F78C6C;">10</span><span style=3D"color: #BFC7D5=
;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span=
 style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ['prod=
ucts' =3D&gt; ['desk' =3D&gt; ['price' =3D&gt; 100, 'discount' =3D&gt; 10]]=
]</span></div></code></pre><button id=3D"clipButton-50" class=3D"md:block h=
idden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard"=
 data-clipboard-target=3D"#clipText-50"><svg class=3D"fill-current h-5 w-5"=
 xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"current=
Color"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><p=
ath d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 =
0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>This function also accepts asterisks as wildcards and will fill the targ=
et accordingly:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-51"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">pro=
ducts</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        [</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 1</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        [</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 2</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">],</span></div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">    ],</span></div><di=
v class=3D"line"><span style=3D"color: #BFC7D5;">];</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #82AAFF;">d=
ata_fill</span><span style=3D"color: #BFC7D5;">($</span><span style=3D"colo=
r: #BEC5D4;">data</span><span style=3D"color: #BFC7D5;">,</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">products.*.price</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color:=
 #82AAFF;"> </span><span style=3D"color: #F78C6C;">200</span><span style=3D=
"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">/*</span></div><div class=3D"line=
"><span style=3D"color: #697098;">    [</span></div><div class=3D"line"><sp=
an style=3D"color: #697098;">        'products' =3D&gt; [</span></div><div =
class=3D"line"><span style=3D"color: #697098;">            ['name' =3D&gt; =
'Desk 1', 'price' =3D&gt; 100],</span></div><div class=3D"line"><span style=
=3D"color: #697098;">            ['name' =3D&gt; 'Desk 2', 'price' =3D&gt; =
200],</span></div><div class=3D"line"><span style=3D"color: #697098;">     =
   ],</span></div><div class=3D"line"><span style=3D"color: #697098;">    ]=
</span></div><div class=3D"line"><span style=3D"color: #697098;">*/</span><=
/div></code></pre><button id=3D"clipButton-51" class=3D"md:block hidden cop=
yBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cli=
pboard-target=3D"#clipText-51"><svg class=3D"fill-current h-5 w-5" xmlns=3D=
"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><p=
ath d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"=
M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H=
9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-data-get"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-data-get"><code>data_get()</code></a></=
h4>
<p>The <code>data_get</code> function retrieves a value from a nested array=
 or object using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-52"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">products</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">desk</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #=
BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #BEC5D4;">$price</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">data_get</span><span st=
yle=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">data</span=
><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> <=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">products.desk.price</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><d=
iv class=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"c=
olor: #697098;"> 100</span></div></code></pre><button id=3D"clipButton-52" =
class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D=
"Copy to Clipboard" data-clipboard-target=3D"#clipText-52"><svg class=3D"fi=
ll-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 =
20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0=
 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V=
5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>data_get</code> function also accepts a default value, which w=
ill be returned if the specified key is not found:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-53"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$discount</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #82AAFF;">data_get</span><span style=3D"colo=
r: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span styl=
e=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products=
.desk.discount</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span sty=
le=3D"color: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></d=
iv><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color=
: #697098;">//</span><span style=3D"color: #697098;"> 0</span></div></code>=
</pre><button id=3D"clipButton-53" class=3D"md:block hidden copyBtn" aria-l=
abel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targe=
t=3D"#clipText-53"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.=
w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 =
3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 0=
0-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3=
-3z"></path></svg></button></div>
<p>The function also accepts wildcards using asterisks, which may target an=
y key of the array or object:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-54"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">pro=
duct-one</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span sty=
le=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;=
">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 1</span><span sty=
le=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">product-two</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;"=
>=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;=
">Desk 2</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #C3E88D;">price</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;<=
/span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C=
;">150</span><span style=3D"color: #BFC7D5;">],</span></div><div class=3D"l=
ine"><span style=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nb=
sp;</div><div class=3D"line"><span style=3D"color: #82AAFF;">data_get</span=
><span style=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">d=
ata</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82=
AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">*.name</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color=
: #697098;"> ['Desk 1', 'Desk 2'];</span></div></code></pre><button id=3D"c=
lipButton-54" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipb=
oard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-54"><s=
vg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" view=
Box=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0=
 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h=
8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></b=
utton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-data-set"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-data-set"><code>data_set()</code></a></=
h4>
<p>The <code>data_set</code> function sets a value within a nested array or=
 object using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-55"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">products</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">desk</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #=
BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #82AAFF;">data_set</span><span style=3D"color: #BF=
C7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span style=3D"c=
olor: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.desk.=
price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"col=
or: #F78C6C;">200</span><span style=3D"color: #BFC7D5;">);</span></div><div=
 class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #6970=
98;">//</span><span style=3D"color: #697098;"> ['products' =3D&gt; ['desk' =
=3D&gt; ['price' =3D&gt; 200]]]</span></div></code></pre><button id=3D"clip=
Button-55" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-55"><svg =
class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p>This function also accepts wildcards using asterisks and will set values=
 on the target accordingly:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-56"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">pro=
ducts</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        [</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 1</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        [</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 2</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">150</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    ],</span></div><div class=3D"line"><span style=3D"color: #=
BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"=
><span style=3D"color: #82AAFF;">data_set</span><span style=3D"color: #BFC7=
D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span style=3D"col=
or: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.*.pri=
ce</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC=
7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color:=
 #F78C6C;">200</span><span style=3D"color: #BFC7D5;">);</span></div><div cl=
ass=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;=
">/*</span></div><div class=3D"line"><span style=3D"color: #697098;">    [<=
/span></div><div class=3D"line"><span style=3D"color: #697098;">        'pr=
oducts' =3D&gt; [</span></div><div class=3D"line"><span style=3D"color: #69=
7098;">            ['name' =3D&gt; 'Desk 1', 'price' =3D&gt; 200],</span></=
div><div class=3D"line"><span style=3D"color: #697098;">            ['name'=
 =3D&gt; 'Desk 2', 'price' =3D&gt; 200],</span></div><div class=3D"line"><s=
pan style=3D"color: #697098;">        ],</span></div><div class=3D"line"><s=
pan style=3D"color: #697098;">    ]</span></div><div class=3D"line"><span s=
tyle=3D"color: #697098;">*/</span></div></code></pre><button id=3D"clipButt=
on-56" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" t=
itle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-56"><svg clas=
s=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"=
0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H=
9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0=
 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button><=
/div>
<p>By default, any existing values are overwritten. If you wish to only set=
 a value if it doesn't exist, you may pass <code>false</code> as the fourth=
 argument to the function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-57"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">products</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">desk</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #=
BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #82AAFF;">data_set</span><span style=3D"color: #BF=
C7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span style=3D"c=
olor: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.desk.=
price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"col=
or: #F78C6C;">200</span><span style=3D"color: #BFC7D5;">,</span><span style=
=3D"color: #82AAFF;"> overwrite</span><span style=3D"color: #BFC7D5;">:</sp=
an><span style=3D"color: #82AAFF;"> false</span><span style=3D"color: #BFC7=
D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><sp=
an style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ['pr=
oducts' =3D&gt; ['desk' =3D&gt; ['price' =3D&gt; 100]]]</span></div></code>=
</pre><button id=3D"clipButton-57" class=3D"md:block hidden copyBtn" aria-l=
abel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targe=
t=3D"#clipText-57"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.=
w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 =
3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 0=
0-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3=
-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-data-forget"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-data-forget"><code>data_forget()</co=
de></a></h4>
<p>The <code>data_forget</code> function removes a value within a nested ar=
ray or object using "dot" notation:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-58"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D=
;">products</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span =
style=3D"color: #BFC7D5;"> [</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">desk</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span><span style=3D"=
color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #=
BFC7D5;">]]];</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #82AAFF;">data_forget</span><span style=3D"color: =
#BFC7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span style=
=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.=
desk.price</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"=
line"><span style=3D"color: #697098;">//</span><span style=3D"color: #69709=
8;"> ['products' =3D&gt; ['desk' =3D&gt; []]]</span></div></code></pre><but=
ton id=3D"clipButton-58" class=3D"md:block hidden copyBtn" aria-label=3D"Co=
py to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clip=
Text-58"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/200=
0/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 01=
1-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2=
 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pat=
h></svg></button></div>
<p>This function also accepts wildcards using asterisks and will remove val=
ues on the target accordingly:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-59"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$data</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">pro=
ducts</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        [</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 1</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">100</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">        [</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Desk 2</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">price</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">150</span><span style=
=3D"color: #BFC7D5;">],</span></div><div class=3D"line"><span style=3D"colo=
r: #BFC7D5;">    ],</span></div><div class=3D"line"><span style=3D"color: #=
BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"=
><span style=3D"color: #82AAFF;">data_forget</span><span style=3D"color: #B=
FC7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span style=3D"=
color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">products.*.pr=
ice</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BF=
C7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><=
span style=3D"color: #697098;">/*</span></div><div class=3D"line"><span sty=
le=3D"color: #697098;">    [</span></div><div class=3D"line"><span style=3D=
"color: #697098;">        'products' =3D&gt; [</span></div><div class=3D"li=
ne"><span style=3D"color: #697098;">            ['name' =3D&gt; 'Desk 1'],<=
/span></div><div class=3D"line"><span style=3D"color: #697098;">           =
 ['name' =3D&gt; 'Desk 2'],</span></div><div class=3D"line"><span style=3D"=
color: #697098;">        ],</span></div><div class=3D"line"><span style=3D"=
color: #697098;">    ]</span></div><div class=3D"line"><span style=3D"color=
: #697098;">*/</span></div></code></pre><button id=3D"clipButton-59" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-59"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-head"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-head"><code>head()</code></a></h4>
<p>The <code>head</code> function returns the first element in the given ar=
ray:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-60"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [=
</span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #BFC=
7D5;">, </span><span style=3D"color: #F78C6C;">200</span><span style=3D"col=
or: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">300</span><span styl=
e=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #BEC5D4;">$first</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">head</span><=
span style=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">arr=
ay</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"=
>&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</span><=
span style=3D"color: #697098;"> 100</span></div></code></pre><button id=3D"=
clipButton-60" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clip=
board" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-60"><=
svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vie=
wBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 =
0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2=
h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></=
button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-last"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-last"><code>last()</code></a></h4>
<p>The <code>last</code> function returns the last element in the given arr=
ay:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-61"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$array</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> [=
</span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #BFC=
7D5;">, </span><span style=3D"color: #F78C6C;">200</span><span style=3D"col=
or: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">300</span><span styl=
e=3D"color: #BFC7D5;">];</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #BEC5D4;">$last</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">last</span><s=
pan style=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">arra=
y</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">=
&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</span><s=
pan style=3D"color: #697098;"> 300</span></div></code></pre><button id=3D"c=
lipButton-61" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipb=
oard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-61"><s=
vg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" view=
Box=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0=
 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h=
8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></b=
utton></div>
<p></p>
<h2 id=3D"paths"><a href=3D"https://laravel.com/docs/10.x/helpers#paths">Pa=
ths</a></h2>
<p></p>
<h4 class=3D"collection-method" id=3D"method-app-path"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-app-path"><code>app_path()</code></a></=
h4>
<p>The <code>app_path</code> function returns the fully qualified path to y=
our application's <code>app</code> directory. You may also use the <code>ap=
p_path</code> function to generate a fully qualified path to a file relativ=
e to the application directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-62"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">app_path</span><span style=3D"color: #=
BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"line=
"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: =
#BFC7D5;"> </span><span style=3D"color: #82AAFF;">app_path</span><span styl=
e=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">Http/Controllers/Controller.php</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></di=
v></code></pre><button id=3D"clipButton-62" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-62"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-base-path"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-base-path"><code>base_path()</code></a=
></h4>
<p>The <code>base_path</code> function returns the fully qualified path to =
your application's root directory. You may also use the <code>base_path</co=
de> function to generate a fully qualified path to a given file relative to=
 the project root directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-63"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">base_path</span><span style=3D"color: =
#BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #82AAFF;">base_path</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">vendor/bin</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><but=
ton id=3D"clipButton-63" class=3D"md:block hidden copyBtn" aria-label=3D"Co=
py to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clip=
Text-63"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/200=
0/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 01=
1-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2=
 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pat=
h></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-config-path"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-config-path"><code>config_path()</co=
de></a></h4>
<p>The <code>config_path</code> function returns the fully qualified path t=
o your application's <code>config</code> directory. You may also use the <c=
ode>config_path</code> function to generate a fully qualified path to a giv=
en file within the application's configuration directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-64"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">config_path</span><span style=3D"color=
: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">config_path</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">app.php</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><bu=
tton id=3D"clipButton-64" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-64"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/20=
00/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 0=
11-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a=
2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pa=
th></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-database-path"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-database-path"><code>database_path=
()</code></a></h4>
<p>The <code>database_path</code> function returns the fully qualified path=
 to your application's <code>database</code> directory. You may also use th=
e <code>database_path</code> function to generate a fully qualified path to=
 a given file within the database directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-65"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">database_path</span><span style=3D"col=
or: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">database_path</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">factories/UserFactory.php</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span>=
</div></code></pre><button id=3D"clipButton-65" class=3D"md:block hidden co=
pyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cl=
ipboard-target=3D"#clipText-65"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-lang-path"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-lang-path"><code>lang_path()</code></a=
></h4>
<p>The <code>lang_path</code> function returns the fully qualified path to =
your application's <code>lang</code> directory. You may also use the <code>=
lang_path</code> function to generate a fully qualified path to a given fil=
e within the directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-66"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">lang_path</span><span style=3D"color: =
#BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #82AAFF;">lang_path</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">en/messages.php</span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre=
><button id=3D"clipButton-66" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-66"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.o=
rg/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 =
1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 =
2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"=
></path></svg></button></div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-purple-600 lg:mb-0"><img src=3D"https://laravel.com/img/call=
outs/lightbulb.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6=
">
By default, the Laravel application skeleton does not include the <code>lan=
g</code> directory. If you would like to customize Laravel's language files=
, you may publish them via the <code>lang:publish</code> Artisan command.</=
p></div>
</blockquote>
<p></p>
<h4 class=3D"collection-method" id=3D"method-mix"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-mix"><code>mix()</code></a></h4>
<p>The <code>mix</code> function returns the path to a <a href=3D"https://l=
aravel.com/docs/10.x/mix">versioned Mix file</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-67"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">mix</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">css/app.css</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-67" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-67"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-public-path"><a href=3D"https:=
//laravel.com/docs/10.x/helpers#method-public-path"><code>public_path()</co=
de></a></h4>
<p>The <code>public_path</code> function returns the fully qualified path t=
o your application's <code>public</code> directory. You may also use the <c=
ode>public_path</code> function to generate a fully qualified path to a giv=
en file within the public directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-68"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">public_path</span><span style=3D"color=
: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"l=
ine"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">public_path</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">css/app.css</span><span style=3D"color: #D=
9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre=
><button id=3D"clipButton-68" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-68"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.o=
rg/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 =
1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 =
2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"=
></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-resource-path"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-resource-path"><code>resource_path=
()</code></a></h4>
<p>The <code>resource_path</code> function returns the fully qualified path=
 to your application's <code>resources</code> directory. You may also use t=
he <code>resource_path</code> function to generate a fully qualified path t=
o a given file within the resources directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-69"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">resource_path</span><span style=3D"col=
or: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">resource_path</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">sass/app.scss</span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code=
></pre><button id=3D"clipButton-69" class=3D"md:block hidden copyBtn" aria-=
label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targ=
et=3D"#clipText-69"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www=
.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8=
 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 =
00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-=
3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-storage-path"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-storage-path"><code>storage_path()<=
/code></a></h4>
<p>The <code>storage_path</code> function returns the fully qualified path =
to your application's <code>storage</code> directory. You may also use the =
<code>storage_path</code> function to generate a fully qualified path to a =
given file within the storage directory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-70"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">storage_path</span><span style=3D"colo=
r: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"=
line"><span style=3D"color: #BEC5D4;">$path</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">storage_path</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">app/file.txt</span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></=
pre><button id=3D"clipButton-70" class=3D"md:block hidden copyBtn" aria-lab=
el=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-70"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h2 id=3D"urls"><a href=3D"https://laravel.com/docs/10.x/helpers#urls">URLs=
</a></h2>
<p></p>
<h4 class=3D"collection-method" id=3D"method-action"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-action"><code>action()</code></a></h4>
<p>The <code>action</code> function generates a URL for the given controlle=
r action:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-71"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> App\Http\Co=
ntrollers\</span><span style=3D"color: #FFCB8B;">HomeController</span><span=
 style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><d=
iv class=3D"line"><span style=3D"color: #BEC5D4;">$url</span><span style=3D=
"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">action</sp=
an><span style=3D"color: #BFC7D5;">([</span><span style=3D"color: #FFCB8B;"=
>HomeController</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #C792EA;">class</span><span style=3D"color: #BFC7D5;">,</span><s=
pan style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">index</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><b=
utton id=3D"clipButton-71" class=3D"md:block hidden copyBtn" aria-label=3D"=
Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cl=
ipText-71"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2=
000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 =
011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11=
a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></p=
ath></svg></button></div>
<p>If the method accepts route parameters, you may pass them as the second =
argument to the method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-72"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">action</span><span style=3D"color: #BFC=
7D5;">([</span><span style=3D"color: #FFCB8B;">UserController</span><span s=
tyle=3D"color: #89DDFF;">::</span><span style=3D"color: #C792EA;">class</sp=
an><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;">=
 </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">profile</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #BFC7D5;">],</span><span style=3D"color: #82AAFF;"> </span><span styl=
e=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DDFF;">=
=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color:=
 #F78C6C;">1</span><span style=3D"color: #BFC7D5;">]);</span></div></code><=
/pre><button id=3D"clipButton-72" class=3D"md:block hidden copyBtn" aria-la=
bel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-72"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-asset"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-asset"><code>asset()</code></a></h4>
<p>The <code>asset</code> function generates a URL for an asset using the c=
urrent scheme of the request (HTTP or HTTPS):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-73"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">asset</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">img/photo.jpg</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBu=
tton-73" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-73"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p>You can configure the asset URL host by setting the <code>ASSET_URL</cod=
e> variable in your <code>.env</code> file. This can be useful if you host =
your assets on an external service like Amazon S3 or another CDN:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-74"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ASSET_URL=3D=
http://example.com/assets</span></div><div class=3D"line">&nbsp;</div><div =
class=3D"line"><span style=3D"color: #BEC5D4;">$url</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">asset</span><=
span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #C3E88D;">img/photo.jpg</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">); </span><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> http://examp=
le.com/assets/img/photo.jpg</span></div></code></pre><button id=3D"clipButt=
on-74" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" t=
itle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-74"><svg clas=
s=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"=
0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H=
9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0=
 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button><=
/div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-route"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-route"><code>route()</code></a></h4>
<p>The <code>route</code> function generates a URL for a given <a href=3D"h=
ttps://laravel.com/docs/10.x/routing#named-routes">named route</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-75"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">route</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">route.name</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-75" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-75"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p>If the route accepts parameters, you may pass them as the second argumen=
t to the function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-76"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">route</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">route.name</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">]);</span></div></c=
ode></pre><button id=3D"clipButton-76" class=3D"md:block hidden copyBtn" ar=
ia-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-t=
arget=3D"#clipText-76"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p>By default, the <code>route</code> function generates an absolute URL. I=
f you wish to generate a relative URL, you may pass <code>false</code> as t=
he third argument to the function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-77"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">route</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">route.name</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">],</span><span styl=
e=3D"color: #82AAFF;"> false</span><span style=3D"color: #BFC7D5;">);</span=
></div></code></pre><button id=3D"clipButton-77" class=3D"md:block hidden c=
opyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-c=
lipboard-target=3D"#clipText-77"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-secure-asset"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-secure-asset"><code>secure_asset()<=
/code></a></h4>
<p>The <code>secure_asset</code> function generates a URL for an asset usin=
g HTTPS:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-78"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">secure_asset</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">img/photo.jpg</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D=
"clipButton-78" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cli=
pboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-78">=
<svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vi=
ewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1=
 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 =
2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg><=
/button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-secure-url"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-secure-url"><code>secure_url()</code>=
</a></h4>
<p>The <code>secure_url</code> function generates a fully qualified HTTPS U=
RL to the given path. Additional URL segments may be passed in the function=
's second argument:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-79"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">secure_url</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">user/profile</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</d=
iv><div class=3D"line"><span style=3D"color: #BEC5D4;">$url</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">secur=
e_url</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #C3E88D;">user/profile</span><span s=
tyle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span><s=
pan style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">[</sp=
an><span style=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">=
]);</span></div></code></pre><button id=3D"clipButton-79" class=3D"md:block=
 hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboar=
d" data-clipboard-target=3D"#clipText-79"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-to-route"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-to-route"><code>to_route()</code></a></=
h4>
<p>The <code>to_route</code> function generates a <a href=3D"https://larave=
l.com/docs/10.x/responses#redirects">redirect HTTP response</a> for a given=
 <a href=3D"https://laravel.com/docs/10.x/routing#named-routes">named route=
</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-80"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">to_route</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">users.show</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span=
 style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">user</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">]);</span></div></c=
ode></pre><button id=3D"clipButton-80" class=3D"md:block hidden copyBtn" ar=
ia-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-t=
arget=3D"#clipText-80"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p>If necessary, you may pass the HTTP status code that should be assigned =
to the redirect and any additional response headers as the third and fourth=
 arguments to the <code>to_route</code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-81"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">to_route</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">users.show</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span=
 style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #C3E88D;">user</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">],</span><span styl=
e=3D"color: #82AAFF;"> </span><span style=3D"color: #F78C6C;">302</span><sp=
an style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </spa=
n><span style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #C3E88D;">X-Framework</span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Lar=
avel</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #B=
FC7D5;">]);</span></div></code></pre><button id=3D"clipButton-81" class=3D"=
md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to =
Clipboard" data-clipboard-target=3D"#clipText-81"><svg class=3D"fill-curren=
t h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-url"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-url"><code>url()</code></a></h4>
<p>The <code>url</code> function generates a fully qualified URL to the giv=
en path:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-82"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$url</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">url</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">user/profile</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #BEC5D4;">$url</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">url</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">user/profile</span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"c=
olor: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">[</span><span style=
=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">]);</span></di=
v></code></pre><button id=3D"clipButton-82" class=3D"md:block hidden copyBt=
n" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipbo=
ard-target=3D"#clipText-82"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p>If no path is provided, an <code>Illuminate\Routing\UrlGenerator</code> =
instance is returned:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-83"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$current</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #82AAFF;">url</span><span style=3D"color: #BF=
C7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"=
color: #82AAFF;">current</span><span style=3D"color: #BFC7D5;">();</span></=
div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"colo=
r: #BEC5D4;">$full</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #82AAFF;">url</span><span style=3D"color: #BFC7D5;">()</=
span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82A=
AFF;">full</span><span style=3D"color: #BFC7D5;">();</span></div><div class=
=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$=
previous</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #82AAFF;">url</span><span style=3D"color: #BFC7D5;">()</span><sp=
an style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">pr=
evious</span><span style=3D"color: #BFC7D5;">();</span></div></code></pre><=
button id=3D"clipButton-83" class=3D"md:block hidden copyBtn" aria-label=3D=
"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#c=
lipText-83"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/=
2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0=
 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v1=
1a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></=
path></svg></button></div>
<p></p>
<h2 id=3D"miscellaneous"><a href=3D"https://laravel.com/docs/10.x/helpers#m=
iscellaneous">Miscellaneous</a></h2>
<p></p>
<h4 class=3D"collection-method" id=3D"method-abort"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-abort"><code>abort()</code></a></h4>
<p>The <code>abort</code> function throws <a href=3D"https://laravel.com/do=
cs/10.x/errors#http-exceptions">an HTTP exception</a> which will be rendere=
d by the <a href=3D"https://laravel.com/docs/10.x/errors#the-exception-hand=
ler">exception handler</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-84"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">abort</span><span style=3D"color: #BFC7D5;">(</span><s=
pan style=3D"color: #F78C6C;">403</span><span style=3D"color: #BFC7D5;">);<=
/span></div></code></pre><button id=3D"clipButton-84" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-84"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also provide the exception's message and custom HTTP response he=
aders that should be sent to the browser:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-85"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">abort</span><span style=3D"color: #BFC7D5;">(</span><s=
pan style=3D"color: #F78C6C;">403</span><span style=3D"color: #BFC7D5;">,</=
span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #C3E88D;">Unauthorized.</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span><span =
style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><=
span style=3D"color: #BEC5D4;">headers</span><span style=3D"color: #BFC7D5;=
">);</span></div></code></pre><button id=3D"clipButton-85" class=3D"md:bloc=
k hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboa=
rd" data-clipboard-target=3D"#clipText-85"><svg class=3D"fill-current h-5 w=
-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curr=
entColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path=
><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3=
 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-abort-if"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-abort-if"><code>abort_if()</code></a></=
h4>
<p>The <code>abort_if</code> function throws an HTTP exception if a given b=
oolean expression evaluates to <code>true</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-86"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">abort_if</span><span style=3D"color: #BFC7D5;">(</span=
><span style=3D"color: #C792EA;">!</span><span style=3D"color: #82AAFF;"> <=
/span><span style=3D"color: #FFCB8B;">Auth</span><span style=3D"color: #89D=
DFF;">::</span><span style=3D"color: #82AAFF;">user</span><span style=3D"co=
lor: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span s=
tyle=3D"color: #82AAFF;">isAdmin</span><span style=3D"color: #BFC7D5;">(),<=
/span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #F78C6C=
;">403</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><b=
utton id=3D"clipButton-86" class=3D"md:block hidden copyBtn" aria-label=3D"=
Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cl=
ipText-86"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2=
000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 =
011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11=
a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></p=
ath></svg></button></div>
<p>Like the <code>abort</code> method, you may also provide the exception's=
 response text as the third argument and an array of custom response header=
s as the fourth argument to the function.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-abort-unless"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-abort-unless"><code>abort_unless()<=
/code></a></h4>
<p>The <code>abort_unless</code> function throws an HTTP exception if a giv=
en boolean expression evaluates to <code>false</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-87"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">abort_unless</span><span style=3D"color: #BFC7D5;">(</=
span><span style=3D"color: #FFCB8B;">Auth</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">user</span><span style=3D"col=
or: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span st=
yle=3D"color: #82AAFF;">isAdmin</span><span style=3D"color: #BFC7D5;">(),</=
span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #F78C6C;=
">403</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><bu=
tton id=3D"clipButton-87" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-87"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/20=
00/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 0=
11-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a=
2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pa=
th></svg></button></div>
<p>Like the <code>abort</code> method, you may also provide the exception's=
 response text as the third argument and an array of custom response header=
s as the fourth argument to the function.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-app"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-app"><code>app()</code></a></h4>
<p>The <code>app</code> function returns the <a href=3D"https://laravel.com=
/docs/10.x/container">service container</a> instance:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-88"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$container</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #82AAFF;">app</span><span style=3D"color: #=
BFC7D5;">();</span></div></code></pre><button id=3D"clipButton-88" class=3D=
"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to=
 Clipboard" data-clipboard-target=3D"#clipText-88"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may pass a class or interface name to resolve it from the container:=
</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-89"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$api</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">app</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">HelpSpot\API</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-89" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-89"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-auth"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-auth"><code>auth()</code></a></h4>
<p>The <code>auth</code> function returns an <a href=3D"https://laravel.com=
/docs/10.x/authentication">authenticator</a> instance. You may use it as an=
 alternative to the <code>Auth</code> facade:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-90"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">auth</span><span style=3D"color: #BFC7=
D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"co=
lor: #82AAFF;">user</span><span style=3D"color: #BFC7D5;">();</span></div><=
/code></pre><button id=3D"clipButton-90" class=3D"md:block hidden copyBtn" =
aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard=
-target=3D"#clipText-90"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http:=
//www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p>If needed, you may specify which guard instance you would like to access=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-91"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">auth</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">admin</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">user</span><span style=3D"color: #BFC7D5;">()=
;</span></div></code></pre><button id=3D"clipButton-91" class=3D"md:block h=
idden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard"=
 data-clipboard-target=3D"#clipText-91"><svg class=3D"fill-current h-5 w-5"=
 xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"current=
Color"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><p=
ath d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 =
0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-back"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-back"><code>back()</code></a></h4>
<p>The <code>back</code> function generates a <a href=3D"https://laravel.co=
m/docs/10.x/responses#redirects">redirect HTTP response</a> to the user's p=
revious location:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-92"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">back</span><span style=3D"color: #BFC7D5;">(=
$</span><span style=3D"color: #BEC5D4;">status</span><span style=3D"color: =
#82AAFF;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"=
color: #82AAFF;"> </span><span style=3D"color: #F78C6C;">302</span><span st=
yle=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">header=
s</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #C792=
EA;">=3D</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color=
: #BFC7D5;">[],</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">fallback</span=
><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #C792EA;">=
=3D</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">/</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div cla=
ss=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #C792EA;"=
>return</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #82AAFF;">back</span><span style=3D"color: #BFC7D5;">();</span></div></cod=
e></pre><button id=3D"clipButton-92" class=3D"md:block hidden copyBtn" aria=
-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-tar=
get=3D"#clipText-92"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://ww=
w.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M=
8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0=
 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01=
-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-bcrypt"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-bcrypt"><code>bcrypt()</code></a></h4>
<p>The <code>bcrypt</code> function <a href=3D"https://laravel.com/docs/10.=
x/hashing">hashes</a> the given value using Bcrypt. You may use this functi=
on as an alternative to the <code>Hash</code> facade:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-93"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$password</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #82AAFF;">bcrypt</span><span style=3D"color:=
 #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #C3E88D;">my-secret-password</span><span style=3D"color: #D9F5DD;">'<=
/span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button i=
d=3D"clipButton-93" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to=
 Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-=
93"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg=
" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2=
a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 =
002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></s=
vg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-blank"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-blank"><code>blank()</code></a></h4>
<p>The <code>blank</code> function determines whether the given value is "b=
lank":</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-94"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">blank</span><span style=3D"color: #BFC7D5;">(</span><s=
pan style=3D"color: #D9F5DD;">''</span><span style=3D"color: #BFC7D5;">);</=
span></div><div class=3D"line"><span style=3D"color: #82AAFF;">blank</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">   </span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"li=
ne"><span style=3D"color: #82AAFF;">blank</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #82AAFF;">null</span><span style=3D"colo=
r: #BFC7D5;">);</span></div><div class=3D"line"><span style=3D"color: #82AA=
FF;">blank</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"col=
or: #82AAFF;">collect</span><span style=3D"color: #BFC7D5;">());</span></di=
v><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color:=
 #697098;">//</span><span style=3D"color: #697098;"> true</span></div><div =
class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #82AAF=
F;">blank</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"colo=
r: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div><div cl=
ass=3D"line"><span style=3D"color: #82AAFF;">blank</span><span style=3D"col=
or: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">true</span><span styl=
e=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span style=3D"col=
or: #82AAFF;">blank</span><span style=3D"color: #BFC7D5;">(</span><span sty=
le=3D"color: #82AAFF;">false</span><span style=3D"color: #BFC7D5;">);</span=
></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"c=
olor: #697098;">//</span><span style=3D"color: #697098;"> false</span></div=
></code></pre><button id=3D"clipButton-94" class=3D"md:block hidden copyBtn=
" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboa=
rd-target=3D"#clipText-94"><svg class=3D"fill-current h-5 w-5" xmlns=3D"htt=
p://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path =
d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3=
a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 =
3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>blank</code>, see the <a href=3D"https://larave=
l.com/docs/10.x/helpers#method-filled"><code>filled</code></a> method.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-broadcast"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-broadcast"><code>broadcast()</code></a=
></h4>
<p>The <code>broadcast</code> function <a href=3D"https://laravel.com/docs/=
10.x/broadcasting">broadcasts</a> the given <a href=3D"https://laravel.com/=
docs/10.x/events">event</a> to its listeners:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-95"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">broadcast</span><span style=3D"color: #BFC7D5;">(</spa=
n><span style=3D"color: #89DDFF;">new</span><span style=3D"color: #82AAFF;"=
> </span><span style=3D"color: #FFCB8B;">UserRegistered</span><span style=
=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">user</span><s=
pan style=3D"color: #BFC7D5;">));</span></div><div class=3D"line">&nbsp;</d=
iv><div class=3D"line"><span style=3D"color: #82AAFF;">broadcast</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #89DDFF;">new</sp=
an><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #FFCB8B;">=
UserRegistered</span><span style=3D"color: #BFC7D5;">($</span><span style=
=3D"color: #BEC5D4;">user</span><span style=3D"color: #BFC7D5;">))</span><s=
pan style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">t=
oOthers</span><span style=3D"color: #BFC7D5;">();</span></div></code></pre>=
<button id=3D"clipButton-95" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-95"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.o=
rg/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 =
1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 =
2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"=
></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-cache"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-cache"><code>cache()</code></a></h4>
<p>The <code>cache</code> function may be used to get values from the <a hr=
ef=3D"https://laravel.com/docs/10.x/cache">cache</a>. If the given key does=
 not exist in the cache, an optional default value will be returned:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-96"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">cache</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">key</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div cl=
ass=3D"line"><span style=3D"color: #BEC5D4;">$value</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">cache</span><=
span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #C3E88D;">key</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #8=
2AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">default</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-96" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-96"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p>You may add items to the cache by passing an array of key / value pairs =
to the function. You should also pass the number of seconds or duration the=
 cached value should be considered valid:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-97"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">cache</span><span style=3D"color: #BFC7D5;">([</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">key<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #82AAFF=
;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"col=
or: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">value</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;">],</span><span style=3D"color: #82AAFF;"> </s=
pan><span style=3D"color: #F78C6C;">300</span><span style=3D"color: #BFC7D5=
;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span=
 style=3D"color: #82AAFF;">cache</span><span style=3D"color: #BFC7D5;">([</=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;=
">key</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
82AAFF;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">value</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">],</span><span style=3D"color: #82AAFF;"=
> now</span><span style=3D"color: #BFC7D5;">()</span><span style=3D"color: =
#89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">addSeconds</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">10</spa=
n><span style=3D"color: #BFC7D5;">));</span></div></code></pre><button id=
=3D"clipButton-97" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-9=
7"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-class-uses-recursive"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-class-uses-recursive"><cod=
e>class_uses_recursive()</code></a></h4>
<p>The <code>class_uses_recursive</code> function returns all traits used b=
y a class, including traits used by all of its parent classes:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-98"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$traits</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">class_uses_recursive</span><span sty=
le=3D"color: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">App</span><s=
pan style=3D"color: #BFC7D5;">\</span><span style=3D"color: #82AAFF;">Model=
s</span><span style=3D"color: #BFC7D5;">\</span><span style=3D"color: #FFCB=
8B;">User</span><span style=3D"color: #89DDFF;">::</span><span style=3D"col=
or: #C792EA;">class</span><span style=3D"color: #BFC7D5;">);</span></div></=
code></pre><button id=3D"clipButton-98" class=3D"md:block hidden copyBtn" a=
ria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-=
target=3D"#clipText-98"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http:/=
/www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-collect"><a href=3D"https://la=
ravel.com/docs/10.x/helpers#method-collect"><code>collect()</code></a></h4>
<p>The <code>collect</code> function creates a <a href=3D"https://laravel.c=
om/docs/10.x/collections">collection</a> instance from the given value:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-99"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$collection</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #82AAFF;">collect</span><span style=3D"col=
or: #BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">taylor</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;"=
>abigail</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #BFC7D5;">]);</span></div></code></pre><button id=3D"clipButton-99" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-99"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-config"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-config"><code>config()</code></a></h4>
<p>The <code>config</code> function gets the value of a <a href=3D"https://=
laravel.com/docs/10.x/configuration">configuration</a> variable. The config=
uration values may be accessed using "dot" syntax, which includes the name =
of the file and the option you wish to access. A default value may be speci=
fied and is returned if the configuration option does not exist:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-100"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">config</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">app.timezone</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div=
><div class=3D"line"><span style=3D"color: #BEC5D4;">$value</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">confi=
g</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">app.timezone</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span><span =
style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><=
span style=3D"color: #BEC5D4;">default</span><span style=3D"color: #BFC7D5;=
">);</span></div></code></pre><button id=3D"clipButton-100" class=3D"md:blo=
ck hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipbo=
ard" data-clipboard-target=3D"#clipText-100"><svg class=3D"fill-current h-5=
 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pa=
th><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2=
 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may set configuration variables at runtime by passing an array of ke=
y / value pairs. However, note that this function only affects the configur=
ation value for the current request and does not update your actual configu=
ration values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-101"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">config</span><span style=3D"color: #BFC7D5;">([</span>=
<span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">app=
.debug</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#82AAFF;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #82AAFF;"> true</span><span style=3D"color: #BFC7D5;">]);</span>=
</div></code></pre><button id=3D"clipButton-101" class=3D"md:block hidden c=
opyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-c=
lipboard-target=3D"#clipText-101"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-cookie"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-cookie"><code>cookie()</code></a></h4>
<p>The <code>cookie</code> function creates a new <a href=3D"https://larave=
l.com/docs/10.x/requests#cookies">cookie</a> instance:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-102"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$cookie</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">cookie</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">value</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"=
>,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC=
7D5;">$</span><span style=3D"color: #BEC5D4;">minutes</span><span style=3D"=
color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-102" =
class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D=
"Copy to Clipboard" data-clipboard-target=3D"#clipText-102"><svg class=3D"f=
ill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20=
 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 =
0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2=
V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-csrf-field"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-csrf-field"><code>csrf_field()</code>=
</a></h4>
<p>The <code>csrf_field</code> function generates an HTML <code>hidden</cod=
e> input field containing the value of the CSRF token. For example, using <=
a href=3D"https://laravel.com/docs/10.x/blade">Blade syntax</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-103"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BFC7D5;">{{ </span><span style=3D"color: #82AAFF;">csrf_field</=
span><span style=3D"color: #BFC7D5;">() }}</span></div></code></pre><button=
 id=3D"clipButton-103" class=3D"md:block hidden copyBtn" aria-label=3D"Copy=
 to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipTe=
xt-103"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000=
/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011=
-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 =
2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path=
></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-csrf-token"><a href=3D"https:/=
/laravel.com/docs/10.x/helpers#method-csrf-token"><code>csrf_token()</code>=
</a></h4>
<p>The <code>csrf_token</code> function retrieves the value of the current =
CSRF token:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-104"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$token</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">csrf_token</span><span style=3D"color=
: #BFC7D5;">();</span></div></code></pre><button id=3D"clipButton-104" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-104"><svg class=3D"fill-=
current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20"=
 fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01=
-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2=
 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-decrypt"><a href=3D"https://la=
ravel.com/docs/10.x/helpers#method-decrypt"><code>decrypt()</code></a></h4>
<p>The <code>decrypt</code> function <a href=3D"https://laravel.com/docs/10=
.x/encryption">decrypts</a> the given value. You may use this function as a=
n alternative to the <code>Crypt</code> facade:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-105"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$password</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #82AAFF;">decrypt</span><span style=3D"color=
: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">value</span><span styl=
e=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-=
105" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" tit=
le=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-105"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-dd"><a href=3D"https://laravel=
.com/docs/10.x/helpers#method-dd"><code>dd()</code></a></h4>
<p>The <code>dd</code> function dumps the given variables and ends the exec=
ution of the script:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-106"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">dd</span><span style=3D"color: #BFC7D5;">($</span><spa=
n style=3D"color: #BEC5D4;">value</span><span style=3D"color: #BFC7D5;">);<=
/span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=
=3D"color: #82AAFF;">dd</span><span style=3D"color: #BFC7D5;">($</span><spa=
n style=3D"color: #BEC5D4;">value1</span><span style=3D"color: #BFC7D5;">,<=
/span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5=
;">$</span><span style=3D"color: #BEC5D4;">value2</span><span style=3D"colo=
r: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D=
"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">value3</span><spa=
n style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span=
><span style=3D"color: #89DDFF;">...</span><span style=3D"color: #BFC7D5;">=
);</span></div></code></pre><button id=3D"clipButton-106" class=3D"md:block=
 hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboar=
d" data-clipboard-target=3D"#clipText-106"><svg class=3D"fill-current h-5 w=
-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curr=
entColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path=
><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3=
 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you do not want to halt the execution of your script, use the <a href=
=3D"https://laravel.com/docs/10.x/helpers#method-dump"><code>dump</code></a=
> function instead.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-dispatch"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-dispatch"><code>dispatch()</code></a></=
h4>
<p>The <code>dispatch</code> function pushes the given <a href=3D"https://l=
aravel.com/docs/10.x/queues#creating-jobs">job</a> onto the Laravel <a href=
=3D"https://laravel.com/docs/10.x/queues">job queue</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-107"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">dispatch</span><span style=3D"color: #BFC7D5;">(</span=
><span style=3D"color: #89DDFF;">new</span><span style=3D"color: #82AAFF;">=
 App</span><span style=3D"color: #BFC7D5;">\</span><span style=3D"color: #8=
2AAFF;">Jobs</span><span style=3D"color: #BFC7D5;">\</span><span style=3D"c=
olor: #FFCB8B;">SendEmails</span><span style=3D"color: #BFC7D5;">);</span><=
/div></code></pre><button id=3D"clipButton-107" class=3D"md:block hidden co=
pyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cl=
ipboard-target=3D"#clipText-107"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-dispatch-sync"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-dispatch-sync"><code>dispatch_sync=
()</code></a></h4>
<p>The <code>dispatch_sync</code> function pushes the given job to the <a h=
ref=3D"https://laravel.com/docs/10.x/queues#synchronous-dispatching">sync</=
a> queue so that it is processed immediately:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-108"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">dispatch_sync</span><span style=3D"color: #BFC7D5;">(<=
/span><span style=3D"color: #89DDFF;">new</span><span style=3D"color: #82AA=
FF;"> App</span><span style=3D"color: #BFC7D5;">\</span><span style=3D"colo=
r: #82AAFF;">Jobs</span><span style=3D"color: #BFC7D5;">\</span><span style=
=3D"color: #FFCB8B;">SendEmails</span><span style=3D"color: #BFC7D5;">);</s=
pan></div></code></pre><button id=3D"clipButton-108" class=3D"md:block hidd=
en copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" da=
ta-clipboard-target=3D"#clipText-108"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-dump"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-dump"><code>dump()</code></a></h4>
<p>The <code>dump</code> function dumps the given variables:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-109"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">dump</span><span style=3D"color: #BFC7D5;">($</span><s=
pan style=3D"color: #BEC5D4;">value</span><span style=3D"color: #BFC7D5;">)=
;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span sty=
le=3D"color: #82AAFF;">dump</span><span style=3D"color: #BFC7D5;">($</span>=
<span style=3D"color: #BEC5D4;">value1</span><span style=3D"color: #BFC7D5;=
">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BF=
C7D5;">$</span><span style=3D"color: #BEC5D4;">value2</span><span style=3D"=
color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span styl=
e=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">value3</span>=
<span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </=
span><span style=3D"color: #89DDFF;">...</span><span style=3D"color: #BFC7D=
5;">);</span></div></code></pre><button id=3D"clipButton-109" class=3D"md:b=
lock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clip=
board" data-clipboard-target=3D"#clipText-109"><svg class=3D"fill-current h=
-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"=
currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></=
path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2=
-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you want to stop executing the script after dumping the variables, us=
e the <a href=3D"https://laravel.com/docs/10.x/helpers#method-dd"><code>dd<=
/code></a> function instead.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-encrypt"><a href=3D"https://la=
ravel.com/docs/10.x/helpers#method-encrypt"><code>encrypt()</code></a></h4>
<p>The <code>encrypt</code> function <a href=3D"https://laravel.com/docs/10=
.x/encryption">encrypts</a> the given value. You may use this function as a=
n alternative to the <code>Crypt</code> facade:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-110"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$secret</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">encrypt</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">my-secret-value</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D=
"clipButton-110" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cl=
ipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-110=
"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" =
viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1=
 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 00=
2 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg=
></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-env"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-env"><code>env()</code></a></h4>
<p>The <code>env</code> function retrieves the value of an <a href=3D"https=
://laravel.com/docs/10.x/configuration#environment-configuration">environme=
nt variable</a> or returns a default value:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-111"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$env</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">env</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">APP_ENV</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div cl=
ass=3D"line"><span style=3D"color: #BEC5D4;">$env</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">env</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">APP_ENV</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #=
82AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">production</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipB=
utton-111" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-111"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>If you execute the <code>config:cache</code> command during your deploymen=
t process, you should be sure that you are only calling the <code>env</code=
> function from within your configuration files. Once the configuration has=
 been cached, the <code>.env</code> file will not be loaded and all calls t=
o the <code>env</code> function will return <code>null</code>.</p></div>
</blockquote>
<p></p>
<h4 class=3D"collection-method" id=3D"method-event"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-event"><code>event()</code></a></h4>
<p>The <code>event</code> function dispatches the given <a href=3D"https://=
laravel.com/docs/10.x/events">event</a> to its listeners:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-112"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">event</span><span style=3D"color: #BFC7D5;">(</span><s=
pan style=3D"color: #89DDFF;">new</span><span style=3D"color: #82AAFF;"> </=
span><span style=3D"color: #FFCB8B;">UserRegistered</span><span style=3D"co=
lor: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">user</span><span st=
yle=3D"color: #BFC7D5;">));</span></div></code></pre><button id=3D"clipButt=
on-112" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-112"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-fake"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-fake"><code>fake()</code></a></h4>
<p>The <code>fake</code> function resolves a <a href=3D"https://github.com/=
FakerPHP/Faker">Faker</a> singleton from the container, which can be useful=
 when creating fake data in model factories, database seeding, tests, and p=
rototyping views:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"blade" class=3D"torchlight" style=3D"background-col=
or: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-113">=
<!-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span styl=
e=3D"color: #C792EA;">@for</span><span style=3D"color: #BFC7D5;">(</span><s=
pan style=3D"color: #BEC5D4;">$i</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #F78C6C;">0</span><span style=3D"color: #B=
FC7D5;">; </span><span style=3D"color: #BEC5D4;">$i</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">&lt;</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">10</span><sp=
an style=3D"color: #BFC7D5;">; </span><span style=3D"color: #BEC5D4;">$i</s=
pan><span style=3D"color: #89DDFF;">++</span><span style=3D"color: #BFC7D5;=
">)</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </s=
pan><span style=3D"color: #89DDFF;">&lt;</span><span style=3D"color: #FF557=
2;">dl</span><span style=3D"color: #89DDFF;">&gt;</span></div><div class=3D=
"line"><span style=3D"color: #BFC7D5;">        </span><span style=3D"color:=
 #89DDFF;">&lt;</span><span style=3D"color: #FF5572;">dt</span><span style=
=3D"color: #89DDFF;">&gt;</span><span style=3D"color: #BFC7D5;">Name</span>=
<span style=3D"color: #89DDFF;">&lt;/</span><span style=3D"color: #FF5572;"=
>dt</span><span style=3D"color: #89DDFF;">&gt;</span></div><div class=3D"li=
ne"><span style=3D"color: #BFC7D5;">        </span><span style=3D"color: #8=
9DDFF;">&lt;</span><span style=3D"color: #FF5572;">dd</span><span style=3D"=
color: #89DDFF;">&gt;{{</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #82AAFF;">fake</span><span style=3D"color: #BFC7D5;">()</s=
pan><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AA=
FF;">name</span><span style=3D"color: #BFC7D5;">() </span><span style=3D"co=
lor: #89DDFF;">}}&lt;/</span><span style=3D"color: #FF5572;">dd</span><span=
 style=3D"color: #89DDFF;">&gt;</span></div><div class=3D"line">&nbsp;</div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span s=
tyle=3D"color: #89DDFF;">&lt;</span><span style=3D"color: #FF5572;">dt</spa=
n><span style=3D"color: #89DDFF;">&gt;</span><span style=3D"color: #BFC7D5;=
">Email</span><span style=3D"color: #89DDFF;">&lt;/</span><span style=3D"co=
lor: #FF5572;">dt</span><span style=3D"color: #89DDFF;">&gt;</span></div><d=
iv class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span styl=
e=3D"color: #89DDFF;">&lt;</span><span style=3D"color: #FF5572;">dd</span><=
span style=3D"color: #89DDFF;">&gt;{{</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #82AAFF;">fake</span><span style=3D"color: #=
BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">unique</span><span style=3D"color: #BFC7D5;">()</span>=
<span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;"=
>safeEmail</span><span style=3D"color: #BFC7D5;">() </span><span style=3D"c=
olor: #89DDFF;">}}&lt;/</span><span style=3D"color: #FF5572;">dd</span><spa=
n style=3D"color: #89DDFF;">&gt;</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">    </span><span style=3D"color: #89DDFF;">&lt;/</spa=
n><span style=3D"color: #FF5572;">dl</span><span style=3D"color: #89DDFF;">=
&gt;</span></div><div class=3D"line"><span style=3D"color: #C792EA;">@endfo=
r</span></div></code></pre><button id=3D"clipButton-113" class=3D"md:block =
hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard=
" data-clipboard-target=3D"#clipText-113"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>By default, the <code>fake</code> function will utilize the <code>app.fa=
ker_locale</code> configuration option in your <code>config/app.php</code> =
configuration file; however, you may also specify the locale by passing it =
to the <code>fake</code> function. Each locale will resolve an individual s=
ingleton:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-114"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">fake</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">nl_NL<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5=
;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color=
: #82AAFF;">name</span><span style=3D"color: #BFC7D5;">()</span></div></cod=
e></pre><button id=3D"clipButton-114" class=3D"md:block hidden copyBtn" ari=
a-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-ta=
rget=3D"#clipText-114"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-filled"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-filled"><code>filled()</code></a></h4>
<p>The <code>filled</code> function determines whether the given value is n=
ot "blank":</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-115"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">filled</span><span style=3D"color: #BFC7D5;">(</span><=
span style=3D"color: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</=
span></div><div class=3D"line"><span style=3D"color: #82AAFF;">filled</span=
><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">tr=
ue</span><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"=
><span style=3D"color: #82AAFF;">filled</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #82AAFF;">false</span><span style=3D"color=
: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"li=
ne"><span style=3D"color: #697098;">//</span><span style=3D"color: #697098;=
"> true</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><sp=
an style=3D"color: #82AAFF;">filled</span><span style=3D"color: #BFC7D5;">(=
</span><span style=3D"color: #D9F5DD;">''</span><span style=3D"color: #BFC7=
D5;">);</span></div><div class=3D"line"><span style=3D"color: #82AAFF;">fil=
led</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #C3E88D;">   </span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div c=
lass=3D"line"><span style=3D"color: #82AAFF;">filled</span><span style=3D"c=
olor: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">null</span><span st=
yle=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span style=3D"c=
olor: #82AAFF;">filled</span><span style=3D"color: #BFC7D5;">(</span><span =
style=3D"color: #82AAFF;">collect</span><span style=3D"color: #BFC7D5;">())=
;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span sty=
le=3D"color: #697098;">//</span><span style=3D"color: #697098;"> false</spa=
n></div></code></pre><button id=3D"clipButton-115" class=3D"md:block hidden=
 copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data=
-clipboard-target=3D"#clipText-115"><svg class=3D"fill-current h-5 w-5" xml=
ns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColo=
r"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path =
d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01=
-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For the inverse of <code>filled</code>, see the <a href=3D"https://larav=
el.com/docs/10.x/helpers#method-blank"><code>blank</code></a> method.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"method-info"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-info"><code>info()</code></a></h4>
<p>The <code>info</code> function will write information to your applicatio=
n's <a href=3D"https://laravel.com/docs/10.x/logging">log</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-116"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">info</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Some h=
elpful information!</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton=
-116" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-116"><svg clas=
s=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"=
0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H=
9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0=
 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button><=
/div>
<p>An array of contextual data may also be passed to the function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-117"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">info</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">User l=
ogin attempt failed.</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DD=
FF;">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">user</span><span st=
yle=3D"color: #89DDFF;">-&gt;id</span><span style=3D"color: #BFC7D5;">]);</=
span></div></code></pre><button id=3D"clipButton-117" class=3D"md:block hid=
den copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" d=
ata-clipboard-target=3D"#clipText-117"><svg class=3D"fill-current h-5 w-5" =
xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentC=
olor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pa=
th d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0=
 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-logger"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-logger"><code>logger()</code></a></h4>
<p>The <code>logger</code> function can be used to write a <code>debug</cod=
e> level message to the <a href=3D"https://laravel.com/docs/10.x/logging">l=
og</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-118"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">logger</span><span style=3D"color: #BFC7D5;">(</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Debu=
g message</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-118" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-118"><svg class=3D"fill-=
current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20"=
 fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01=
-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2=
 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>An array of contextual data may also be passed to the function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-119"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">logger</span><span style=3D"color: #BFC7D5;">(</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">User=
 has logged in.</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span =
style=3D"color: #BFC7D5;">[</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DDFF;=
">=3D&gt;</span><span style=3D"color: #82AAFF;"> </span><span style=3D"colo=
r: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">user</span><span style=
=3D"color: #89DDFF;">-&gt;id</span><span style=3D"color: #BFC7D5;">]);</spa=
n></div></code></pre><button id=3D"clipButton-119" class=3D"md:block hidden=
 copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data=
-clipboard-target=3D"#clipText-119"><svg class=3D"fill-current h-5 w-5" xml=
ns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColo=
r"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path =
d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01=
-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A <a href=3D"https://laravel.com/docs/10.x/errors#logging">logger</a> in=
stance will be returned if no value is passed to the function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-120"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">logger</span><span style=3D"color: #BFC7D5;">()</span>=
<span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;"=
>error</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: =
#D9F5DD;">'</span><span style=3D"color: #C3E88D;">You are not allowed here.=
</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D=
5;">);</span></div></code></pre><button id=3D"clipButton-120" class=3D"md:b=
lock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clip=
board" data-clipboard-target=3D"#clipText-120"><svg class=3D"fill-current h=
-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"=
currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></=
path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2=
-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-method-field"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-method-field"><code>method_field()<=
/code></a></h4>
<p>The <code>method_field</code> function generates an HTML <code>hidden</c=
ode> input field containing the spoofed value of the form's HTTP verb. For =
example, using <a href=3D"https://laravel.com/docs/10.x/blade">Blade syntax=
</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-121"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">&lt;</span><span style=3D"color: #82AAFF;">form</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">met=
hod</span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #=
D9F5DD;">"</span><span style=3D"color: #C3E88D;">POST</span><span style=3D"=
color: #D9F5DD;">"</span><span style=3D"color: #C792EA;">&gt;</span></div><=
div class=3D"line"><span style=3D"color: #BFC7D5;">    {{ </span><span styl=
e=3D"color: #82AAFF;">method_field</span><span style=3D"color: #BFC7D5;">(<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C792EA=
;">DELETE</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #BFC7D5;">) }}</span></div><div class=3D"line"><span style=3D"color: #C7=
92EA;">&lt;</span><span style=3D"color: #89DDFF;">/</span><span style=3D"co=
lor: #82AAFF;">form</span><span style=3D"color: #C792EA;">&gt;</span></div>=
</code></pre><button id=3D"clipButton-121" class=3D"md:block hidden copyBtn=
" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboa=
rd-target=3D"#clipText-121"><svg class=3D"fill-current h-5 w-5" xmlns=3D"ht=
tp://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path=
 d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 =
3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3=
 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-now"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-now"><code>now()</code></a></h4>
<p>The <code>now</code> function creates a new <code>Illuminate\Support\Car=
bon</code> instance for the current time:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-122"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$now</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">now</span><span style=3D"color: #BFC7D5=
;">();</span></div></code></pre><button id=3D"clipButton-122" class=3D"md:b=
lock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clip=
board" data-clipboard-target=3D"#clipText-122"><svg class=3D"fill-current h=
-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"=
currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></=
path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2=
-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-old"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-old"><code>old()</code></a></h4>
<p>The <code>old</code> function <a href=3D"https://laravel.com/docs/10.x/r=
equests#retrieving-input">retrieves</a> an <a href=3D"https://laravel.com/d=
ocs/10.x/requests#old-input">old input</a> value flashed into the session:<=
/p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-123"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">old</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">value</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div cl=
ass=3D"line"><span style=3D"color: #BEC5D4;">$value</span><span style=3D"co=
lor: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">old</span><sp=
an style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #C3E88D;">value</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #8=
2AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">default</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-123" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" t=
itle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-123"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p>Since the "default value" provided as the second argument to the <code>o=
ld</code> function is often an attribute of an Eloquent model, Laravel allo=
ws you to simply pass the entire Eloquent model as the second argument to t=
he <code>old</code> function. When doing so, Laravel will assume the first =
argument provided to the <code>old</code> function is the name of the Eloqu=
ent attribute that should be considered the "default value":</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-124"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BFC7D5;">{{ </span><span style=3D"color: #82AAFF;">old</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">name</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #8=
2AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><span style=3D"colo=
r: #BEC5D4;">user</span><span style=3D"color: #89DDFF;">-&gt;name</span><sp=
an style=3D"color: #BFC7D5;">) }}</span></div><div class=3D"line">&nbsp;</d=
iv><div class=3D"line"><span style=3D"color: #697098;">//</span><span style=
=3D"color: #697098;"> Is equivalent to...</span></div><div class=3D"line">&=
nbsp;</div><div class=3D"line"><span style=3D"color: #BFC7D5;">{{ </span><s=
pan style=3D"color: #82AAFF;">old</span><span style=3D"color: #BFC7D5;">(</=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;=
">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"co=
lor: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">user</span><span sty=
le=3D"color: #BFC7D5;">) }}</span></div></code></pre><button id=3D"clipButt=
on-124" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-124"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-optional"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-optional"><code>optional()</code></a></=
h4>
<p>The <code>optional</code> function accepts any argument and allows you t=
o access properties or call methods on that object. If the given object is =
<code>null</code>, properties and methods will return <code>null</code> ins=
tead of causing an error:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-125"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">optional</span><span style=3D"color: #BFC7D5=
;">($</span><span style=3D"color: #BEC5D4;">user</span><span style=3D"color=
: #89DDFF;">-&gt;address</span><span style=3D"color: #BFC7D5;">)</span><spa=
n style=3D"color: #89DDFF;">-&gt;street</span><span style=3D"color: #BFC7D5=
;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">{</span><span style=3D"color: #C792EA;">!!</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">old=
</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #C3E88D;">name</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">,</span><span style=3D"=
color: #82AAFF;"> optional</span><span style=3D"color: #BFC7D5;">($</span><=
span style=3D"color: #BEC5D4;">user</span><span style=3D"color: #BFC7D5;">)=
</span><span style=3D"color: #89DDFF;">-&gt;name</span><span style=3D"color=
: #BFC7D5;">) </span><span style=3D"color: #C792EA;">!!</span><span style=
=3D"color: #BFC7D5;">}</span></div></code></pre><button id=3D"clipButton-12=
5" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-125"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p>The <code>optional</code> function also accepts a closure as its second =
argument. The closure will be invoked if the value provided as the first ar=
gument is not null:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-126"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">optional</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #FFCB8B;">User</span><span style=3D"color:=
 #89DDFF;">::</span><span style=3D"color: #82AAFF;">find</span><span style=
=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">id</span><spa=
n style=3D"color: #BFC7D5;">),</span><span style=3D"color: #82AAFF;"> </spa=
n><span style=3D"color: #C792EA;">function</span><span style=3D"color: #82A=
AFF;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"color:=
 #FFCB8B;">User</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">user</span><sp=
an style=3D"color: #D9F5DD;">)</span><span style=3D"color: #82AAFF;"> </spa=
n><span style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span s=
tyle=3D"color: #82AAFF;">    </span><span style=3D"color: #C792EA;">return<=
/span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5=
;">$</span><span style=3D"color: #BEC5D4;">user</span><span style=3D"color:=
 #89DDFF;">-&gt;name</span><span style=3D"color: #BFC7D5;">;</span></div><d=
iv class=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code></=
pre><button id=3D"clipButton-126" class=3D"md:block hidden copyBtn" aria-la=
bel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-126"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.=
w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 =
3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 0=
0-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3=
-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-policy"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-policy"><code>policy()</code></a></h4>
<p>The <code>policy</code> method retrieves a <a href=3D"https://laravel.co=
m/docs/10.x/authorization#creating-policies">policy</a> instance for a give=
n class:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-127"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$policy</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">policy</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #82AAFF;">App</span><span style=3D"c=
olor: #BFC7D5;">\</span><span style=3D"color: #82AAFF;">Models</span><span =
style=3D"color: #BFC7D5;">\</span><span style=3D"color: #FFCB8B;">User</spa=
n><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #C792EA;">=
class</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><bu=
tton id=3D"clipButton-127" class=3D"md:block hidden copyBtn" aria-label=3D"=
Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cl=
ipText-127"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/=
2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0=
 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v1=
1a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></=
path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-redirect"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-redirect"><code>redirect()</code></a></=
h4>
<p>The <code>redirect</code> function returns a <a href=3D"https://laravel.=
com/docs/10.x/responses#redirects">redirect HTTP response</a>, or returns t=
he redirector instance if called with no arguments:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-128"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">redirect</span><span style=3D"color: #BFC7D5=
;">($</span><span style=3D"color: #BEC5D4;">to</span><span style=3D"color: =
#82AAFF;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"=
color: #82AAFF;"> null</span><span style=3D"color: #BFC7D5;">,</span><span =
style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><=
span style=3D"color: #BEC5D4;">status</span><span style=3D"color: #82AAFF;"=
> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #8=
2AAFF;"> </span><span style=3D"color: #F78C6C;">302</span><span style=3D"co=
lor: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">headers</span>=
<span style=3D"color: #82AAFF;"> </span><span style=3D"color: #C792EA;">=3D=
</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D=
5;">[],</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color:=
 #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">https</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #C792EA;">=3D</span><spa=
n style=3D"color: #82AAFF;"> null</span><span style=3D"color: #BFC7D5;">);<=
/span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">redirect</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">/home</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #C792EA;">return</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">redirect</span><span st=
yle=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</spa=
n><span style=3D"color: #82AAFF;">route</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">route.name</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-=
128" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" tit=
le=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-128"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-report"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-report"><code>report()</code></a></h4>
<p>The <code>report</code> function will report an exception using your <a =
href=3D"https://laravel.com/docs/10.x/errors#the-exception-handler">excepti=
on handler</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-129"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">report</span><span style=3D"color: #BFC7D5;">($</span>=
<span style=3D"color: #BEC5D4;">e</span><span style=3D"color: #BFC7D5;">);<=
/span></div></code></pre><button id=3D"clipButton-129" class=3D"md:block hi=
dden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" =
data-clipboard-target=3D"#clipText-129"><svg class=3D"fill-current h-5 w-5"=
 xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"current=
Color"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><p=
ath d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 =
0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>report</code> function also accepts a string as an argument. W=
hen a string is given to the function, the function will create an exceptio=
n with the given string as its message:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-130"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">report</span><span style=3D"color: #BFC7D5;">(</span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Some=
thing went wrong.</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-1=
30" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-130"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-report-if"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-report-if"><code>report_if()</code></a=
></h4>
<p>The <code>report_if</code> function will report an exception using your =
<a href=3D"https://laravel.com/docs/10.x/errors#the-exception-handler">exce=
ption handler</a> if the given condition is <code>true</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-131"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">report_if</span><span style=3D"color: #BFC7D5;">($</sp=
an><span style=3D"color: #BEC5D4;">shouldReport</span><span style=3D"color:=
 #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">e</span><span style=
=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div cl=
ass=3D"line"><span style=3D"color: #82AAFF;">report_if</span><span style=3D=
"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">shouldReport</sp=
an><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;">=
 </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">Something went wrong.</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"cli=
pButton-131" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipbo=
ard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-131"><s=
vg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" view=
Box=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0=
 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h=
8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></b=
utton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-report-unless"><a href=3D"http=
s://laravel.com/docs/10.x/helpers#method-report-unless"><code>report_unless=
()</code></a></h4>
<p>The <code>report_unless</code> function will report an exception using y=
our <a href=3D"https://laravel.com/docs/10.x/errors#the-exception-handler">=
exception handler</a> if the given condition is <code>false</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-132"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">report_unless</span><span style=3D"color: #BFC7D5;">($=
</span><span style=3D"color: #BEC5D4;">reportingDisabled</span><span style=
=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span =
style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">e</span><=
span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</d=
iv><div class=3D"line"><span style=3D"color: #82AAFF;">report_unless</span>=
<span style=3D"color: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">re=
portingDisabled</span><span style=3D"color: #BFC7D5;">,</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">Something went wrong.</span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></=
pre><button id=3D"clipButton-132" class=3D"md:block hidden copyBtn" aria-la=
bel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-132"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.=
w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 =
3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 0=
0-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3=
-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-request"><a href=3D"https://la=
ravel.com/docs/10.x/helpers#method-request"><code>request()</code></a></h4>
<p>The <code>request</code> function returns the current <a href=3D"https:/=
/laravel.com/docs/10.x/requests">request</a> instance or obtains an input f=
ield's value from the current request:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-133"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$request</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #82AAFF;">request</span><span style=3D"color:=
 #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D"li=
ne"><span style=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">request</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">key</span><span style=3D"color: #D9F5DD;">'</s=
pan><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"=
> </span><span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC=
5D4;">default</span><span style=3D"color: #BFC7D5;">);</span></div></code><=
/pre><button id=3D"clipButton-133" class=3D"md:block hidden copyBtn" aria-l=
abel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targe=
t=3D"#clipText-133"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www=
.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8=
 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 =
00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-=
3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-rescue"><a href=3D"https://lar=
avel.com/docs/10.x/helpers#method-rescue"><code>rescue()</code></a></h4>
<p>The <code>rescue</code> function executes the given closure and catches =
any exceptions that occur during its execution. All exceptions that are cau=
ght will be sent to your <a href=3D"https://laravel.com/docs/10.x/errors#th=
e-exception-handler">exception handler</a>; however, the request will conti=
nue processing:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-134"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">rescue</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #C792EA;">function</span><span style=3D"colo=
r: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">{</span></div>=
<div class=3D"line"><span style=3D"color: #82AAFF;">    </span><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #82AAFF;"> </span><=
span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #FF5572;">this=
</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #8=
2AAFF;">method</span><span style=3D"color: #BFC7D5;">();</span></div><div c=
lass=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code></pre>=
<button id=3D"clipButton-134" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-134"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.=
org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1=
 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2=
 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z=
"></path></svg></button></div>
<p>You may also pass a second argument to the <code>rescue</code> function.=
 This argument will be the "default" value that should be returned if an ex=
ception occurs while executing the closure:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-135"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">rescue</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #C792EA;">function</span><span style=3D"colo=
r: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">{</span></div>=
<div class=3D"line"><span style=3D"color: #82AAFF;">    </span><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #82AAFF;"> </span><=
span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #FF5572;">this=
</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #8=
2AAFF;">method</span><span style=3D"color: #BFC7D5;">();</span></div><div c=
lass=3D"line"><span style=3D"color: #BFC7D5;">},</span><span style=3D"color=
: #82AAFF;"> false</span><span style=3D"color: #BFC7D5;">);</span></div><di=
v class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #C79=
2EA;">return</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #82AAFF;">rescue</span><span style=3D"color: #BFC7D5;">(</span><span =
style=3D"color: #C792EA;">function</span><span style=3D"color: #82AAFF;"> <=
/span><span style=3D"color: #D9F5DD;">()</span><span style=3D"color: #82AAF=
F;"> </span><span style=3D"color: #BFC7D5;">{</span></div><div class=3D"lin=
e"><span style=3D"color: #82AAFF;">    </span><span style=3D"color: #C792EA=
;">return</span><span style=3D"color: #82AAFF;"> </span><span style=3D"colo=
r: #BFC7D5;">$</span><span style=3D"color: #FF5572;">this</span><span style=
=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">method</sp=
an><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"line"><spa=
n style=3D"color: #BFC7D5;">},</span><span style=3D"color: #82AAFF;"> </spa=
n><span style=3D"color: #C792EA;">function</span><span style=3D"color: #82A=
AFF;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=3D"color=
: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">{</span></div><div clas=
s=3D"line"><span style=3D"color: #82AAFF;">    </span><span style=3D"color:=
 #C792EA;">return</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #BFC7D5;">$</span><span style=3D"color: #FF5572;">this</span><sp=
an style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">fa=
ilure</span><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"l=
ine"><span style=3D"color: #BFC7D5;">});</span></div></code></pre><button i=
d=3D"clipButton-135" class=3D"md:block hidden copyBtn" aria-label=3D"Copy t=
o Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText=
-135"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/s=
vg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1=
h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 =
0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path><=
/svg></button></div>
<p>A <code>report</code> argument may be provided to the <code>rescue</code=
> function to determine if the exception should be reported via the <code>r=
eport</code> function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-136"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">rescue</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #C792EA;">function</span><span style=3D"colo=
r: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">{</span></div>=
<div class=3D"line"><span style=3D"color: #82AAFF;">    </span><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #82AAFF;"> </span><=
span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #FF5572;">this=
</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #8=
2AAFF;">method</span><span style=3D"color: #BFC7D5;">();</span></div><div c=
lass=3D"line"><span style=3D"color: #BFC7D5;">},</span><span style=3D"color=
: #82AAFF;"> report</span><span style=3D"color: #BFC7D5;">:</span><span sty=
le=3D"color: #82AAFF;"> </span><span style=3D"color: #C792EA;">function</sp=
an><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">=
(</span><span style=3D"color: #FFCB8B;">Throwable</span><span style=3D"colo=
r: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><span style=3D=
"color: #BEC5D4;">throwable</span><span style=3D"color: #D9F5DD;">)</span><=
span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">{</s=
pan></div><div class=3D"line"><span style=3D"color: #82AAFF;">    </span><s=
pan style=3D"color: #C792EA;">return</span><span style=3D"color: #82AAFF;">=
 </span><span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5=
D4;">throwable</span><span style=3D"color: #82AAFF;"> </span><span style=3D=
"color: #89DDFF;">instanceof</span><span style=3D"color: #82AAFF;"> </span>=
<span style=3D"color: #FFCB6B;">InvalidArgumentException</span><span style=
=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color=
: #BFC7D5;">});</span></div></code></pre><button id=3D"clipButton-136" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-136"><svg class=3D"fill-=
current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20"=
 fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01=
-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2=
 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-resolve"><a href=3D"https://la=
ravel.com/docs/10.x/helpers#method-resolve"><code>resolve()</code></a></h4>
<p>The <code>resolve</code> function resolves a given class or interface na=
me to an instance using the <a href=3D"https://laravel.com/docs/10.x/contai=
ner">service container</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-137"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$api</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">resolve</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">HelpSpot\API</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipB=
utton-137" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-137"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-response"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-response"><code>response()</code></a></=
h4>
<p>The <code>response</code> function creates a <a href=3D"https://laravel.=
com/docs/10.x/responses">response</a> instance or obtains an instance of th=
e response factory:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-138"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">response</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">Hello World</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><spa=
n style=3D"color: #F78C6C;">200</span><span style=3D"color: #BFC7D5;">,</sp=
an><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">=
$</span><span style=3D"color: #BEC5D4;">headers</span><span style=3D"color:=
 #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #82AAFF;">response</span><span style=3D"=
color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span=
 style=3D"color: #82AAFF;">json</span><span style=3D"color: #BFC7D5;">([</s=
pan><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;"=
>foo</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #B=
FC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">bar</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;">], </span><span style=3D"color: #F78C6C;">=
200</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #B=
EC5D4;">$headers</span><span style=3D"color: #BFC7D5;">);</span></div></cod=
e></pre><button id=3D"clipButton-138" class=3D"md:block hidden copyBtn" ari=
a-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-ta=
rget=3D"#clipText-138"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-retry"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-retry"><code>retry()</code></a></h4>
<p>The <code>retry</code> function attempts to execute the given callback u=
ntil the given maximum attempt threshold is met. If the callback does not t=
hrow an exception, its return value will be returned. If the callback throw=
s an exception, it will automatically be retried. If the maximum attempt co=
unt is exceeded, the exception will be thrown:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-139"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">retry</span><span style=3D"color: #BFC7D5;">=
(</span><span style=3D"color: #F78C6C;">5</span><span style=3D"color: #BFC7=
D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: =
#C792EA;">function</span><span style=3D"color: #82AAFF;"> </span><span styl=
e=3D"color: #D9F5DD;">()</span><span style=3D"color: #82AAFF;"> </span><spa=
n style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">    //</span><span style=3D"color: #697098;"> Attempt =
5 times while resting 100ms between attempts...</span></div><div class=3D"l=
ine"><span style=3D"color: #BFC7D5;">},</span><span style=3D"color: #82AAFF=
;"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: =
#BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-139" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-139"><svg class=3D"fill-c=
urrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" =
fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-=
1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 =
2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If you would like to manually calculate the number of milliseconds to sl=
eep between attempts, you may pass a closure as the third argument to the <=
code>retry</code> function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-140"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #FFCB6B;">Exception</span><span style=3D"color: #BFC7D5;"=
>;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span st=
yle=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #82AAFF;">retry</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #F78C6C;">5</span><span style=3D"color: #B=
FC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"colo=
r: #C792EA;">function</span><span style=3D"color: #82AAFF;"> </span><span s=
tyle=3D"color: #D9F5DD;">()</span><span style=3D"color: #82AAFF;"> </span><=
span style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">    //</span><span style=3D"color: #697098;"> ...</sp=
an></div><div class=3D"line"><span style=3D"color: #BFC7D5;">},</span><span=
 style=3D"color: #82AAFF;"> </span><span style=3D"color: #C792EA;">function=
</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5D=
D;">(</span><span style=3D"color: #C792EA;">int</span><span style=3D"color:=
 #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><span style=3D"c=
olor: #BEC5D4;">attempt</span><span style=3D"color: #BFC7D5;">,</span><span=
 style=3D"color: #82AAFF;"> </span><span style=3D"color: #FFCB6B;">Exceptio=
n</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7=
D5;">$</span><span style=3D"color: #BEC5D4;">exception</span><span style=3D=
"color: #D9F5DD;">)</span><span style=3D"color: #82AAFF;"> </span><span sty=
le=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span style=3D"col=
or: #82AAFF;">    </span><span style=3D"color: #C792EA;">return</span><span=
 style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span>=
<span style=3D"color: #BEC5D4;">attempt</span><span style=3D"color: #82AAFF=
;"> </span><span style=3D"color: #89DDFF;">*</span><span style=3D"color: #8=
2AAFF;"> </span><span style=3D"color: #F78C6C;">100</span><span style=3D"co=
lor: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color: #BFC=
7D5;">});</span></div></code></pre><button id=3D"clipButton-140" class=3D"m=
d:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to C=
lipboard" data-clipboard-target=3D"#clipText-140"><svg class=3D"fill-curren=
t h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>For convenience, you may provide an array as the first argument to the <=
code>retry</code> function. This array will be used to determine how many m=
illiseconds to sleep between subsequent attempts:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-141"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">retry</span><span style=3D"color: #BFC7D5;">=
([</span><span style=3D"color: #F78C6C;">100</span><span style=3D"color: #B=
FC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"colo=
r: #F78C6C;">200</span><span style=3D"color: #BFC7D5;">],</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #C792EA;">function</span=
><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">()=
</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D=
5;">{</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    /=
/</span><span style=3D"color: #697098;"> Sleep for 100ms on first retry, 20=
0ms on second retry...</span></div><div class=3D"line"><span style=3D"color=
: #BFC7D5;">});</span></div></code></pre><button id=3D"clipButton-141" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-141"><svg class=3D"fill-=
current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20"=
 fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01=
-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2=
 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>To only retry under specific conditions, you may pass a closure as the f=
ourth argument to the <code>retry</code> function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-142"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #FFCB6B;">Exception</span><span style=3D"color: #BFC7D5;"=
>;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span st=
yle=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #82AAFF;">retry</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #F78C6C;">5</span><span style=3D"color: #B=
FC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span style=3D"colo=
r: #C792EA;">function</span><span style=3D"color: #82AAFF;"> </span><span s=
tyle=3D"color: #D9F5DD;">()</span><span style=3D"color: #82AAFF;"> </span><=
span style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span styl=
e=3D"color: #BFC7D5;">    //</span><span style=3D"color: #697098;"> ...</sp=
an></div><div class=3D"line"><span style=3D"color: #BFC7D5;">},</span><span=
 style=3D"color: #82AAFF;"> </span><span style=3D"color: #F78C6C;">100</spa=
n><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> =
</span><span style=3D"color: #C792EA;">function</span><span style=3D"color:=
 #82AAFF;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"c=
olor: #FFCB6B;">Exception</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">except=
ion</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #82=
AAFF;"> </span><span style=3D"color: #BFC7D5;">{</span></div><div class=3D"=
line"><span style=3D"color: #82AAFF;">    </span><span style=3D"color: #C79=
2EA;">return</span><span style=3D"color: #82AAFF;"> </span><span style=3D"c=
olor: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">exception</span><sp=
an style=3D"color: #82AAFF;"> </span><span style=3D"color: #89DDFF;">instan=
ceof</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #F=
FCB8B;">RetryException</span><span style=3D"color: #BFC7D5;">;</span></div>=
<div class=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code>=
</pre><button id=3D"clipButton-142" class=3D"md:block hidden copyBtn" aria-=
label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targ=
et=3D"#clipText-142"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://ww=
w.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M=
8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0=
 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01=
-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-session"><a href=3D"https://la=
ravel.com/docs/10.x/helpers#method-session"><code>session()</code></a></h4>
<p>The <code>session</code> function may be used to get or set <a href=3D"h=
ttps://laravel.com/docs/10.x/session">session</a> values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-143"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">session</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">key</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-1=
43" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-143"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p>You may set values by passing an array of key / value pairs to the funct=
ion:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-144"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">session</span><span style=3D"color: #BFC7D5;">([</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">ch=
airs</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #8=
2AAFF;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #F78C6C;">7</span><span =
style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><=
span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">inst=
ruments</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #82AAFF;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span styl=
e=3D"color: #82AAFF;"> </span><span style=3D"color: #F78C6C;">3</span><span=
 style=3D"color: #BFC7D5;">]);</span></div></code></pre><button id=3D"clipB=
utton-144" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-144"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<p>The session store will be returned if no value is passed to the function=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-145"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">session</span><span style=3D"color: #=
BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">get</span><span style=3D"color: #BFC7D5;">(</span><spa=
n style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">key</sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">=
);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span st=
yle=3D"color: #82AAFF;">session</span><span style=3D"color: #BFC7D5;">()</s=
pan><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AA=
FF;">put</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color=
: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">key</span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BFC7D5;">);<=
/span></div></code></pre><button id=3D"clipButton-145" class=3D"md:block hi=
dden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" =
data-clipboard-target=3D"#clipText-145"><svg class=3D"fill-current h-5 w-5"=
 xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"current=
Color"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><p=
ath d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 =
0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-tap"><a href=3D"https://larave=
l.com/docs/10.x/helpers#method-tap"><code>tap()</code></a></h4>
<p>The <code>tap</code> function accepts two arguments: an arbitrary <code>=
$value</code> and a closure. The <code>$value</code> will be passed to the =
closure and then be returned by the <code>tap</code> function. The return v=
alue of the closure is irrelevant:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-146"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">tap</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #FFCB8B;">User</span><span style=3D"color=
: #89DDFF;">::</span><span style=3D"color: #82AAFF;">first</span><span styl=
e=3D"color: #BFC7D5;">(),</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #C792EA;">function</span><span style=3D"color: #82AAFF;"=
> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"color: #FFC=
B8B;">User</span><span style=3D"color: #82AAFF;"> </span><span style=3D"col=
or: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">user</span><span styl=
e=3D"color: #D9F5DD;">)</span><span style=3D"color: #82AAFF;"> </span><span=
 style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span style=3D=
"color: #82AAFF;">    </span><span style=3D"color: #BFC7D5;">$</span><span =
style=3D"color: #BEC5D4;">user</span><span style=3D"color: #89DDFF;">-&gt;n=
ame</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #C7=
92EA;">=3D</span><span style=3D"color: #82AAFF;"> </span><span style=3D"col=
or: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">taylor</span><span st=
yle=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">;</span></d=
iv><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color=
: #82AAFF;">    </span><span style=3D"color: #BFC7D5;">$</span><span style=
=3D"color: #BEC5D4;">user</span><span style=3D"color: #89DDFF;">-&gt;</span=
><span style=3D"color: #82AAFF;">save</span><span style=3D"color: #BFC7D5;"=
>();</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">});</s=
pan></div></code></pre><button id=3D"clipButton-146" class=3D"md:block hidd=
en copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" da=
ta-clipboard-target=3D"#clipText-146"><svg class=3D"fill-current h-5 w-5" x=
mlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCo=
lor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><pat=
h d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 =
01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>If no closure is passed to the <code>tap</code> function, you may call a=
ny method on the given <code>$value</code>. The return value of the method =
you call will always be <code>$value</code>, regardless of what the method =
actually returns in its definition. For example, the Eloquent <code>update<=
/code> method typically returns an integer. However, we can force the metho=
d to return the model itself by chaining the <code>update</code> method cal=
l through the <code>tap</code> function:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-147"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #82AAFF;">tap</span><span style=3D"color: #BFC7D=
5;">($</span><span style=3D"color: #BEC5D4;">user</span><span style=3D"colo=
r: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span styl=
e=3D"color: #82AAFF;">update</span><span style=3D"color: #BFC7D5;">([</span=
></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">name</sp=
an><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$name</span><span style=
=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"color=
: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">email</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&g=
t;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC=
5D4;">$email</span><span style=3D"color: #BFC7D5;">,</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><but=
ton id=3D"clipButton-147" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-147"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2=
000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 =
011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11=
a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></p=
ath></svg></button></div>
<p>To add a <code>tap</code> method to a class, you may add the <code>Illum=
inate\Support\Traits\Tappable</code> trait to the class. The <code>tap</cod=
e> method of this trait accepts a Closure as its only argument. The object =
instance itself will be passed to the Closure and then be returned by the <=
code>tap</code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-148"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #89DDFF;">=
-&gt;</span><span style=3D"color: #82AAFF;">tap</span><span style=3D"color:=
 #BFC7D5;">(</span><span style=3D"color: #C792EA;">function</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><spa=
n style=3D"color: #FFCB8B;">User</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #D9F5=
DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"l=
ine"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: #6970=
98;">//</span><span style=3D"color: #697098;"> ...</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code></pre><but=
ton id=3D"clipButton-148" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-148"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2=
000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 =
011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11=
a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></p=
ath></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-throw-if"><a href=3D"https://l=
aravel.com/docs/10.x/helpers#method-throw-if"><code>throw_if()</code></a></=
h4>
<p>The <code>throw_if</code> function throws the given exception if a given=
 boolean expression evaluates to <code>true</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-149"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">throw_if</span><span style=3D"color: #BFC7D5;">(</span=
><span style=3D"color: #C792EA;">!</span><span style=3D"color: #82AAFF;"> <=
/span><span style=3D"color: #FFCB8B;">Auth</span><span style=3D"color: #89D=
DFF;">::</span><span style=3D"color: #82AAFF;">user</span><span style=3D"co=
lor: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span s=
tyle=3D"color: #82AAFF;">isAdmin</span><span style=3D"color: #BFC7D5;">(),<=
/span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #FFCB8B=
;">AuthorizationException</span><span style=3D"color: #89DDFF;">::</span><s=
pan style=3D"color: #C792EA;">class</span><span style=3D"color: #BFC7D5;">)=
;</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span sty=
le=3D"color: #82AAFF;">throw_if</span><span style=3D"color: #BFC7D5;">(</sp=
an></div><div class=3D"line"><span style=3D"color: #82AAFF;">    </span><sp=
an style=3D"color: #C792EA;">!</span><span style=3D"color: #82AAFF;"> </spa=
n><span style=3D"color: #FFCB8B;">Auth</span><span style=3D"color: #89DDFF;=
">::</span><span style=3D"color: #82AAFF;">user</span><span style=3D"color:=
 #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">isAdmin</span><span style=3D"color: #BFC7D5;">(),</spa=
n></div><div class=3D"line"><span style=3D"color: #82AAFF;">    </span><spa=
n style=3D"color: #FFCB8B;">AuthorizationException</span><span style=3D"col=
or: #89DDFF;">::</span><span style=3D"color: #C792EA;">class</span><span st=
yle=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"co=
lor: #82AAFF;">    </span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">You are not allowed to access this page.</span><span=
 style=3D"color: #D9F5DD;">'</span></div><div class=3D"line"><span style=3D=
"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-149"=
 class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-149"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-throw-unless"><a href=3D"https=
://laravel.com/docs/10.x/helpers#method-throw-unless"><code>throw_unless()<=
/code></a></h4>
<p>The <code>throw_unless</code> function throws the given exception if a g=
iven boolean expression evaluates to <code>false</code>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-150"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">throw_unless</span><span style=3D"color: #BFC7D5;">(</=
span><span style=3D"color: #FFCB8B;">Auth</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">user</span><span style=3D"col=
or: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span st=
yle=3D"color: #82AAFF;">isAdmin</span><span style=3D"color: #BFC7D5;">(),</=
span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #FFCB8B;=
">AuthorizationException</span><span style=3D"color: #89DDFF;">::</span><sp=
an style=3D"color: #C792EA;">class</span><span style=3D"color: #BFC7D5;">);=
</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span styl=
e=3D"color: #82AAFF;">throw_unless</span><span style=3D"color: #BFC7D5;">(<=
/span></div><div class=3D"line"><span style=3D"color: #82AAFF;">    </span>=
<span style=3D"color: #FFCB8B;">Auth</span><span style=3D"color: #89DDFF;">=
::</span><span style=3D"color: #82AAFF;">user</span><span style=3D"color: #=
BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">isAdmin</span><span style=3D"color: #BFC7D5;">(),</spa=
n></div><div class=3D"line"><span style=3D"color: #82AAFF;">    </span><spa=
n style=3D"color: #FFCB8B;">AuthorizationException</span><span style=3D"col=
or: #89DDFF;">::</span><span style=3D"color: #C792EA;">class</span><span st=
yle=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"co=
lor: #82AAFF;">    </span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">You are not allowed to access this page.</span><span=
 style=3D"color: #D9F5DD;">'</span></div><div class=3D"line"><span style=3D=
"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-150"=
 class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-150"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-today"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-today"><code>today()</code></a></h4>
<p>The <code>today</code> function creates a new <code>Illuminate\Support\C=
arbon</code> instance for the current date:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-151"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$today</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #82AAFF;">today</span><span style=3D"color: #BF=
C7D5;">();</span></div></code></pre><button id=3D"clipButton-151" class=3D"=
md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to =
Clipboard" data-clipboard-target=3D"#clipText-151"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-trait-uses-recursive"><a href=
=3D"https://laravel.com/docs/10.x/helpers#method-trait-uses-recursive"><cod=
e>trait_uses_recursive()</code></a></h4>
<p>The <code>trait_uses_recursive</code> function returns all traits used b=
y a trait:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-152"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$traits</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">trait_uses_recursive</span><span sty=
le=3D"color: #BFC7D5;">(\</span><span style=3D"color: #82AAFF;">Illuminate<=
/span><span style=3D"color: #BFC7D5;">\</span><span style=3D"color: #82AAFF=
;">Notifications</span><span style=3D"color: #BFC7D5;">\</span><span style=
=3D"color: #FFCB8B;">Notifiable</span><span style=3D"color: #89DDFF;">::</s=
pan><span style=3D"color: #C792EA;">class</span><span style=3D"color: #BFC7=
D5;">);</span></div></code></pre><button id=3D"clipButton-152" class=3D"md:=
block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cli=
pboard" data-clipboard-target=3D"#clipText-152"><svg class=3D"fill-current =
h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D=
"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"><=
/path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-=
2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-transform"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-transform"><code>transform()</code></a=
></h4>
<p>The <code>transform</code> function executes a closure on a given value =
if the value is not <a href=3D"https://laravel.com/docs/10.x/helpers#method=
-blank">blank</a> and then returns the return value of the closure:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-153"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$callback</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #C792EA;">function</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D=
"color: #C792EA;">int</span><span style=3D"color: #BFC7D5;"> </span><span s=
tyle=3D"color: #BEC5D4;">$value</span><span style=3D"color: #D9F5DD;">)</sp=
an><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><span=
 style=3D"color: #BFC7D5;">    </span><span style=3D"color: #C792EA;">retur=
n</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5=
D4;">$value</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"co=
lor: #89DDFF;">*</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #F78C6C;">2</span><span style=3D"color: #BFC7D5;">;</span></div>=
<div class=3D"line"><span style=3D"color: #BFC7D5;">};</span></div><div cla=
ss=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;"=
>$result</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #82AAFF;">transform</span><span style=3D"color: #BFC7D5;">(</spa=
n><span style=3D"color: #F78C6C;">5</span><span style=3D"color: #BFC7D5;">,=
</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D=
5;">$</span><span style=3D"color: #BEC5D4;">callback</span><span style=3D"c=
olor: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> 10</span></div></code></pre><button id=3D"clipButton-153" class=3D=
"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to=
 Clipboard" data-clipboard-target=3D"#clipText-153"><svg class=3D"fill-curr=
ent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fil=
l=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1=
z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0=
 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>A default value or closure may be passed as the third argument to the fu=
nction. This value will be returned if the given value is blank:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-154"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$result</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">transform</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">null</span><span style=
=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><span =
style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">callback<=
/span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF=
;"> </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">The value is blank</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</di=
v><div class=3D"line"><span style=3D"color: #697098;">//</span><span style=
=3D"color: #697098;"> The value is blank</span></div></code></pre><button i=
d=3D"clipButton-154" class=3D"md:block hidden copyBtn" aria-label=3D"Copy t=
o Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText=
-154"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/s=
vg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1=
h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 =
0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path><=
/svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-validator"><a href=3D"https://=
laravel.com/docs/10.x/helpers#method-validator"><code>validator()</code></a=
></h4>
<p>The <code>validator</code> function creates a new <a href=3D"https://lar=
avel.com/docs/10.x/validation">validator</a> instance with the given argume=
nts. You may use it as an alternative to the <code>Validator</code> facade:=
</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-155"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$validator</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;=
"> </span><span style=3D"color: #82AAFF;">validator</span><span style=3D"co=
lor: #BFC7D5;">($</span><span style=3D"color: #BEC5D4;">data</span><span st=
yle=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> </span><sp=
an style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">rules<=
/span><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF=
;"> </span><span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #B=
EC5D4;">messages</span><span style=3D"color: #BFC7D5;">);</span></div></cod=
e></pre><button id=3D"clipButton-155" class=3D"md:block hidden copyBtn" ari=
a-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-ta=
rget=3D"#clipText-155"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-value"><a href=3D"https://lara=
vel.com/docs/10.x/helpers#method-value"><code>value()</code></a></h4>
<p>The <code>value</code> function returns the value it is given. However, =
if you pass a closure to the function, the closure will be executed and its=
 returned value will be returned:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-156"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$result</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">value</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #82AAFF;">true</span><span style=3D"c=
olor: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> true</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #BEC5D4;">$result</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">value</span><span styl=
e=3D"color: #BFC7D5;">(</span><span style=3D"color: #C792EA;">function</spa=
n><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">(=
)</span><span style=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7=
D5;">{</span></div><div class=3D"line"><span style=3D"color: #82AAFF;">    =
</span><span style=3D"color: #C792EA;">return</span><span style=3D"color: #=
82AAFF;"> false</span><span style=3D"color: #BFC7D5;">;</span></div><div cl=
ass=3D"line"><span style=3D"color: #BFC7D5;">});</span></div><div class=3D"=
line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">//</s=
pan><span style=3D"color: #697098;"> false</span></div></code></pre><button=
 id=3D"clipButton-156" class=3D"md:block hidden copyBtn" aria-label=3D"Copy=
 to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipTe=
xt-156"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000=
/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011=
-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 =
2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path=
></svg></button></div>
<p>Additional arguments may be passed to the <code>value</code> function. I=
f the first argument is a closure then the additional parameters will be pa=
ssed to the closure as arguments, otherwise they will be ignored:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-157"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$result</span><span style=3D"color: #BFC7D5;"> </span>=
<span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #82AAFF;">value</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #C792EA;">function</span><span style=
=3D"color: #82AAFF;"> </span><span style=3D"color: #D9F5DD;">(</span><span =
style=3D"color: #C792EA;">string</span><span style=3D"color: #82AAFF;"> </s=
pan><span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;"=
>name</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #=
82AAFF;"> </span><span style=3D"color: #BFC7D5;">{</span></div><div class=
=3D"line"><span style=3D"color: #82AAFF;">    </span><span style=3D"color: =
#C792EA;">return</span><span style=3D"color: #82AAFF;"> </span><span style=
=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D4;">name</span><sp=
an style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">},</span><span style=3D"color: #82AAFF;"> </span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">Taylor</=
span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;=
">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span =
style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 'Taylor=
'</span></div></code></pre><button id=3D"clipButton-157" class=3D"md:block =
hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard=
" data-clipboard-target=3D"#clipText-157"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-view"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-view"><code>view()</code></a></h4>
<p>The <code>view</code> function retrieves a <a href=3D"https://laravel.co=
m/docs/10.x/views">view</a> instance:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-158"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #82AAFF;">view</span><span style=3D"color: #BFC7D5;">(=
</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88=
D;">auth.login</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-158"=
 class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-158"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"method-with"><a href=3D"https://larav=
el.com/docs/10.x/helpers#method-with"><code>with()</code></a></h4>
<p>The <code>with</code> function returns the value it is given. If a closu=
re is passed as the second argument to the function, the closure will be ex=
ecuted and its returned value will be returned:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-159"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$callback</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #C792EA;">function</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D=
"color: #C792EA;">mixed</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #BEC5D4;">$value</span><span style=3D"color: #D9F5DD;">)</=
span><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><sp=
an style=3D"color: #BFC7D5;">    </span><span style=3D"color: #C792EA;">ret=
urn</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89=
DDFF;">is_numeric</span><span style=3D"color: #BFC7D5;">($</span><span styl=
e=3D"color: #BEC5D4;">value</span><span style=3D"color: #BFC7D5;">) </span>=
<span style=3D"color: #89DDFF;">?</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #BEC5D4;">$value</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #89DDFF;">*</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">2</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">:</span><span styl=
e=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">0</span><span=
 style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D=
"color: #BFC7D5;">};</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #BEC5D4;">$result</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">with</span><sp=
an style=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">5</spa=
n><span style=3D"color: #BFC7D5;">,</span><span style=3D"color: #82AAFF;"> =
</span><span style=3D"color: #BFC7D5;">$</span><span style=3D"color: #BEC5D=
4;">callback</span><span style=3D"color: #BFC7D5;">);</span></div><div clas=
s=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">=
//</span><span style=3D"color: #697098;"> 10</span></div><div class=3D"line=
">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$result</=
span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;=
">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
82AAFF;">with</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"=
color: #82AAFF;">null</span><span style=3D"color: #BFC7D5;">,</span><span s=
tyle=3D"color: #82AAFF;"> </span><span style=3D"color: #BFC7D5;">$</span><s=
pan style=3D"color: #BEC5D4;">callback</span><span style=3D"color: #BFC7D5;=
">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span =
style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 0</span=
></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"c=
olor: #BEC5D4;">$result</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #82AAFF;">with</span><span style=3D"color: #BFC7D5;=
">(</span><span style=3D"color: #F78C6C;">5</span><span style=3D"color: #BF=
C7D5;">,</span><span style=3D"color: #82AAFF;"> null</span><span style=3D"c=
olor: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> 5</span></div></code></pre><button id=3D"clipButton-159" class=3D"=
md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to =
Clipboard" data-clipboard-target=3D"#clipText-159"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h2 id=3D"other-utilities"><a href=3D"https://laravel.com/docs/10.x/helpers=
#other-utilities">Other Utilities</a></h2>
<p></p>
<h3 id=3D"benchmarking"><a href=3D"https://laravel.com/docs/10.x/helpers#be=
nchmarking">Benchmarking</a></h3>
<p>Sometimes you may wish to quickly test the performance of certain parts =
of your application. On those occasions, you may utilize the <code>Benchmar=
k</code> support class to measure the number of milliseconds it takes for t=
he given callbacks to complete:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-160"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D3423E;">&lt;?php</span></div><div class=3D"line">&nbsp;</div><=
div class=3D"line"><span style=3D"color: #C792EA;">use</span><span style=3D=
"color: #BFC7D5;"> App\Models\</span><span style=3D"color: #FFCB8B;">User</=
span><span style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><spa=
n style=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illu=
minate\Support\</span><span style=3D"color: #FFCB8B;">Benchmark</span><span=
 style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><d=
iv class=3D"line"><span style=3D"color: #FFCB8B;">Benchmark</span><span sty=
le=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">dd</span><s=
pan style=3D"color: #BFC7D5;">(</span><span style=3D"color: #C792EA;">fn</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;"=
>()</span><span style=3D"color: #BFC7D5;"> =3D&gt; </span><span style=3D"co=
lor: #FFCB8B;">User</span><span style=3D"color: #89DDFF;">::</span><span st=
yle=3D"color: #82AAFF;">find</span><span style=3D"color: #BFC7D5;">(</span>=
<span style=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">));=
 </span><span style=3D"color: #697098;">//</span><span style=3D"color: #697=
098;"> 0.1 ms</span></div><div class=3D"line">&nbsp;</div><div class=3D"lin=
e"><span style=3D"color: #FFCB8B;">Benchmark</span><span style=3D"color: #8=
9DDFF;">::</span><span style=3D"color: #82AAFF;">dd</span><span style=3D"co=
lor: #BFC7D5;">([</span></div><div class=3D"line"><span style=3D"color: #BF=
C7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">Scenario 1</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt=
;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792=
EA;">fn</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #D9F5DD;">()</span><span style=3D"color: #BFC7D5;"> =3D&gt; </span><span s=
tyle=3D"color: #FFCB8B;">User</span><span style=3D"color: #89DDFF;">::</spa=
n><span style=3D"color: #82AAFF;">count</span><span style=3D"color: #BFC7D5=
;">(), </span><span style=3D"color: #697098;">//</span><span style=3D"color=
: #697098;"> 0.5 ms</span></div><div class=3D"line"><span style=3D"color: #=
BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">Scenario 2</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&=
gt;</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C7=
92EA;">fn</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"colo=
r: #D9F5DD;">()</span><span style=3D"color: #BFC7D5;"> =3D&gt; </span><span=
 style=3D"color: #FFCB8B;">User</span><span style=3D"color: #89DDFF;">::</s=
pan><span style=3D"color: #82AAFF;">all</span><span style=3D"color: #BFC7D5=
;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"colo=
r: #82AAFF;">count</span><span style=3D"color: #BFC7D5;">(), </span><span s=
tyle=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 20.0 ms<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">]);</span><=
/div></code></pre><button id=3D"clipButton-160" class=3D"md:block hidden co=
pyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cl=
ipboard-target=3D"#clipText-160"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>By default, the given callbacks will be executed once (one iteration), a=
nd their duration will be displayed in the browser / console.</p>
<p>To invoke a callback more than once, you may specify the number of itera=
tions that the callback should be invoked as the second argument to the met=
hod. When executing a callback more than once, the <code>Benchmark</code> c=
lass will return the average amount of milliseconds it took to execute the =
callback across all iterations:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-161"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Benchmark</span><span style=3D"color: #89DDFF;">::</sp=
an><span style=3D"color: #82AAFF;">dd</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #C792EA;">fn</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=3D"colo=
r: #BFC7D5;"> =3D&gt; </span><span style=3D"color: #FFCB8B;">User</span><sp=
an style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">count=
</span><span style=3D"color: #BFC7D5;">(), iterations: </span><span style=
=3D"color: #F78C6C;">10</span><span style=3D"color: #BFC7D5;">); </span><sp=
an style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> 0.5 =
ms</span></div></code></pre><button id=3D"clipButton-161" class=3D"md:block=
 hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboar=
d" data-clipboard-target=3D"#clipText-161"><svg class=3D"fill-current h-5 w=
-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curr=
entColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path=
><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3=
 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Sometimes, you may want to benchmark the execution of a callback while s=
till obtaining the value returned by the callback. The <code>value</code> m=
ethod will return a tuple containing the value returned by the callback and=
 the amount of milliseconds it took to execute the callback:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-162"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BFC7D5;">[</span><span style=3D"color: #BEC5D4;">$count</span><=
span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$du=
ration</span><span style=3D"color: #BFC7D5;">] </span><span style=3D"color:=
 #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D=
"color: #FFCB8B;">Benchmark</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">value</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #C792EA;">fn</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=3D"colo=
r: #BFC7D5;"> =3D&gt; </span><span style=3D"color: #FFCB8B;">User</span><sp=
an style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">count=
</span><span style=3D"color: #BFC7D5;">());</span></div></code></pre><butto=
n id=3D"clipButton-162" class=3D"md:block hidden copyBtn" aria-label=3D"Cop=
y to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipT=
ext-162"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/200=
0/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 01=
1-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2=
 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></pat=
h></svg></button></div>
<p></p>
<h3 id=3D"dates"><a href=3D"https://laravel.com/docs/10.x/helpers#dates">Da=
tes</a></h3>
<p>Laravel includes <a href=3D"https://carbon.nesbot.com/docs/">Carbon</a>,=
 a powerful date and time manipulation library. To create a new <code>Carbo=
n</code> instance, you may invoke the <code>now</code> function. This funct=
ion is globally available within your Laravel application:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-163"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$now</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #82AAFF;">now</span><span style=3D"color: #BFC7D5=
;">();</span></div></code></pre><button id=3D"clipButton-163" class=3D"md:b=
lock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clip=
board" data-clipboard-target=3D"#clipText-163"><svg class=3D"fill-current h=
-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"=
currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></=
path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2=
-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Or, you may create a new <code>Carbon</code> instance using the <code>Il=
luminate\Support\Carbon</code> class:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-164"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Carbon</span><span style=3D"=
color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #BEC5D4;">$now</span><span style=3D"color: =
#BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D"=
color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Carbon</span><span=
 style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">now</sp=
an><span style=3D"color: #BFC7D5;">();</span></div></code></pre><button id=
=3D"clipButton-164" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to=
 Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-=
164"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/sv=
g" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h=
2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0=
 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></=
svg></button></div>
<p>For a thorough discussion of Carbon and its features, please consult the=
 <a href=3D"https://carbon.nesbot.com/docs/">official Carbon documentation<=
/a>.</p>
<p></p>
<h3 id=3D"lottery"><a href=3D"https://laravel.com/docs/10.x/helpers#lottery=
">Lottery</a></h3>
<p>Laravel's lottery class may be used to execute callbacks based on a set =
of given odds. This can be particularly useful when you only want to execut=
e code for a percentage of your incoming requests:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-165"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Lottery</span><span style=3D=
"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Lottery</span><span style=3D"colo=
r: #89DDFF;">::</span><span style=3D"color: #82AAFF;">odds</span><span styl=
e=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">1</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">20</spa=
n><span style=3D"color: #BFC7D5;">)</span></div><div class=3D"line"><span s=
tyle=3D"color: #BFC7D5;">    </span><span style=3D"color: #89DDFF;">-&gt;</=
span><span style=3D"color: #82AAFF;">winner</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #C792EA;">fn</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">()</span><span style=
=3D"color: #BFC7D5;"> =3D&gt; </span><span style=3D"color: #BEC5D4;">$user<=
/span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82=
AAFF;">won</span><span style=3D"color: #BFC7D5;">())</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: =
#89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">loser</span><span sty=
le=3D"color: #BFC7D5;">(</span><span style=3D"color: #C792EA;">fn</span><sp=
an style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">()</sp=
an><span style=3D"color: #BFC7D5;"> =3D&gt; </span><span style=3D"color: #B=
EC5D4;">$user</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">lost</span><span style=3D"color: #BFC7D5;">())</span><=
/div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span s=
tyle=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">choose=
</span><span style=3D"color: #BFC7D5;">();</span></div></code></pre><button=
 id=3D"clipButton-165" class=3D"md:block hidden copyBtn" aria-label=3D"Copy=
 to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipTe=
xt-165"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000=
/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011=
-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 =
2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path=
></svg></button></div>
<p>You may combine Laravel's lottery class with other Laravel features. For=
 example, you may wish to only report a small percentage of slow queries to=
 your exception handler. And, since the lottery class is callable, we may p=
ass an instance of the class into any method that accepts callables:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-166"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Carbon\</sp=
an><span style=3D"color: #FFCB8B;">CarbonInterval</span><span style=3D"colo=
r: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color: #C792E=
A;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\Support\Facades\<=
/span><span style=3D"color: #FFCB8B;">DB</span><span style=3D"color: #BFC7D=
5;">;</span></div><div class=3D"line"><span style=3D"color: #C792EA;">use</=
span><span style=3D"color: #BFC7D5;"> Illuminate\Support\</span><span style=
=3D"color: #FFCB8B;">Lottery</span><span style=3D"color: #BFC7D5;">;</span>=
</div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"co=
lor: #FFCB8B;">DB</span><span style=3D"color: #89DDFF;">::</span><span styl=
e=3D"color: #82AAFF;">whenQueryingForLongerThan</span><span style=3D"color:=
 #BFC7D5;">(</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;=
">    </span><span style=3D"color: #FFCB8B;">CarbonInterval</span><span sty=
le=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">seconds</sp=
an><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">=
2</span><span style=3D"color: #BFC7D5;">),</span></div><div class=3D"line">=
<span style=3D"color: #BFC7D5;">    </span><span style=3D"color: #FFCB8B;">=
Lottery</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color=
: #82AAFF;">odds</span><span style=3D"color: #BFC7D5;">(</span><span style=
=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">, </span><span=
 style=3D"color: #F78C6C;">100</span><span style=3D"color: #BFC7D5;">)</spa=
n><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF=
;">winner</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"colo=
r: #C792EA;">fn</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #D9F5DD;">()</span><span style=3D"color: #BFC7D5;"> =3D&gt; </sp=
an><span style=3D"color: #82AAFF;">report</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">Querying &gt; 2 seconds.</span><span style=3D"color: #D9F5DD;">'<=
/span><span style=3D"color: #BFC7D5;">)),</span></div><div class=3D"line"><=
span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"cl=
ipButton-166" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipb=
oard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-166"><=
svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vie=
wBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 =
0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2=
h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></=
button></div>
<p></p>
<h4 id=3D"testing-lotteries"><a href=3D"https://laravel.com/docs/10.x/helpe=
rs#testing-lotteries">Testing Lotteries</a></h4>
<p>Laravel provides some simple methods to allow you to easily test your ap=
plication's lottery invocations:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-167"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> Lottery will=
 always win...</span></div><div class=3D"line"><span style=3D"color: #FFCB8=
B;">Lottery</span><span style=3D"color: #89DDFF;">::</span><span style=3D"c=
olor: #82AAFF;">alwaysWin</span><span style=3D"color: #BFC7D5;">();</span><=
/div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"col=
or: #697098;">//</span><span style=3D"color: #697098;"> Lottery will always=
 lose...</span></div><div class=3D"line"><span style=3D"color: #FFCB8B;">Lo=
ttery</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: =
#82AAFF;">alwaysLose</span><span style=3D"color: #BFC7D5;">();</span></div>=
<div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #=
697098;">//</span><span style=3D"color: #697098;"> Lottery will win then lo=
se, and finally return to normal behavior...</span></div><div class=3D"line=
"><span style=3D"color: #FFCB8B;">Lottery</span><span style=3D"color: #89DD=
FF;">::</span><span style=3D"color: #82AAFF;">fix</span><span style=3D"colo=
r: #BFC7D5;">([</span><span style=3D"color: #82AAFF;">true</span><span styl=
e=3D"color: #BFC7D5;">, </span><span style=3D"color: #82AAFF;">false</span>=
<span style=3D"color: #BFC7D5;">]);</span></div><div class=3D"line">&nbsp;<=
/div><div class=3D"line"><span style=3D"color: #697098;">//</span><span sty=
le=3D"color: #697098;"> Lottery will return to normal behavior...</span></d=
iv><div class=3D"line"><span style=3D"color: #FFCB8B;">Lottery</span><span =
style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">determin=
eResultsNormally</span><span style=3D"color: #BFC7D5;">();</span></div></co=
de></pre><button id=3D"clipButton-167" class=3D"md:block hidden copyBtn" ar=
ia-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-t=
arget=3D"#clipText-167"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http:/=
/www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p></p>
<h3 id=3D"pipeline"><a href=3D"https://laravel.com/docs/10.x/helpers#pipeli=
ne">Pipeline</a></h3>
<p>Laravel's <code>Pipeline</code> facade provides a convenient way to "pip=
e" a given input through a series of invokable classes, closures, or callab=
les, giving each class the opportunity to inspect or modify the input and i=
nvoke the next callable in the pipeline:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-168"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> </span><spa=
n style=3D"color: #FFCB8B;">Closure</span><span style=3D"color: #BFC7D5;">;=
</span></div><div class=3D"line"><span style=3D"color: #C792EA;">use</span>=
<span style=3D"color: #BFC7D5;"> App\Models\</span><span style=3D"color: #F=
FCB8B;">User</span><span style=3D"color: #BFC7D5;">;</span></div><div class=
=3D"line"><span style=3D"color: #C792EA;">use</span><span style=3D"color: #=
BFC7D5;"> Illuminate\Support\Facades\</span><span style=3D"color: #FFCB8B;"=
>Pipeline</span><span style=3D"color: #BFC7D5;">;</span></div><div class=3D=
"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BEC5D4;">$use=
r</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792=
EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #FFCB8B;">Pipeline</span><span style=3D"color: #89DDFF;">::</span><span s=
tyle=3D"color: #82AAFF;">send</span><span style=3D"color: #BFC7D5;">(</span=
><span style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;=
">)</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">       =
     </span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"colo=
r: #82AAFF;">through</span><span style=3D"color: #BFC7D5;">([</span></div><=
div class=3D"line"><span style=3D"color: #BFC7D5;">                </span><=
span style=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D"color: #F=
FCB8B;">User</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"c=
olor: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;">, </span><span =
style=3D"color: #FFCB8B;">Closure</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #BEC5D4;">$next</span><span style=3D"color: #D9F=
5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"=
line"><span style=3D"color: #BFC7D5;">                    </span><span styl=
e=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ...</span><=
/div><div class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"col=
or: #BFC7D5;">                    </span><span style=3D"color: #C792EA;">re=
turn</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #B=
EC5D4;">$next</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"=
color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;">);</span></div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">                },</sp=
an></div><div class=3D"line"><span style=3D"color: #BFC7D5;">              =
  </span><span style=3D"color: #C792EA;">function</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=3D=
"color: #FFCB8B;">User</span><span style=3D"color: #BFC7D5;"> </span><span =
style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;">, </s=
pan><span style=3D"color: #FFCB8B;">Closure</span><span style=3D"color: #BF=
C7D5;"> </span><span style=3D"color: #BEC5D4;">$next</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">                    </span>=
<span style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> .=
..</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">                    </span><span style=3D"color: #C=
792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><span style=3D=
"color: #BEC5D4;">$next</span><span style=3D"color: #BFC7D5;">(</span><span=
 style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;">);</=
span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">            =
    },</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    =
        ])</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">=
            </span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">then</span><span style=3D"color: #BFC7D5;">(</span><sp=
an style=3D"color: #C792EA;">fn</span><span style=3D"color: #BFC7D5;"> </sp=
an><span style=3D"color: #D9F5DD;">(</span><span style=3D"color: #FFCB8B;">=
User</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #B=
EC5D4;">$user</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"=
color: #BFC7D5;"> =3D&gt; </span><span style=3D"color: #BEC5D4;">$user</spa=
n><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D=
"clipButton-168" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cl=
ipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-168=
"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" =
viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1=
 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 00=
2 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg=
></button></div>
<p>As you can see, each invokable class or closure in the pipeline is provi=
ded the input and a <code>$next</code> closure. Invoking the <code>$next</c=
ode> closure will invoke the next callable in the pipeline. As you may have=
 noticed, this is very similar to <a href=3D"https://laravel.com/docs/10.x/=
middleware">middleware</a>.</p>
<p>When the last callable in the pipeline invokes the <code>$next</code> cl=
osure, the callable provided to the <code>then</code> method will be invoke=
d. Typically, this callable will simply return the given input.</p>
<p>Of course, as discussed previously, you are not limited to providing clo=
sures to your pipeline. You may also provide invokable classes. If a class =
name is provided, the class will be instantiated via Laravel's <a href=3D"h=
ttps://laravel.com/docs/10.x/container">service container</a>, allowing dep=
endencies to be injected into the invokable class:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-169"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7D5;"> </span><s=
pan style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #FFCB8B;">Pipeline</span><span style=3D"color: #=
89DDFF;">::</span><span style=3D"color: #82AAFF;">send</span><span style=3D=
"color: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$user</span><span=
 style=3D"color: #BFC7D5;">)</span></div><div class=3D"line"><span style=3D=
"color: #BFC7D5;">            </span><span style=3D"color: #89DDFF;">-&gt;<=
/span><span style=3D"color: #82AAFF;">through</span><span style=3D"color: #=
BFC7D5;">([</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;"=
>                </span><span style=3D"color: #FFCB8B;">GenerateProfilePhot=
o</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #C79=
2EA;">class</span><span style=3D"color: #BFC7D5;">,</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">                </span><span styl=
e=3D"color: #FFCB8B;">ActivateSubscription</span><span style=3D"color: #89D=
DFF;">::</span><span style=3D"color: #C792EA;">class</span><span style=3D"c=
olor: #BFC7D5;">,</span></div><div class=3D"line"><span style=3D"color: #BF=
C7D5;">                </span><span style=3D"color: #FFCB8B;">SendWelcomeEm=
ail</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #C=
792EA;">class</span><span style=3D"color: #BFC7D5;">,</span></div><div clas=
s=3D"line"><span style=3D"color: #BFC7D5;">            ])</span></div><div =
class=3D"line"><span style=3D"color: #BFC7D5;">            </span><span sty=
le=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">then</sp=
an><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #C792EA;">=
fn</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F=
5DD;">(</span><span style=3D"color: #FFCB8B;">User</span><span style=3D"col=
or: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$user</span><span sty=
le=3D"color: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> =3D&gt; </s=
pan><span style=3D"color: #BEC5D4;">$user</span><span style=3D"color: #BFC7=
D5;">);</span></div></code></pre><button id=3D"clipButton-169" class=3D"md:=
block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cli=
pboard" data-clipboard-target=3D"#clipText-169"><svg class=3D"fill-current =
h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D=
"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"><=
/path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-=
2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h3 id=3D"sleep"><a href=3D"https://laravel.com/docs/10.x/helpers#sleep">Sl=
eep</a></h3>
<p>Laravel's <code>Sleep</code> class is a light-weight wrapper around PHP'=
s native <code>sleep</code> and <code>usleep</code> functions, offering gre=
ater testability while also exposing a developer friendly API for working w=
ith time:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-170"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"c=
olor: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #BEC5D4;">$waiting</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D=
"color: #BFC7D5;"> </span><span style=3D"color: #82AAFF;">true</span><span =
style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><di=
v class=3D"line"><span style=3D"color: #C792EA;">while</span><span style=3D=
"color: #BFC7D5;"> (</span><span style=3D"color: #BEC5D4;">$waiting</span><=
span style=3D"color: #BFC7D5;">) {</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">    </span><span style=3D"color: #FFCB8B;">Sleep</s=
pan><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;=
">for</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #=
F78C6C;">1</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"col=
or: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">second</span><spa=
n style=3D"color: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=
=3D"color: #BEC5D4;">$waiting</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #697098;">/*</span><span style=3D"color: #697=
098;"> ... </span><span style=3D"color: #697098;">*/</span><span style=3D"c=
olor: #BFC7D5;">;</span></div><div class=3D"line"><span style=3D"color: #BF=
C7D5;">}</span></div></code></pre><button id=3D"clipButton-170" class=3D"md=
:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cl=
ipboard" data-clipboard-target=3D"#clipText-170"><svg class=3D"fill-current=
 h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>Sleep</code> class offers a variety of methods that allow you =
to work with different units of time:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-171"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #697098;">//</span><span style=3D"color: #697098;"> Pause execut=
ion for 90 seconds...</span></div><div class=3D"line"><span style=3D"color:=
 #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;">::</span><span style=
=3D"color: #82AAFF;">for</span><span style=3D"color: #BFC7D5;">(</span><spa=
n style=3D"color: #F78C6C;">1.5</span><span style=3D"color: #BFC7D5;">)</sp=
an><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAF=
F;">minutes</span><span style=3D"color: #BFC7D5;">();</span></div><div clas=
s=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #697098;">=
//</span><span style=3D"color: #697098;"> Pause execution for 2 seconds...<=
/span></div><div class=3D"line"><span style=3D"color: #FFCB8B;">Sleep</span=
><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">f=
or</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78=
C6C;">2</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color:=
 #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">seconds</span><span =
style=3D"color: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><=
div class=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"=
color: #697098;"> Pause execution for 500 milliseconds...</span></div><div =
class=3D"line"><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"c=
olor: #89DDFF;">::</span><span style=3D"color: #82AAFF;">for</span><span st=
yle=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">500</span><=
span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt=
;</span><span style=3D"color: #82AAFF;">milliseconds</span><span style=3D"c=
olor: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=
=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6=
97098;"> Pause execution for 5,000 microseconds...</span></div><div class=
=3D"line"><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color:=
 #89DDFF;">::</span><span style=3D"color: #82AAFF;">for</span><span style=
=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">5000</span><sp=
an style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;<=
/span><span style=3D"color: #82AAFF;">microseconds</span><span style=3D"col=
or: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6970=
98;"> Pause execution until a given time...</span></div><div class=3D"line"=
><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;=
">::</span><span style=3D"color: #82AAFF;">until</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #82AAFF;">now</span><span style=
=3D"color: #BFC7D5;">()</span><span style=3D"color: #89DDFF;">-&gt;</span><=
span style=3D"color: #82AAFF;">addMinute</span><span style=3D"color: #BFC7D=
5;">());</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><s=
pan style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> Ali=
as of PHP's native "sleep" function...</span></div><div class=3D"line"><spa=
n style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;">::<=
/span><span style=3D"color: #82AAFF;">sleep</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #F78C6C;">2</span><span style=3D"color=
: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"li=
ne"><span style=3D"color: #697098;">//</span><span style=3D"color: #697098;=
"> Alias of PHP's native "usleep" function...</span></div><div class=3D"lin=
e"><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDF=
F;">::</span><span style=3D"color: #82AAFF;">usleep</span><span style=3D"co=
lor: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">5000</span><span sty=
le=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton=
-171" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-171"><svg clas=
s=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"=
0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H=
9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0=
 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button><=
/div>
<p>To easily combine units of time, you may use the <code>and</code> method=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-172"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;">::</span><=
span style=3D"color: #82AAFF;">for</span><span style=3D"color: #BFC7D5;">(<=
/span><span style=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5=
;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color=
: #82AAFF;">second</span><span style=3D"color: #BFC7D5;">()</span><span sty=
le=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">and</spa=
n><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">1=
0</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DD=
FF;">-&gt;</span><span style=3D"color: #82AAFF;">milliseconds</span><span s=
tyle=3D"color: #BFC7D5;">();</span></div></code></pre><button id=3D"clipBut=
ton-172" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-172"><svg c=
lass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 id=3D"testing-sleep"><a href=3D"https://laravel.com/docs/10.x/helpers#t=
esting-sleep">Testing Sleep</a></h4>
<p>When testing code that utilizes the <code>Sleep</code> class or PHP's na=
tive sleep functions, your test will pause execution. As you might expect, =
this makes your test suite significantly slower. For example, imagine you a=
re testing the following code:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-173"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$waiting</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;">=
 </span><span style=3D"color: #697098;">/*</span><span style=3D"color: #697=
098;"> ... </span><span style=3D"color: #697098;">*/</span><span style=3D"c=
olor: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #BEC5D4;">$seconds</span><span style=3D"color:=
 #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><span style=3D=
"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">1</span><span sty=
le=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div c=
lass=3D"line"><span style=3D"color: #C792EA;">while</span><span style=3D"co=
lor: #BFC7D5;"> (</span><span style=3D"color: #BEC5D4;">$waiting</span><spa=
n style=3D"color: #BFC7D5;">) {</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">    </span><span style=3D"color: #FFCB8B;">Sleep</span=
><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">f=
or</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #BEC=
5D4;">$seconds</span><span style=3D"color: #89DDFF;">++</span><span style=
=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">seconds</span><span style=3D"color: #BFC7D5;"=
>();</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span =
style=3D"color: #BFC7D5;">    </span><span style=3D"color: #BEC5D4;">$waiti=
ng</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C79=
2EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"colo=
r: #697098;">/*</span><span style=3D"color: #697098;"> ... </span><span sty=
le=3D"color: #697098;">*/</span><span style=3D"color: #BFC7D5;">;</span></d=
iv><div class=3D"line"><span style=3D"color: #BFC7D5;">}</span></div></code=
></pre><button id=3D"clipButton-173" class=3D"md:block hidden copyBtn" aria=
-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-tar=
get=3D"#clipText-173"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://w=
ww.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"=
M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 =
0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 0=
1-3-3z"></path></svg></button></div>
<p>Typically, testing this code would take <em>at least</em> one second. Lu=
ckily, the <code>Sleep</code> class allows us to "fake" sleeping so that ou=
r test suite stays fast:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-174"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">public</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #82AAFF;">test_it_waits_until_ready</span>=
<span style=3D"color: #D9F5DD;">()</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span style=3D"co=
lor: #BFC7D5;">    </span><span style=3D"color: #FFCB8B;">Sleep</span><span=
 style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">fake</s=
pan><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"line">&nb=
sp;</div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><sp=
an style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> ...<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">}</span></d=
iv></code></pre><button id=3D"clipButton-174" class=3D"md:block hidden copy=
Btn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clip=
board-target=3D"#clipText-174"><svg class=3D"fill-current h-5 w-5" xmlns=3D=
"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><p=
ath d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"=
M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H=
9a3 3 0 01-3-3z"></path></svg></button></div>
<p>When faking the <code>Sleep</code> class, the actual execution pause is =
by-passed, leading to a substantially faster test.</p>
<p>Once the <code>Sleep</code> class has been faked, it is possible to make=
 assertions against the expected "sleeps" that should have occurred. To ill=
ustrate this, let's imagine we are testing code that pauses execution three=
 times, with each pause increasing by a single second. Using the <code>asse=
rtSequence</code> method, we can assert that our code "slept" for the prope=
r amount of time while keeping our test fast:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-175"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">public</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D5=
;"> </span><span style=3D"color: #82AAFF;">test_it_checks_if_ready_four_tim=
es</span><span style=3D"color: #D9F5DD;">()</span></div><div class=3D"line"=
><span style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">    </span><span style=3D"color: #FFCB8B;">Sleep</s=
pan><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;=
">fake</span><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"=
line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BFC7D5;">    <=
/span><span style=3D"color: #697098;">//</span><span style=3D"color: #69709=
8;"> ...</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><s=
pan style=3D"color: #BFC7D5;">    </span><span style=3D"color: #FFCB8B;">Sl=
eep</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #8=
2AAFF;">assertSequence</span><span style=3D"color: #BFC7D5;">([</span></div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span s=
tyle=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;">::</sp=
an><span style=3D"color: #82AAFF;">for</span><span style=3D"color: #BFC7D5;=
">(</span><span style=3D"color: #F78C6C;">1</span><span style=3D"color: #BF=
C7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"c=
olor: #82AAFF;">second</span><span style=3D"color: #BFC7D5;">(),</span></di=
v><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span =
style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;">::</s=
pan><span style=3D"color: #82AAFF;">for</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #F78C6C;">2</span><span style=3D"color: #B=
FC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"=
color: #82AAFF;">seconds</span><span style=3D"color: #BFC7D5;">(),</span></=
div><div class=3D"line"><span style=3D"color: #BFC7D5;">        </span><spa=
n style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;">::<=
/span><span style=3D"color: #82AAFF;">for</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #F78C6C;">3</span><span style=3D"color: =
#BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=
=3D"color: #82AAFF;">seconds</span><span style=3D"color: #BFC7D5;">(),</spa=
n></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    ]);</span><=
/div><div class=3D"line"><span style=3D"color: #BFC7D5;">}</span></div></co=
de></pre><button id=3D"clipButton-175" class=3D"md:block hidden copyBtn" ar=
ia-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-t=
arget=3D"#clipText-175"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http:/=
/www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p>Of course, the <code>Sleep</code> class offers a variety of other assert=
ions you may use when testing:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-176"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Carbon\</sp=
an><span style=3D"color: #FFCB8B;">CarbonInterval</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">as</span><span style=
=3D"color: #BFC7D5;"> Duration;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\</span><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"c=
olor: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div class=3D=
"line"><span style=3D"color: #697098;">//</span><span style=3D"color: #6970=
98;"> Assert that sleep was called 3 times...</span></div><div class=3D"lin=
e"><span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDF=
F;">::</span><span style=3D"color: #82AAFF;">assertSleptTimes</span><span s=
tyle=3D"color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">3</span><s=
pan style=3D"color: #BFC7D5;">);</span></div><div class=3D"line">&nbsp;</di=
v><div class=3D"line"><span style=3D"color: #697098;">//</span><span style=
=3D"color: #697098;"> Assert against the duration of sleep...</span></div><=
div class=3D"line"><span style=3D"color: #FFCB8B;">Sleep</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">assertSlept</=
span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #C792EA;=
">function</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"col=
or: #D9F5DD;">(</span><span style=3D"color: #FFCB8B;">Duration</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$duration=
</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #89DDF=
F;">:</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #=
C792EA;">bool</span><span style=3D"color: #BFC7D5;"> {</span></div><div cla=
ss=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color=
: #C792EA;">return</span><span style=3D"color: #BFC7D5;"> </span><span styl=
e=3D"color: #697098;">/*</span><span style=3D"color: #697098;"> ... </span>=
<span style=3D"color: #697098;">*/</span><span style=3D"color: #BFC7D5;">;<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">}, times: <=
/span><span style=3D"color: #F78C6C;">1</span><span style=3D"color: #BFC7D5=
;">);</span></div><div class=3D"line">&nbsp;</div><div class=3D"line"><span=
 style=3D"color: #697098;">//</span><span style=3D"color: #697098;"> Assert=
 that the Sleep class was never invoked...</span></div><div class=3D"line">=
<span style=3D"color: #FFCB8B;">Sleep</span><span style=3D"color: #89DDFF;"=
>::</span><span style=3D"color: #82AAFF;">assertNeverSlept</span><span styl=
e=3D"color: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div =
class=3D"line"><span style=3D"color: #697098;">//</span><span style=3D"colo=
r: #697098;"> Assert that, even if Sleep was called, no execution paused oc=
curred...</span></div><div class=3D"line"><span style=3D"color: #FFCB8B;">S=
leep</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #=
82AAFF;">assertInsomniac</span><span style=3D"color: #BFC7D5;">();</span></=
div></code></pre><button id=3D"clipButton-176" class=3D"md:block hidden cop=
yBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-cli=
pboard-target=3D"#clipText-176"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Sometimes it may be useful to perform an action whenever a fake sleep oc=
curs in your application code. To achieve this, you may provide a callback =
to the <code>whenFakingSleep</code> method. In the following example, we us=
e Laravel's <a href=3D"https://laravel.com/docs/10.x/mocking#interacting-wi=
th-time">time manipulation helpers</a> to instantly progress time by the du=
ration of each sleep:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-177"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Carbon\</sp=
an><span style=3D"color: #FFCB8B;">CarbonInterval</span><span style=3D"colo=
r: #BFC7D5;"> </span><span style=3D"color: #C792EA;">as</span><span style=
=3D"color: #BFC7D5;"> Duration;</span></div><div class=3D"line">&nbsp;</div=
><div class=3D"line"><span style=3D"color: #FF5572;">$this</span><span styl=
e=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">freezeTim=
e</span><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"line"=
>&nbsp;</div><div class=3D"line"><span style=3D"color: #FFCB8B;">Sleep</spa=
n><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">=
fake</span><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"li=
ne">&nbsp;</div><div class=3D"line"><span style=3D"color: #FFCB8B;">Sleep</=
span><span style=3D"color: #89DDFF;">::</span><span style=3D"color: #82AAFF=
;">whenFakingSleep</span><span style=3D"color: #BFC7D5;">(</span><span styl=
e=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #D9F5DD;">(</span><span style=3D"color: #FFCB8B;">D=
uration</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #BEC5D4;">$duration</span><span style=3D"color: #D9F5DD;">)</span><span st=
yle=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><span style=3D"c=
olor: #BFC7D5;">    </span><span style=3D"color: #697098;">//</span><span s=
tyle=3D"color: #697098;"> Progress time when faking sleep...</span></div><d=
iv class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D=
"color: #FF5572;">$this</span><span style=3D"color: #89DDFF;">-&gt;</span><=
span style=3D"color: #82AAFF;">travel</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #BEC5D4;">$duration</span><span style=3D"col=
or: #89DDFF;">-&gt;totalMilliseconds</span><span style=3D"color: #BFC7D5;">=
)</span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #=
82AAFF;">milliseconds</span><span style=3D"color: #BFC7D5;">();</span></div=
><div class=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code=
></pre><button id=3D"clipButton-177" class=3D"md:block hidden copyBtn" aria=
-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-tar=
get=3D"#clipText-177"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://w=
ww.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"=
M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 =
0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 0=
1-3-3z"></path></svg></button></div>
<p>Laravel uses the <code>Sleep</code> class internally whenever it is paus=
ing execution. For example, the <a href=3D"https://laravel.com/docs/10.x/he=
lpers#method-retry"><code>retry</code></a> helper uses the <code>Sleep</cod=
e> class when sleeping, allowing for improved testability when using that h=
elper.</p>

                               =20
</div>
                        </section>
                    </section>
                </div>
            </section>
        </div>
    </div>







<div class=3D"fixed">
    <input type=3D"text">
</div>



</body></html>
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-383ed792-2cad-4d9e-b822-8bfcc41839f2@mhtml.blink

@charset "utf-8";

.collection-method-list > p { columns: 10.8em 3; }

.collection-method-list a { display: block; overflow: hidden; text-overflow=
: ellipsis; white-space: nowrap; }
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-e2516112-be93-4e17-9c5a-01ae2f932a25@mhtml.blink

@charset "utf-8";

footer { background-color: var(--docsearch-hit-background); z-index: 101; }
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://use.typekit.net/ins2wgm.css

@charset "utf-8";

@import url("https://p.typekit.net/p.css?s=3D1&k=3Dins2wgm&ht=3Dtk&f=3D1745=
4.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3D3993700&app=3Dt=
ypekit&e=3Dcss");

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/398a64/00000000000000007735dc06/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/398a64/00000000000000007735dc06/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/398a64/0000000000=
0000007735dc06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto;=
 font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/b0fedd/00000000000000007735dc01/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/b0fedd/00000000000000007735dc01/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/b0fedd/0000000000=
0000007735dc01/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto;=
 font-style: italic; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/9c393a/00000000000000007735db08/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/9c393a/00000000000000007735db08/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n7&v=3D3") format("woff"), url("https://use.typekit.net/af/9c393a/000000000=
00000007735db08/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/47cb70/00000000000000007735db06/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/47cb70/00000000000000007735db06/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n5&v=3D3") format("woff"), url("https://use.typekit.net/af/47cb70/000000000=
00000007735db06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/3cdb9c/00000000000000007735db09/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/3cdb9c/00000000000000007735db09/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n4&v=3D3") format("woff"), url("https://use.typekit.net/af/3cdb9c/000000000=
00000007735db09/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/716155/00000000000000007735dd24/30/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/716155/00000000000000007735dd24/30/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=
=3D3") format("woff"), url("https://use.typekit.net/af/716155/0000000000000=
0007735dd24/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/7e0390/0000000000000000000158e4/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/7e0390/0000000000000000000158e4/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/7e0390/0000000000000=
000000158e4/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/4cf72c/0000000000000000000158e6/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/4cf72c/0000000000000000000158e6/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/4cf72c/0000000000000=
000000158e6/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/e3f590/0000000000000000000158e7/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/e3f590/0000000000000000000158e7/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/e3f590/0000000000000=
000000158e7/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/396f3b/0000000000000000000158e8/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/396f3b/0000000000000000000158e8/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/396f3b/0000000000000=
000000158e8/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 400; font-stretch: normal; }

.tk-source-code-pro { font-family: source-code-pro, monospace; }

.tk-scandia-line-web { font-family: scandia-line-web, sans-serif; }

.tk-scandia-web { font-family: scandia-web, sans-serif; }
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://p.typekit.net/p.css?s=1&k=ins2wgm&ht=tk&f=17454.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3993700&app=typekit&e=css

@charset "utf-8";
=0A
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/build/assets/app-8aa4d27a.css

@charset "utf-8";

*, ::before, ::after { box-sizing: border-box; border-width: 0px; border-st=
yle: solid; border-color: rgb(231, 232, 242); }

::before, ::after { --tw-content: ""; }

html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-family: =
scandia-web, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-feature-settings: normal; font-variation-settings: normal; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, samp, pre { font-family: source-code-pro, ui-monospace, SFMono-R=
egular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospac=
e; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; font-weight: inherit; line-height: inherit; color: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

button, [type=3D"button"], [type=3D"reset"], [type=3D"submit"] { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; padding: 0px; }

legend { padding: 0px; }

ol, ul, menu { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(181, 181=
, 189); }

button, [role=3D"button"] { cursor: pointer; }

:disabled { cursor: default; }

img, svg, video, canvas, audio, iframe, embed, object { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

[hidden] { display: none; }

*, ::before, ::after { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: =
; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-=
numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ri=
ng-offset-color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-off=
set-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000;=
 --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contr=
ast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ;=
 --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brig=
htness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdro=
p-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backd=
rop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: ; --tw-sla=
shed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fr=
action: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-=
color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-offset-shadow=
: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000; --tw-shad=
ow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --t=
w-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepi=
a: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; =
--tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rota=
te: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-satura=
te: ; --tw-backdrop-sepia: ; }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.docs_main h1, .docs_main h2, .docs_main h3, .docs_main h4, .docs_main h5, =
.docs_main h6 { font-weight: 500; margin-bottom: 0.75em; }

.docs_main h2, .docs_main h3 { margin-top: 2em; }

.docs_main h4 { margin-top: 1.5em; }

.docs_main h1 { font-size: 2em; letter-spacing: -1px; line-height: 1.125em;=
 margin-bottom: 0.65em; }

@media (min-width: 768px) {
  .docs_main h1 { font-size: 2.5em; }
}

@media (min-width: 1024px) {
  .docs_main h1 { font-size: 3em; }
}

@media (min-width: 1280px) {
  .docs_main h1 { font-size: 3.5em; }
}

@media (min-width: 1536px) {
  .docs_main h1 { font-size: 4em; }
}

.docs_main h2 { font-size: 1.75em; font-weight: 400; letter-spacing: -0.5px=
; line-height: 1.125em; }

@media (min-width: 768px) {
  .docs_main h2 { font-size: 2.25em; }
}

@media (min-width: 1024px) {
  .docs_main h2 { font-size: 3em; }
}

.docs_main h3 { font-size: 1.25em; font-weight: 500; line-height: 1.25em; l=
etter-spacing: -0.33px; }

@media (min-width: 640px) {
  .docs_main h3 { font-size: 1.75em; }
}

@media (min-width: 768px) {
  .docs_main h3 { font-size: 2em; }
}

.docs_main h4 { font-size: 1em; font-weight: 400; letter-spacing: -0.25px; =
}

@media (min-width: 640px) {
  .docs_main h4 { font-size: 1.5em; }
}

.docs_main h5 { font-size: 0.95em; font-weight: 700; line-height: 1.666em; =
color: rgb(86, 84, 84); }

@media (min-width: 640px) {
  .docs_main h5 { font-size: 1.125em; }
}

.docs_main h6 { font-size: 0.875em; font-weight: 500; color: rgb(119, 119, =
119); }

.docs_main a { position: relative; text-decoration: none; transition: all 0=
.3s ease 0s; }

.docs_main a.learn_more { color: rgb(235, 68, 50); font-weight: 500; }

.docs_main a.learn_more span { display: inline-block; transition: transform=
 0.3s ease 0s; }

.docs_main a.learn_more:hover span { transform: translate(0.5em); }

.docs_main p { font-size: 1em; line-height: 1.666em; color: rgb(86, 84, 84)=
; }

.docs_main p strong { font-weight: 500; }

.docs_main p.small { font-size: 0.75em; line-height: 1.714em; }

@media (min-width: 768px) {
  .docs_main p { font-size: 1.125em; }
  .docs_main p.small { font-size: 0.875em; }
}

.docs_main p + pre { margin-top: 0px; }

.docs_main p, .docs_main ul, .docs_main ol, .docs_main pre { margin-bottom:=
 1.5em; }

.docs_main p a, .docs_main ul a, .docs_main ol a, .docs_main pre a { color:=
 rgb(235, 68, 50); text-decoration: underline; word-break: break-word; }

.docs_main p a:hover, .docs_main ul a:hover, .docs_main ol a:hover, .docs_m=
ain pre a:hover { }

.docs_main q, .docs_main blockquote p { quotes: "=E2=80=9C" "=E2=80=9D" "=
=E2=80=98" "=E2=80=99"; }

@media (min-width: 640px) {
  .docs_main blockquote { margin-left: 0px; margin-right: 0px; }
}

.docs_main span.small_text { display: block; font-size: 0.625em; line-heigh=
t: 1.4em; color: rgb(86, 84, 84); }

.docs_main span.label, .docs_main label { display: block; font-size: 0.625e=
m; line-height: 1.4em; text-transform: uppercase; opacity: 0.4; margin-bott=
om: 0.875em; letter-spacing: 2.5px; }

.docs_main code { font-size: 0.875em; font-family: source-code-pro, ui-mono=
space, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier=
 New", monospace; line-height: 1.714em; color: rgb(35, 35, 35); }

.docs_main :not(pre) > code { background: rgb(251, 251, 253); color: rgb(20=
2, 71, 63); padding: 0px 0.25em; }

.list-custom li { position: relative; padding-left: 1rem; }

.list-custom li::before { content: ""; position: absolute; top: 0.15em; lef=
t: 0px; width: 9px; height: 10px; background: url("/img/icons/ul_marker.min=
.svg") 50% center / contain no-repeat; }

:not(pre) > code { color: rgb(35, 35, 35); background: none; text-align: le=
ft; white-space: pre; word-spacing: normal; word-break: normal; overflow-wr=
ap: normal; tab-size: 4; hyphens: none; }

.docs_main :not(pre) > code { display: inline-flex; padding: 0px 0.125rem; =
border-radius: 0.125rem; max-width: 100%; overflow-x: auto; vertical-align:=
 middle; }

:is(.dark .docs_main :not(pre) > code) { --tw-bg-opacity: 1; background-col=
or: rgb(37 42 55 / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: rgb(=
235 68 50 / var(--tw-text-opacity)); }

pre { margin-top: 1rem; margin-bottom: 1rem; overflow-x: auto; tab-size: 4;=
 white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap:=
 normal; box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 1px; position: relative; b=
order-radius: 0.5rem; --tw-bg-opacity: 1; background-color: rgb(37 42 55 / =
var(--tw-bg-opacity)); }

.code-block-wrapper .copyBtn { position: absolute; right: 0.5rem; top: 0.5r=
em; --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-text-opacity));=
 opacity: 0.25; outline: transparent solid 2px; outline-offset: 2px; }

.code-block-wrapper .copyBtn:hover { --tw-text-opacity: 1; color: rgb(147 1=
47 158 / var(--tw-text-opacity)); opacity: 1; }

pre .copyBtn:hover, pre .copyBtn:focus, pre .copyBtn:active { --tw-text-opa=
city: 1; color: rgb(255 255 255 / var(--tw-text-opacity)); outline: transpa=
rent solid 2px; outline-offset: 2px; }

pre code.torchlight { display: block; min-width: max-content; padding-top: =
1rem; padding-bottom: 1rem; --tw-bg-opacity: 1 !important; background-color=
: rgb(37 42 55 / var(--tw-bg-opacity)) !important; }

pre code.torchlight .line { padding-left: 1rem; padding-right: 1rem; }

pre code.torchlight .line-number { padding-right: 1rem; }

.docs_sidebar ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_sidebar ul li { display: block; padding: 0.65em 0px; white-space: now=
rap; }

.docs_sidebar ul li h2 { display: block; font-size: 0.875em; font-weight: 5=
00; color: rgb(35, 35, 35); text-decoration: none; margin-bottom: 0px; curs=
or: pointer; transition: all 0.3s ease 0s; }

.docs_sidebar ul li h2:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul li a { display: block; font-size: 0.875em; font-weight: 50=
0; color: rgb(35, 35, 35); text-decoration: none; transition: transform 0.3=
s ease 0s; }

.docs_sidebar ul li a:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul ul { overflow: hidden; max-height: 0px; transition: max-he=
ight 0.45s ease 0s; }

.docs_sidebar ul ul li a { position: relative; padding-left: 1em; font-weig=
ht: 400; line-height: 1.25; }

.docs_sidebar ul ul li.active a::before { content: ""; position: absolute; =
top: 0.25em; left: 0px; width: 0.5rem; height: 0.5rem; background: url("/im=
g/icons/active_marker.min.svg") center center no-repeat; }

.docs_sidebar ul .sub--on > h2 { margin-bottom: 1em; }

.docs_sidebar ul .sub--on ul { max-height: none; }

:root { --docsearch-primary-color: #5468ff; --docsearch-text-color: #1c1e21=
; --docsearch-spacing: 12px; --docsearch-icon-stroke-width: 1.4; --docsearc=
h-highlight-color: var(--docsearch-primary-color); --docsearch-muted-color:=
 #969faf; --docsearch-container-background: rgba(101,108,133,.8); --docsear=
ch-logo-color: #5468ff; --docsearch-modal-width: 560px; --docsearch-modal-h=
eight: 600px; --docsearch-modal-background: #f5f6f7; --docsearch-modal-shad=
ow: inset 1px 1px 0 0 hsla(0,0%,100%,.5),0 3px 8px 0 #555a64; --docsearch-s=
earchbox-height: 56px; --docsearch-searchbox-background: #ebedf0; --docsear=
ch-searchbox-focus-background: #fff; --docsearch-searchbox-shadow: inset 0 =
0 0 2px var(--docsearch-primary-color); --docsearch-hit-height: 56px; --doc=
search-hit-color: #444950; --docsearch-hit-active-color: #fff; --docsearch-=
hit-background: #fff; --docsearch-hit-shadow: 0 1px 3px 0 #d4d9e1; --docsea=
rch-key-gradient: linear-gradient(-225deg,#d5dbe4,#f8f8f8); --docsearch-key=
-shadow: inset 0 -2px 0 0 #cdcde6,inset 0 0 1px 1px #fff,0 1px 2px 1px rgba=
(30,35,90,.4); --docsearch-footer-height: 44px; --docsearch-footer-backgrou=
nd: #fff; --docsearch-footer-shadow: 0 -1px 0 0 #e0e3e8,0 -3px 6px 0 rgba(6=
9,98,155,.12); }

html[data-theme=3D"dark"] { --docsearch-text-color: #f5f6f7; --docsearch-co=
ntainer-background: rgba(9,10,17,.8); --docsearch-modal-background: #15172a=
; --docsearch-modal-shadow: inset 1px 1px 0 0 #2c2e40,0 3px 8px 0 #000309; =
--docsearch-searchbox-background: #090a11; --docsearch-searchbox-focus-back=
ground: #000; --docsearch-hit-color: #bec3c9; --docsearch-hit-shadow: none;=
 --docsearch-hit-background: #090a11; --docsearch-key-gradient: linear-grad=
ient(-26.5deg,#565872,#31355b); --docsearch-key-shadow: inset 0 -2px 0 0 #2=
82d55,inset 0 0 1px 1px #51577d,0 2px 2px 0 rgba(3,4,9,.3); --docsearch-foo=
ter-background: #1e2136; --docsearch-footer-shadow: inset 0 1px 0 0 rgba(73=
,76,106,.5),0 -4px 8px 0 rgba(0,0,0,.2); --docsearch-logo-color: #fff; --do=
csearch-muted-color: #7f8497; }

.DocSearch--active { overflow: hidden !important; }

.DocSearch-Container, .DocSearch-Container * { box-sizing: border-box; }

.DocSearch-Container { background-color: var(--docsearch-container-backgrou=
nd); height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw; z-i=
ndex: 200; }

.DocSearch-Container a { text-decoration: none; }

.DocSearch-Link { appearance: none; background: none; border: 0px; color: v=
ar(--docsearch-highlight-color); cursor: pointer; font: inherit; margin: 0p=
x; padding: 0px; }

.DocSearch-Modal { background: var(--docsearch-modal-background); border-ra=
dius: 6px; box-shadow: var(--docsearch-modal-shadow); flex-direction: colum=
n; margin: 60px auto auto; max-width: var(--docsearch-modal-width); positio=
n: relative; }

.DocSearch-SearchBar { display: flex; padding: var(--docsearch-spacing) var=
(--docsearch-spacing) 0; }

.DocSearch-Form { align-items: center; background: var(--docsearch-searchbo=
x-focus-background); border-radius: 4px; box-shadow: var(--docsearch-search=
box-shadow); display: flex; height: var(--docsearch-searchbox-height); marg=
in: 0px; padding: 0 var(--docsearch-spacing); position: relative; width: 10=
0%; }

.DocSearch-Input { appearance: none; background: transparent; border: 0px; =
color: var(--docsearch-text-color); flex: 1 1 0%; font-style: inherit; font=
-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height=
: inherit; font-family: inherit; font-optical-sizing: inherit; font-kerning=
: inherit; font-feature-settings: inherit; font-variation-settings: inherit=
; font-size: 1.2em; height: 100%; outline: none; padding: 0px 0px 0px 8px; =
width: 80%; }

.DocSearch-Input::placeholder { color: var(--docsearch-muted-color); opacit=
y: 1; }

.DocSearch-Input::-webkit-search-cancel-button, .DocSearch-Input::-webkit-s=
earch-decoration, .DocSearch-Input::-webkit-search-results-button, .DocSear=
ch-Input::-webkit-search-results-decoration { display: none; }

.DocSearch-LoadingIndicator, .DocSearch-MagnifierLabel, .DocSearch-Reset { =
margin: 0px; padding: 0px; }

.DocSearch-MagnifierLabel, .DocSearch-Reset { align-items: center; color: v=
ar(--docsearch-highlight-color); display: flex; justify-content: center; }

.DocSearch-Container--Stalled .DocSearch-MagnifierLabel, .DocSearch-Loading=
Indicator { display: none; }

.DocSearch-Container--Stalled .DocSearch-LoadingIndicator { align-items: ce=
nter; color: var(--docsearch-highlight-color); display: flex; justify-conte=
nt: center; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Reset { animation: auto ease 0s 1 normal none running none; ap=
pearance: none; background: none; border: 0px; border-radius: 50%; color: v=
ar(--docsearch-icon-color); cursor: pointer; right: 0px; stroke-width: var(=
--docsearch-icon-stroke-width); }
}

.DocSearch-Reset { animation: 0.1s ease-in 0s 1 normal forwards running fad=
e-in; appearance: none; background: none; border: 0px; border-radius: 50%; =
color: var(--docsearch-icon-color); cursor: pointer; padding: 2px; right: 0=
px; stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Reset[hidden] { display: none; }

.DocSearch-Reset:hover { color: var(--docsearch-highlight-color); }

.DocSearch-LoadingIndicator svg, .DocSearch-MagnifierLabel svg { height: 24=
px; width: 24px; }

.DocSearch-Cancel { display: none; }

.DocSearch-Dropdown { max-height: calc(var(--docsearch-modal-height) - var(=
--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch-=
footer-height)); min-height: var(--docsearch-spacing); overflow-y: overlay;=
 padding: 0 var(--docsearch-spacing); }

.DocSearch-Dropdown::-webkit-scrollbar { width: 12px; }

.DocSearch-Dropdown::-webkit-scrollbar-track { background: transparent; }

.DocSearch-Dropdown::-webkit-scrollbar-thumb { background-color: var(--docs=
earch-muted-color); border: 3px solid var(--docsearch-modal-background); bo=
rder-radius: 20px; }

.DocSearch-Dropdown ul { list-style: none; margin: 0px; padding: 0px; }

.DocSearch-Label { font-size: 0.75em; line-height: 1.6em; }

.DocSearch-Help, .DocSearch-Label { color: var(--docsearch-muted-color); }

.DocSearch-Help { font-size: 0.9em; margin: 0px; user-select: none; }

.DocSearch-Title { font-size: 1.2em; }

.DocSearch-Logo a { display: flex; }

.DocSearch-Logo svg { color: var(--docsearch-logo-color); margin-left: 8px;=
 }

.DocSearch-Hits:last-of-type { margin-bottom: 24px; }

.DocSearch-Hits mark { background: none; color: var(--docsearch-highlight-c=
olor); }

.DocSearch-HitsFooter { color: var(--docsearch-muted-color); display: flex;=
 font-size: 0.85em; justify-content: center; margin-bottom: var(--docsearch=
-spacing); padding: var(--docsearch-spacing); }

.DocSearch-HitsFooter a { border-bottom: 1px solid; color: inherit; }

.DocSearch-Hit { border-radius: 4px; display: flex; padding-bottom: 4px; po=
sition: relative; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--deleting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--deleting { opacity: 0; transition: all 0.25s linear 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--favoriting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--favoriting { transform: scale(0); transform-origin: center =
top; transition: all 0.25s linear 0.25s; }

.DocSearch-Hit a { background: var(--docsearch-hit-background); border-radi=
us: 4px; box-shadow: var(--docsearch-hit-shadow); display: block; padding-l=
eft: var(--docsearch-spacing); width: 100%; }

.DocSearch-Hit-source { background: var(--docsearch-modal-background); colo=
r: var(--docsearch-highlight-color); font-size: 0.85em; font-weight: 600; l=
ine-height: 32px; margin: 0px -4px; padding: 8px 4px 0px; position: sticky;=
 top: 0px; z-index: 10; }

.DocSearch-Hit-Tree { color: var(--docsearch-muted-color); height: var(--do=
csearch-hit-height); opacity: 0.5; stroke-width: var(--docsearch-icon-strok=
e-width); width: 24px; }

.DocSearch-Hit[aria-selected=3D"true"] a { background-color: var(--docsearc=
h-highlight-color); }

.DocSearch-Hit[aria-selected=3D"true"] mark { text-decoration: underline; }

.DocSearch-Hit-Container { align-items: center; color: var(--docsearch-hit-=
color); display: flex; flex-direction: row; height: var(--docsearch-hit-hei=
ght); padding: 0 var(--docsearch-spacing) 0 0; }

.DocSearch-Hit-icon { height: 20px; width: 20px; }

.DocSearch-Hit-action, .DocSearch-Hit-icon { color: var(--docsearch-muted-c=
olor); stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Hit-action { align-items: center; display: flex; height: 22px; w=
idth: 22px; }

.DocSearch-Hit-action svg { display: block; height: 18px; width: 18px; }

.DocSearch-Hit-action + .DocSearch-Hit-action { margin-left: 6px; }

.DocSearch-Hit-action-button { appearance: none; background: none; border: =
0px; border-radius: 50%; color: inherit; cursor: pointer; padding: 2px; }

svg.DocSearch-Hit-Select-Icon { display: none; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Select-Icon { display=
: block; }

.DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { ba=
ckground: rgba(0, 0, 0, 0.2); transition: background-color 0.1s ease-in 0s;=
 }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
transition: none 0s ease 0s; }
}

.DocSearch-Hit-action-button:focus path, .DocSearch-Hit-action-button:hover=
 path { fill: rgb(255, 255, 255); }

.DocSearch-Hit-content-wrapper { display: flex; flex: 1 1 auto; flex-direct=
ion: column; font-weight: 500; justify-content: center; line-height: 1.2em;=
 margin: 0px 8px; overflow-x: hidden; position: relative; text-overflow: el=
lipsis; white-space: nowrap; width: 80%; }

.DocSearch-Hit-title { font-size: 0.9em; }

.DocSearch-Hit-path { color: var(--docsearch-muted-color); font-size: 0.75e=
m; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-action, .DocSearch-Hi=
t[aria-selected=3D"true"] .DocSearch-Hit-icon, .DocSearch-Hit[aria-selected=
=3D"true"] .DocSearch-Hit-path, .DocSearch-Hit[aria-selected=3D"true"] .Doc=
Search-Hit-text, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-titl=
e, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Tree, .DocSearch-H=
it[aria-selected=3D"true"] mark { color: var(--docsearch-hit-active-color) =
!important; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
background: rgba(0, 0, 0, 0.2); transition: none 0s ease 0s; }
}

.DocSearch-ErrorScreen, .DocSearch-NoResults, .DocSearch-StartScreen { font=
-size: 0.9em; margin: 0px auto; padding: 36px 0px; text-align: center; widt=
h: 80%; }

.DocSearch-Screen-Icon { color: var(--docsearch-muted-color); padding-botto=
m: 12px; }

.DocSearch-NoResults-Prefill-List { display: inline-block; padding-bottom: =
24px; text-align: left; }

.DocSearch-NoResults-Prefill-List ul { display: inline-block; padding: 8px =
0px 0px; }

.DocSearch-NoResults-Prefill-List li { list-style-position: inside; list-st=
yle-type: "=C2=BB "; }

.DocSearch-Prefill { appearance: none; background: none; border: 0px; borde=
r-radius: 1em; color: var(--docsearch-highlight-color); cursor: pointer; di=
splay: inline-block; font-size: 1em; font-weight: 700; padding: 0px; }

.DocSearch-Prefill:focus, .DocSearch-Prefill:hover { outline: none; text-de=
coration: underline; }

.DocSearch-Footer { align-items: center; background: var(--docsearch-footer=
-background); border-radius: 0px 0px 8px 8px; box-shadow: var(--docsearch-f=
ooter-shadow); display: flex; flex-direction: row-reverse; flex-shrink: 0; =
height: var(--docsearch-footer-height); justify-content: space-between; pad=
ding: 0 var(--docsearch-spacing); position: relative; user-select: none; wi=
dth: 100%; z-index: 300; }

.DocSearch-Commands { color: var(--docsearch-muted-color); display: flex; l=
ist-style: none; margin: 0px; padding: 0px; }

.DocSearch-Commands li { align-items: center; display: flex; }

.DocSearch-Commands li:not(:last-of-type) { margin-right: 0.8em; }

.DocSearch-Commands-Key { align-items: center; background: var(--docsearch-=
key-gradient); border-radius: 2px; box-shadow: var(--docsearch-key-shadow);=
 display: flex; height: 18px; justify-content: center; margin-right: 0.4em;=
 padding: 0px 0px 1px; color: var(--docsearch-muted-color); border: 0px; wi=
dth: 20px; }

@media (max-width: 768px) {
  :root { --docsearch-spacing: 10px; --docsearch-footer-height: 40px; }
  .DocSearch-Dropdown { height: 100%; }
  .DocSearch-Container { height: calc(var(--docsearch-vh, 1vh)*100); positi=
on: absolute; }
  .DocSearch-Footer { border-radius: 0px; bottom: 0px; position: absolute; =
}
  .DocSearch-Hit-content-wrapper { display: flex; position: relative; width=
: 80%; }
  .DocSearch-Modal { border-radius: 0px; box-shadow: none; height: calc(var=
(--docsearch-vh, 1vh)*100); margin: 0px; max-width: 100%; width: 100%; }
  .DocSearch-Dropdown { max-height: calc(var(--docsearch-vh, 1vh)*100 - var=
(--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch=
-footer-height)); }
  .DocSearch-Cancel { appearance: none; background: none; border: 0px; colo=
r: var(--docsearch-highlight-color); cursor: pointer; display: inline-block=
; flex: 0 0 auto; font-style: inherit; font-variant: inherit; font-stretch:=
 inherit; line-height: inherit; font-family: inherit; font-optical-sizing: =
inherit; font-kerning: inherit; font-feature-settings: inherit; font-variat=
ion-settings: inherit; font-size: 1em; font-weight: 500; margin-left: var(-=
-docsearch-spacing); outline: none; overflow: hidden; padding: 0px; user-se=
lect: none; white-space: nowrap; }
  .DocSearch-Commands, .DocSearch-Hit-Tree { display: none; }
}

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

:root { --docsearch-primary-color: #F9322C; }

html[data-theme=3D"dark"]:root { --docsearch-primary-color: #F9322C; }

.DocSearch-Button { width: 100%; text-align: left; }

.DocSearch-Button-Container { display: inline-block; margin-right: 5px; }

.DocSearch-Search-Icon { display: inline-block; margin-right: 14px; margin-=
top: -2px; width: 15px; height: 15px; stroke-width: 2; }

.main-header .DocSearch-Button-Placeholder, .DocSearch-Button-Keys { displa=
y: none; }

.main-header .DocSearch-Button-Container { margin-right: 0px; }

.main-header .DocSearch-Search-Icon { color: rgb(35, 35, 35); width: 20px; =
height: 20px; stroke-width: 1.5; }

.callout p { margin-bottom: 0px; }

.docs_main a[name] { position: relative; display: block; visibility: hidden=
; top: -45px; }

.docs_main table { border-collapse: collapse; width: 100%; font-size: 13px;=
 margin-bottom: 2em; }

.docs_main table th, .docs_main table td { border: 1px solid rgb(215, 215, =
220); padding: 10px; text-align: left; }

.docs_main table th { font-size: 16px; }

@media (min-width: 640px) {
  .docs_main a[name] { position: relative; display: block; visibility: hidd=
en; top: -30px; }
}

.docs_main .page_title { display: none; }

.docs_main h1 { font-size: 2.5em; letter-spacing: 0em; }

.docs_main h2 { font-size: 1.75em; letter-spacing: 0px; }

.docs_main h3 { font-size: 1.25em; letter-spacing: 0px; font-weight: 500; }

.docs_main h4 { font-size: 1em; font-weight: 500; letter-spacing: 0px; }

.docs_main h4 a, .docs_main h3 a, .docs_main h2 a { color: rgb(35, 35, 35);=
 }

.docs_main h4 a::before, .docs_main h3 a::before, .docs_main h2 a::before {=
 content: "#"; font-weight: 400; position: absolute; color: rgb(235, 68, 50=
); opacity: 0.6; }

.docs_main h3 a::before, .docs_main h2 a::before { margin-left: -25px; font=
-size: 28px; }

.docs_main h4 a::before { margin-left: -18px; font-size: 17px; }

.docs_main code { font-size: 0.8rem; font-weight: 500; line-height: 1.9; co=
lor: rgb(35, 35, 35); }

.docs_main p { font-size: 1rem; line-height: 1.8em; }

.docs_main p code { font-size: 0.8rem; }

.docs_main ul:not(:first-of-type), .docs_main .content-list ul { list-style=
-type: none; margin: 0px 0px 2.5em; padding: 0px; }

.docs_main ul:not(:first-of-type) li, .docs_main .content-list ul li { posi=
tion: relative; display: block; padding-left: 1.25em; margin-bottom: 1rem; =
font-size: 0.89em; color: rgb(86, 84, 84); line-height: 1.714em; }

.docs_main ul:not(:first-of-type) li a, .docs_main .content-list ul li a { =
text-decoration: none; }

.docs_main ul:not(:first-of-type) li code, .docs_main .content-list ul li c=
ode { font-size: 0.875em; }

.docs_main ul:not(:first-of-type) li::before, .docs_main .content-list ul l=
i::before { content: ""; position: absolute; top: 0.4em; left: 0px; width: =
9px; height: 10px; background: url("/img/icons/ul_marker.min.svg") center c=
enter / contain no-repeat; }

.docs_main h1 + ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_main h1 + ul li { display: block; margin-bottom: 0.5em; }

.docs_main h1 + ul li a { position: relative; font-size: 0.89em; font-weigh=
t: 500; color: rgb(35, 35, 35); text-decoration: none; }

.docs_main h1 + ul li a::before { content: "# "; color: rgb(235, 68, 50); }

.docs_main h1 + ul ul { margin-top: 0.5em; padding: 0px; margin-bottom: 0px=
; }

.docs_main h1 + ul ul li { padding-left: 1.5em; }

.docs_main h1 + ul ul li a { font-weight: 400; }

#carbonads { position: fixed; bottom: 20px; right: 20px; background-color: =
rgb(247, 248, 251); z-index: 100; box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 1=
px; padding: 0.625em; max-width: 130px; box-sizing: content-box; }

#carbonads span { display: block; }

#carbonads img { display: block; margin-bottom: 0.75em; }

#carbonads .carbon-text { display: block; font-size: 0.75em; line-height: 1=
.4em; color: rgb(86, 84, 84); }

#carbonads .carbon-poweredby { font-size: 0.5em; text-transform: uppercase;=
 letter-spacing: 1px; line-height: 1; color: rgb(119, 119, 119); }

@media only screen and (min-width: 320px) and (max-width: 1239px) {
  #carbonads { position: relative; float: none; bottom: initial; right: ini=
tial; margin: 20px 0px; max-width: 330px; padding: 1em; }
  #carbonads .carbon-wrap { display: flex; flex-direction: row; }
  #carbonads img { margin: 0px 1em 0px 0px; }
  #carbonads .carbon-text { font-size: 0.825em; margin-bottom: 1em; }
  #carbonads .carbon-poweredby { position: absolute; left: 162px; bottom: 1=
5px; }
}

@media only screen and (min-width: 320px) and (max-width: 429px) {
  #carbonads .carbon-wrap { flex-direction: column; }
  #carbonads img { margin: 0px 0px 0.5em; }
  #carbonads .carbon-text { margin-bottom: initial; }
  #carbonads .carbon-poweredby { position: initial; left: initial; right: i=
nitial; }
}

@media only print {
  #carbonads { display: none; }
}

#skip-to-content-link:not(:focus) { position: absolute !important; clip: re=
ct(0px, 0px, 0px, 0px) !important; width: 1px !important; height: 1px !impo=
rtant; padding: 0px !important; margin: -1px !important; overflow: hidden !=
important; }

#skip-to-content-link { z-index: 2147483647; }

#main-content { outline: none; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border-width: 0px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-y-0 { top: 0px; bottom: 0px; }

.-left-2 { left: -0.5rem; }

.-left-6 { left: -1.5rem; }

.-right-2 { right: -0.5rem; }

.-right-\[40px\] { right: -40px; }

.-top-24 { top: -6rem; }

.bottom-0 { bottom: 0px; }

.bottom-12 { bottom: 3rem; }

.bottom-40 { bottom: 10rem; }

.left-0 { left: 0px; }

.left-2 { left: 0.5rem; }

.left-28 { left: 7rem; }

.left-3 { left: 0.75rem; }

.left-\[-20\%\] { left: -20%; }

.right-0 { right: 0px; }

.right-1\/3 { right: 33.3333%; }

.right-1\/4 { right: 25%; }

.right-16 { right: 4rem; }

.right-6 { right: 1.5rem; }

.right-8 { right: 2rem; }

.right-\[-20\%\] { right: -20%; }

.right-\[12\%\] { right: 12%; }

.right-\[20\%\] { right: 20%; }

.right-\[300px\] { right: 300px; }

.right-\[80px\] { right: 80px; }

.top-0 { top: 0px; }

.top-12 { top: 3rem; }

.top-2\/3 { top: 66.6667%; }

.top-20 { top: 5rem; }

.top-24 { top: 6rem; }

.top-3 { top: 0.75rem; }

.top-40 { top: 10rem; }

.top-48 { top: 12rem; }

.top-64 { top: 16rem; }

.top-\[25\%\] { top: 25%; }

.top-\[300px\] { top: 300px; }

.top-\[45\%\] { top: 45%; }

.top-\[480px\] { top: 480px; }

.top-\[50px\] { top: 50px; }

.z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-50 { z-index: 50; }

.col-span-12 { grid-column: span 12 / span 12; }

.col-span-6 { grid-column: span 6 / span 6; }

.m-0 { margin: 0px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.mb-0 { margin-bottom: 0px; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-6 { margin-bottom: 1.5rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-2\.5 { margin-left: 0.625rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-8 { margin-left: 2rem; }

.mr-2 { margin-right: 0.5rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-12 { margin-top: 3rem; }

.mt-14 { margin-top: 3.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-2\.5 { margin-top: 0.625rem; }

.mt-24 { margin-top: 6rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-8 { margin-top: 2rem; }

.mt-px { margin-top: 1px; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.grid { display: grid; }

.hidden { display: none; }

.aspect-square { aspect-ratio: 1 / 1; }

.h-10 { height: 2.5rem; }

.h-12 { height: 3rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-20 { height: 5rem; }

.h-4 { height: 1rem; }

.h-5 { height: 1.25rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-\[300px\] { height: 300px; }

.h-\[640px\] { height: 640px; }

.h-full { height: 100%; }

.max-h-full { max-height: 100%; }

.min-h-0 { min-height: 0px; }

.min-h-full { min-height: 100%; }

.w-1\/2 { width: 50%; }

.w-10 { width: 2.5rem; }

.w-12 { width: 3rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\.5 { width: 0.625rem; }

.w-20 { width: 5rem; }

.w-224 { width: 56rem; }

.w-4 { width: 1rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-9 { width: 2.25rem; }

.w-\[302px\] { width: 302px; }

.w-\[640px\] { width: 640px; }

.w-full { width: 100%; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-\[1100px\] { max-width: 1100px; }

.max-w-\[218px\] { max-width: 218px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-none { max-width: none; }

.max-w-prose { max-width: 65ch; }

.max-w-screen-2xl { max-width: 1536px; }

.max-w-screen-lg { max-width: 1024px; }

.max-w-screen-xl { max-width: 1280px; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.flex-1 { flex: 1 1 0%; }

.flex-shrink-0, .shrink-0 { flex-shrink: 0; }

.origin-top { transform-origin: center top; }

.-translate-x-1 { --tw-translate-x: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-1 { --tw-translate-y: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-12 { --tw-translate-y: -3rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-20 { --tw-translate-y: -5rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-8 { --tw-translate-y: -2rem; transform: translate(var(--tw-tr=
anslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-sk=
ew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sc=
ale-y)); }

.translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.translate-x-32 { --tw-translate-x: 8rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-rotate-1 { --tw-rotate: -1deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; transform: translate(var(--tw-translate-=
x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) s=
kewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));=
 }

.rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translate-x),v=
ar(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY=
(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(var(--t=
w-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }

.scale-105 { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }

.scale-75 { --tw-scale-x: .75; --tw-scale-y: .75; transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(=
--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(=
--tw-scale-y)); }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))=
 scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@keyframes cube {=20
  50% { transform: translateY(1rem); }
}

.animate-cube { animation: 6s ease-in-out 0s infinite normal none running c=
ube; }

.resize { resize: both; }

.list-disc { list-style-type: disc; }

.appearance-none { appearance: none; }

.columns-1 { columns: 1; }

.break-inside-avoid-column { break-inside: avoid-column; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-6 { grid-template-columns: repeat(6, minmax(0px, 1fr)); }

.grid-cols-8 { grid-template-columns: repeat(8, minmax(0px, 1fr)); }

.flex-col { flex-direction: column; }

.flex-wrap { flex-wrap: wrap; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.gap-10 { gap: 2.5rem; }

.gap-12 { gap: 3rem; }

.gap-3 { gap: 0.75rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-x-10 { column-gap: 2.5rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-y-12 { row-gap: 3rem; }

.gap-y-6 { row-gap: 1.5rem; }

.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(.75rem * var(--tw-space-x-reverse)); margin-left: calc(.75r=
em * calc(1 - var(--tw-space-x-reverse))); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1rem * var(--tw-space-x-reverse)); margin-left: calc(1rem *=
 calc(1 - var(--tw-space-x-reverse))); }

.space-x-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1.25rem * var(--tw-space-x-reverse)); margin-left: calc(1.2=
5rem * calc(1 - var(--tw-space-x-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.25rem * var(--tw-space-y-reverse)); }

.space-y-12 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; ma=
rgin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(3rem * var(--tw-space-y-reverse)); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(.5rem * var(--tw-space-y-reverse)); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.75rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.75rem * var(--tw-space-y-reverse)); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(1rem * var(--tw-space-y-reverse)); }

.space-y-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom=
: calc(1.25rem * var(--tw-space-y-reverse)); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(2rem * var(--tw-space-y-reverse)); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-right-width: calc(1px * var(--tw-divide-x-reverse)); border-left-width:=
 calc(1px * calc(1 - var(--tw-divide-x-reverse))); }

.divide-dark-500 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(57 64 86 / var(--tw-divide-opacity)); }

.divide-gray-100 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(245 245 250 / var(--tw-divide-opacity)); }

.self-stretch { align-self: stretch; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.whitespace-nowrap { white-space: nowrap; }

.rounded-2xl { border-radius: 1rem; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-none { border-radius: 0px; }

.rounded-b-lg { border-bottom-right-radius: 0.5rem; border-bottom-left-radi=
us: 0.5rem; }

.rounded-b-none { border-bottom-right-radius: 0px; border-bottom-left-radiu=
s: 0px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.border { border-width: 1px; }

.border-\[10px\] { border-width: 10px; }

.border-b { border-bottom-width: 1px; }

.border-b-\[3px\] { border-bottom-width: 3px; }

.border-l { border-left-width: 1px; }

.border-r { border-right-width: 1px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-dashed { border-style: dashed; }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgb(245 245 250 / =
var(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgb(231 232 242 / =
var(--tw-border-opacity)); }

.border-red-400 { --tw-border-opacity: 1; border-color: rgb(248 113 113 / v=
ar(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgb(249 50 44 / var=
(--tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50 / var=
(--tw-border-opacity)); }

.border-white { --tw-border-opacity: 1; border-color: rgb(255 255 255 / var=
(--tw-border-opacity)); }

.border-b-transparent { border-bottom-color: transparent; }

.border-opacity-60 { --tw-border-opacity: .6; }

.bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(7 130 177 / var(--=
tw-bg-opacity)); }

.bg-breeze { --tw-bg-opacity: 1; background-color: rgb(243 193 75 / var(--t=
w-bg-opacity)); }

.bg-breeze\/0 { background-color: rgba(243, 193, 75, 0); }

.bg-breeze\/10 { background-color: rgba(243, 193, 75, 0.1); }

.bg-breeze\/100 { background-color: rgb(243, 193, 75); }

.bg-breeze\/20 { background-color: rgba(243, 193, 75, 0.2); }

.bg-breeze\/25 { background-color: rgba(243, 193, 75, 0.25); }

.bg-breeze\/30 { background-color: rgba(243, 193, 75, 0.3); }

.bg-breeze\/40 { background-color: rgba(243, 193, 75, 0.4); }

.bg-breeze\/5 { background-color: rgba(243, 193, 75, 0.05); }

.bg-breeze\/50 { background-color: rgba(243, 193, 75, 0.5); }

.bg-breeze\/60 { background-color: rgba(243, 193, 75, 0.6); }

.bg-breeze\/70 { background-color: rgba(243, 193, 75, 0.7); }

.bg-breeze\/75 { background-color: rgba(243, 193, 75, 0.75); }

.bg-breeze\/80 { background-color: rgba(243, 193, 75, 0.8); }

.bg-breeze\/90 { background-color: rgba(243, 193, 75, 0.9); }

.bg-breeze\/95 { background-color: rgba(243, 193, 75, 0.95); }

.bg-cashier { --tw-bg-opacity: 1; background-color: rgb(145 214 48 / var(--=
tw-bg-opacity)); }

.bg-cashier\/0 { background-color: rgba(145, 214, 48, 0); }

.bg-cashier\/10 { background-color: rgba(145, 214, 48, 0.1); }

.bg-cashier\/100 { background-color: rgb(145, 214, 48); }

.bg-cashier\/20 { background-color: rgba(145, 214, 48, 0.2); }

.bg-cashier\/25 { background-color: rgba(145, 214, 48, 0.25); }

.bg-cashier\/30 { background-color: rgba(145, 214, 48, 0.3); }

.bg-cashier\/40 { background-color: rgba(145, 214, 48, 0.4); }

.bg-cashier\/5 { background-color: rgba(145, 214, 48, 0.05); }

.bg-cashier\/50 { background-color: rgba(145, 214, 48, 0.5); }

.bg-cashier\/60 { background-color: rgba(145, 214, 48, 0.6); }

.bg-cashier\/70 { background-color: rgba(145, 214, 48, 0.7); }

.bg-cashier\/75 { background-color: rgba(145, 214, 48, 0.75); }

.bg-cashier\/80 { background-color: rgba(145, 214, 48, 0.8); }

.bg-cashier\/90 { background-color: rgba(145, 214, 48, 0.9); }

.bg-cashier\/95 { background-color: rgba(145, 214, 48, 0.95); }

.bg-dark-600 { --tw-bg-opacity: 1; background-color: rgb(37 42 55 / var(--t=
w-bg-opacity)); }

.bg-dark-700 { --tw-bg-opacity: 1; background-color: rgb(23 25 35 / var(--t=
w-bg-opacity)); }

.bg-dusk { --tw-bg-opacity: 1; background-color: rgb(187 53 139 / var(--tw-=
bg-opacity)); }

.bg-dusk\/0 { background-color: rgba(187, 53, 139, 0); }

.bg-dusk\/10 { background-color: rgba(187, 53, 139, 0.1); }

.bg-dusk\/100 { background-color: rgb(187, 53, 139); }

.bg-dusk\/20 { background-color: rgba(187, 53, 139, 0.2); }

.bg-dusk\/25 { background-color: rgba(187, 53, 139, 0.25); }

.bg-dusk\/30 { background-color: rgba(187, 53, 139, 0.3); }

.bg-dusk\/40 { background-color: rgba(187, 53, 139, 0.4); }

.bg-dusk\/5 { background-color: rgba(187, 53, 139, 0.05); }

.bg-dusk\/50 { background-color: rgba(187, 53, 139, 0.5); }

.bg-dusk\/60 { background-color: rgba(187, 53, 139, 0.6); }

.bg-dusk\/70 { background-color: rgba(187, 53, 139, 0.7); }

.bg-dusk\/75 { background-color: rgba(187, 53, 139, 0.75); }

.bg-dusk\/80 { background-color: rgba(187, 53, 139, 0.8); }

.bg-dusk\/90 { background-color: rgba(187, 53, 139, 0.9); }

.bg-dusk\/95 { background-color: rgba(187, 53, 139, 0.95); }

.bg-echo { --tw-bg-opacity: 1; background-color: rgb(74 178 176 / var(--tw-=
bg-opacity)); }

.bg-echo\/0 { background-color: rgba(74, 178, 176, 0); }

.bg-echo\/10 { background-color: rgba(74, 178, 176, 0.1); }

.bg-echo\/100 { background-color: rgb(74, 178, 176); }

.bg-echo\/20 { background-color: rgba(74, 178, 176, 0.2); }

.bg-echo\/25 { background-color: rgba(74, 178, 176, 0.25); }

.bg-echo\/30 { background-color: rgba(74, 178, 176, 0.3); }

.bg-echo\/40 { background-color: rgba(74, 178, 176, 0.4); }

.bg-echo\/5 { background-color: rgba(74, 178, 176, 0.05); }

.bg-echo\/50 { background-color: rgba(74, 178, 176, 0.5); }

.bg-echo\/60 { background-color: rgba(74, 178, 176, 0.6); }

.bg-echo\/70 { background-color: rgba(74, 178, 176, 0.7); }

.bg-echo\/75 { background-color: rgba(74, 178, 176, 0.75); }

.bg-echo\/80 { background-color: rgba(74, 178, 176, 0.8); }

.bg-echo\/90 { background-color: rgba(74, 178, 176, 0.9); }

.bg-echo\/95 { background-color: rgba(74, 178, 176, 0.95); }

.bg-envoyer { --tw-bg-opacity: 1; background-color: rgb(245 104 87 / var(--=
tw-bg-opacity)); }

.bg-envoyer\/0 { background-color: rgba(245, 104, 87, 0); }

.bg-envoyer\/10 { background-color: rgba(245, 104, 87, 0.1); }

.bg-envoyer\/100 { background-color: rgb(245, 104, 87); }

.bg-envoyer\/20 { background-color: rgba(245, 104, 87, 0.2); }

.bg-envoyer\/25 { background-color: rgba(245, 104, 87, 0.25); }

.bg-envoyer\/30 { background-color: rgba(245, 104, 87, 0.3); }

.bg-envoyer\/40 { background-color: rgba(245, 104, 87, 0.4); }

.bg-envoyer\/5 { background-color: rgba(245, 104, 87, 0.05); }

.bg-envoyer\/50 { background-color: rgba(245, 104, 87, 0.5); }

.bg-envoyer\/60 { background-color: rgba(245, 104, 87, 0.6); }

.bg-envoyer\/70 { background-color: rgba(245, 104, 87, 0.7); }

.bg-envoyer\/75 { background-color: rgba(245, 104, 87, 0.75); }

.bg-envoyer\/80 { background-color: rgba(245, 104, 87, 0.8); }

.bg-envoyer\/90 { background-color: rgba(245, 104, 87, 0.9); }

.bg-envoyer\/95 { background-color: rgba(245, 104, 87, 0.95); }

.bg-forge { --tw-bg-opacity: 1; background-color: rgb(30 183 134 / var(--tw=
-bg-opacity)); }

.bg-forge\/0 { background-color: rgba(30, 183, 134, 0); }

.bg-forge\/10 { background-color: rgba(30, 183, 134, 0.1); }

.bg-forge\/100 { background-color: rgb(30, 183, 134); }

.bg-forge\/20 { background-color: rgba(30, 183, 134, 0.2); }

.bg-forge\/25 { background-color: rgba(30, 183, 134, 0.25); }

.bg-forge\/30 { background-color: rgba(30, 183, 134, 0.3); }

.bg-forge\/40 { background-color: rgba(30, 183, 134, 0.4); }

.bg-forge\/5 { background-color: rgba(30, 183, 134, 0.05); }

.bg-forge\/50 { background-color: rgba(30, 183, 134, 0.5); }

.bg-forge\/60 { background-color: rgba(30, 183, 134, 0.6); }

.bg-forge\/70 { background-color: rgba(30, 183, 134, 0.7); }

.bg-forge\/75 { background-color: rgba(30, 183, 134, 0.75); }

.bg-forge\/80 { background-color: rgba(30, 183, 134, 0.8); }

.bg-forge\/90 { background-color: rgba(30, 183, 134, 0.9); }

.bg-forge\/95 { background-color: rgba(30, 183, 134, 0.95); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(245 245 250 / var(=
--tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(251 251 253 / var(-=
-tw-bg-opacity)); }

.bg-herd { --tw-bg-opacity: 1; background-color: rgb(220 38 38 / var(--tw-b=
g-opacity)); }

.bg-herd\/0 { background-color: rgba(220, 38, 38, 0); }

.bg-herd\/10 { background-color: rgba(220, 38, 38, 0.1); }

.bg-herd\/100 { background-color: rgb(220, 38, 38); }

.bg-herd\/20 { background-color: rgba(220, 38, 38, 0.2); }

.bg-herd\/25 { background-color: rgba(220, 38, 38, 0.25); }

.bg-herd\/30 { background-color: rgba(220, 38, 38, 0.3); }

.bg-herd\/40 { background-color: rgba(220, 38, 38, 0.4); }

.bg-herd\/5 { background-color: rgba(220, 38, 38, 0.05); }

.bg-herd\/50 { background-color: rgba(220, 38, 38, 0.5); }

.bg-herd\/60 { background-color: rgba(220, 38, 38, 0.6); }

.bg-herd\/70 { background-color: rgba(220, 38, 38, 0.7); }

.bg-herd\/75 { background-color: rgba(220, 38, 38, 0.75); }

.bg-herd\/80 { background-color: rgba(220, 38, 38, 0.8); }

.bg-herd\/90 { background-color: rgba(220, 38, 38, 0.9); }

.bg-herd\/95 { background-color: rgba(220, 38, 38, 0.95); }

.bg-homestead { --tw-bg-opacity: 1; background-color: rgb(231 128 28 / var(=
--tw-bg-opacity)); }

.bg-homestead\/0 { background-color: rgba(231, 128, 28, 0); }

.bg-homestead\/10 { background-color: rgba(231, 128, 28, 0.1); }

.bg-homestead\/100 { background-color: rgb(231, 128, 28); }

.bg-homestead\/20 { background-color: rgba(231, 128, 28, 0.2); }

.bg-homestead\/25 { background-color: rgba(231, 128, 28, 0.25); }

.bg-homestead\/30 { background-color: rgba(231, 128, 28, 0.3); }

.bg-homestead\/40 { background-color: rgba(231, 128, 28, 0.4); }

.bg-homestead\/5 { background-color: rgba(231, 128, 28, 0.05); }

.bg-homestead\/50 { background-color: rgba(231, 128, 28, 0.5); }

.bg-homestead\/60 { background-color: rgba(231, 128, 28, 0.6); }

.bg-homestead\/70 { background-color: rgba(231, 128, 28, 0.7); }

.bg-homestead\/75 { background-color: rgba(231, 128, 28, 0.75); }

.bg-homestead\/80 { background-color: rgba(231, 128, 28, 0.8); }

.bg-homestead\/90 { background-color: rgba(231, 128, 28, 0.9); }

.bg-homestead\/95 { background-color: rgba(231, 128, 28, 0.95); }

.bg-horizon { --tw-bg-opacity: 1; background-color: rgb(140 110 211 / var(-=
-tw-bg-opacity)); }

.bg-horizon\/0 { background-color: rgba(140, 110, 211, 0); }

.bg-horizon\/10 { background-color: rgba(140, 110, 211, 0.1); }

.bg-horizon\/100 { background-color: rgb(140, 110, 211); }

.bg-horizon\/20 { background-color: rgba(140, 110, 211, 0.2); }

.bg-horizon\/25 { background-color: rgba(140, 110, 211, 0.25); }

.bg-horizon\/30 { background-color: rgba(140, 110, 211, 0.3); }

.bg-horizon\/40 { background-color: rgba(140, 110, 211, 0.4); }

.bg-horizon\/5 { background-color: rgba(140, 110, 211, 0.05); }

.bg-horizon\/50 { background-color: rgba(140, 110, 211, 0.5); }

.bg-horizon\/60 { background-color: rgba(140, 110, 211, 0.6); }

.bg-horizon\/70 { background-color: rgba(140, 110, 211, 0.7); }

.bg-horizon\/75 { background-color: rgba(140, 110, 211, 0.75); }

.bg-horizon\/80 { background-color: rgba(140, 110, 211, 0.8); }

.bg-horizon\/90 { background-color: rgba(140, 110, 211, 0.9); }

.bg-horizon\/95 { background-color: rgba(140, 110, 211, 0.95); }

.bg-inertia { --tw-bg-opacity: 1; background-color: rgb(149 83 233 / var(--=
tw-bg-opacity)); }

.bg-inertia\/0 { background-color: rgba(149, 83, 233, 0); }

.bg-inertia\/10 { background-color: rgba(149, 83, 233, 0.1); }

.bg-inertia\/100 { background-color: rgb(149, 83, 233); }

.bg-inertia\/20 { background-color: rgba(149, 83, 233, 0.2); }

.bg-inertia\/25 { background-color: rgba(149, 83, 233, 0.25); }

.bg-inertia\/30 { background-color: rgba(149, 83, 233, 0.3); }

.bg-inertia\/40 { background-color: rgba(149, 83, 233, 0.4); }

.bg-inertia\/5 { background-color: rgba(149, 83, 233, 0.05); }

.bg-inertia\/50 { background-color: rgba(149, 83, 233, 0.5); }

.bg-inertia\/60 { background-color: rgba(149, 83, 233, 0.6); }

.bg-inertia\/70 { background-color: rgba(149, 83, 233, 0.7); }

.bg-inertia\/75 { background-color: rgba(149, 83, 233, 0.75); }

.bg-inertia\/80 { background-color: rgba(149, 83, 233, 0.8); }

.bg-inertia\/90 { background-color: rgba(149, 83, 233, 0.9); }

.bg-inertia\/95 { background-color: rgba(149, 83, 233, 0.95); }

.bg-jetstream { --tw-bg-opacity: 1; background-color: rgb(104 117 245 / var=
(--tw-bg-opacity)); }

.bg-jetstream\/0 { background-color: rgba(104, 117, 245, 0); }

.bg-jetstream\/10 { background-color: rgba(104, 117, 245, 0.1); }

.bg-jetstream\/100 { background-color: rgb(104, 117, 245); }

.bg-jetstream\/20 { background-color: rgba(104, 117, 245, 0.2); }

.bg-jetstream\/25 { background-color: rgba(104, 117, 245, 0.25); }

.bg-jetstream\/30 { background-color: rgba(104, 117, 245, 0.3); }

.bg-jetstream\/40 { background-color: rgba(104, 117, 245, 0.4); }

.bg-jetstream\/5 { background-color: rgba(104, 117, 245, 0.05); }

.bg-jetstream\/50 { background-color: rgba(104, 117, 245, 0.5); }

.bg-jetstream\/60 { background-color: rgba(104, 117, 245, 0.6); }

.bg-jetstream\/70 { background-color: rgba(104, 117, 245, 0.7); }

.bg-jetstream\/75 { background-color: rgba(104, 117, 245, 0.75); }

.bg-jetstream\/80 { background-color: rgba(104, 117, 245, 0.8); }

.bg-jetstream\/90 { background-color: rgba(104, 117, 245, 0.9); }

.bg-jetstream\/95 { background-color: rgba(104, 117, 245, 0.95); }

.bg-livewire { --tw-bg-opacity: 1; background-color: rgb(251 112 169 / var(=
--tw-bg-opacity)); }

.bg-livewire\/0 { background-color: rgba(251, 112, 169, 0); }

.bg-livewire\/10 { background-color: rgba(251, 112, 169, 0.1); }

.bg-livewire\/100 { background-color: rgb(251, 112, 169); }

.bg-livewire\/20 { background-color: rgba(251, 112, 169, 0.2); }

.bg-livewire\/25 { background-color: rgba(251, 112, 169, 0.25); }

.bg-livewire\/30 { background-color: rgba(251, 112, 169, 0.3); }

.bg-livewire\/40 { background-color: rgba(251, 112, 169, 0.4); }

.bg-livewire\/5 { background-color: rgba(251, 112, 169, 0.05); }

.bg-livewire\/50 { background-color: rgba(251, 112, 169, 0.5); }

.bg-livewire\/60 { background-color: rgba(251, 112, 169, 0.6); }

.bg-livewire\/70 { background-color: rgba(251, 112, 169, 0.7); }

.bg-livewire\/75 { background-color: rgba(251, 112, 169, 0.75); }

.bg-livewire\/80 { background-color: rgba(251, 112, 169, 0.8); }

.bg-livewire\/90 { background-color: rgba(251, 112, 169, 0.9); }

.bg-livewire\/95 { background-color: rgba(251, 112, 169, 0.95); }

.bg-lumen { --tw-bg-opacity: 1; background-color: rgb(246 174 122 / var(--t=
w-bg-opacity)); }

.bg-lumen\/0 { background-color: rgba(246, 174, 122, 0); }

.bg-lumen\/10 { background-color: rgba(246, 174, 122, 0.1); }

.bg-lumen\/100 { background-color: rgb(246, 174, 122); }

.bg-lumen\/20 { background-color: rgba(246, 174, 122, 0.2); }

.bg-lumen\/25 { background-color: rgba(246, 174, 122, 0.25); }

.bg-lumen\/30 { background-color: rgba(246, 174, 122, 0.3); }

.bg-lumen\/40 { background-color: rgba(246, 174, 122, 0.4); }

.bg-lumen\/5 { background-color: rgba(246, 174, 122, 0.05); }

.bg-lumen\/50 { background-color: rgba(246, 174, 122, 0.5); }

.bg-lumen\/60 { background-color: rgba(246, 174, 122, 0.6); }

.bg-lumen\/70 { background-color: rgba(246, 174, 122, 0.7); }

.bg-lumen\/75 { background-color: rgba(246, 174, 122, 0.75); }

.bg-lumen\/80 { background-color: rgba(246, 174, 122, 0.8); }

.bg-lumen\/90 { background-color: rgba(246, 174, 122, 0.9); }

.bg-lumen\/95 { background-color: rgba(246, 174, 122, 0.95); }

.bg-mix { --tw-bg-opacity: 1; background-color: rgb(41 75 165 / var(--tw-bg=
-opacity)); }

.bg-mix\/0 { background-color: rgba(41, 75, 165, 0); }

.bg-mix\/10 { background-color: rgba(41, 75, 165, 0.1); }

.bg-mix\/100 { background-color: rgb(41, 75, 165); }

.bg-mix\/20 { background-color: rgba(41, 75, 165, 0.2); }

.bg-mix\/25 { background-color: rgba(41, 75, 165, 0.25); }

.bg-mix\/30 { background-color: rgba(41, 75, 165, 0.3); }

.bg-mix\/40 { background-color: rgba(41, 75, 165, 0.4); }

.bg-mix\/5 { background-color: rgba(41, 75, 165, 0.05); }

.bg-mix\/50 { background-color: rgba(41, 75, 165, 0.5); }

.bg-mix\/60 { background-color: rgba(41, 75, 165, 0.6); }

.bg-mix\/70 { background-color: rgba(41, 75, 165, 0.7); }

.bg-mix\/75 { background-color: rgba(41, 75, 165, 0.75); }

.bg-mix\/80 { background-color: rgba(41, 75, 165, 0.8); }

.bg-mix\/90 { background-color: rgba(41, 75, 165, 0.9); }

.bg-mix\/95 { background-color: rgba(41, 75, 165, 0.95); }

.bg-nova { --tw-bg-opacity: 1; background-color: rgb(64 153 222 / var(--tw-=
bg-opacity)); }

.bg-nova\/0 { background-color: rgba(64, 153, 222, 0); }

.bg-nova\/10 { background-color: rgba(64, 153, 222, 0.1); }

.bg-nova\/100 { background-color: rgb(64, 153, 222); }

.bg-nova\/20 { background-color: rgba(64, 153, 222, 0.2); }

.bg-nova\/25 { background-color: rgba(64, 153, 222, 0.25); }

.bg-nova\/30 { background-color: rgba(64, 153, 222, 0.3); }

.bg-nova\/40 { background-color: rgba(64, 153, 222, 0.4); }

.bg-nova\/5 { background-color: rgba(64, 153, 222, 0.05); }

.bg-nova\/50 { background-color: rgba(64, 153, 222, 0.5); }

.bg-nova\/60 { background-color: rgba(64, 153, 222, 0.6); }

.bg-nova\/70 { background-color: rgba(64, 153, 222, 0.7); }

.bg-nova\/75 { background-color: rgba(64, 153, 222, 0.75); }

.bg-nova\/80 { background-color: rgba(64, 153, 222, 0.8); }

.bg-nova\/90 { background-color: rgba(64, 153, 222, 0.9); }

.bg-nova\/95 { background-color: rgba(64, 153, 222, 0.95); }

.bg-octane { --tw-bg-opacity: 1; background-color: rgb(202 58 49 / var(--tw=
-bg-opacity)); }

.bg-octane\/0 { background-color: rgba(202, 58, 49, 0); }

.bg-octane\/10 { background-color: rgba(202, 58, 49, 0.1); }

.bg-octane\/100 { background-color: rgb(202, 58, 49); }

.bg-octane\/20 { background-color: rgba(202, 58, 49, 0.2); }

.bg-octane\/25 { background-color: rgba(202, 58, 49, 0.25); }

.bg-octane\/30 { background-color: rgba(202, 58, 49, 0.3); }

.bg-octane\/40 { background-color: rgba(202, 58, 49, 0.4); }

.bg-octane\/5 { background-color: rgba(202, 58, 49, 0.05); }

.bg-octane\/50 { background-color: rgba(202, 58, 49, 0.5); }

.bg-octane\/60 { background-color: rgba(202, 58, 49, 0.6); }

.bg-octane\/70 { background-color: rgba(202, 58, 49, 0.7); }

.bg-octane\/75 { background-color: rgba(202, 58, 49, 0.75); }

.bg-octane\/80 { background-color: rgba(202, 58, 49, 0.8); }

.bg-octane\/90 { background-color: rgba(202, 58, 49, 0.9); }

.bg-octane\/95 { background-color: rgba(202, 58, 49, 0.95); }

.bg-orange-600 { --tw-bg-opacity: 1; background-color: rgb(244 157 55 / var=
(--tw-bg-opacity)); }

.bg-passport { --tw-bg-opacity: 1; background-color: rgb(125 217 242 / var(=
--tw-bg-opacity)); }

.bg-passport\/0 { background-color: rgba(125, 217, 242, 0); }

.bg-passport\/10 { background-color: rgba(125, 217, 242, 0.1); }

.bg-passport\/100 { background-color: rgb(125, 217, 242); }

.bg-passport\/20 { background-color: rgba(125, 217, 242, 0.2); }

.bg-passport\/25 { background-color: rgba(125, 217, 242, 0.25); }

.bg-passport\/30 { background-color: rgba(125, 217, 242, 0.3); }

.bg-passport\/40 { background-color: rgba(125, 217, 242, 0.4); }

.bg-passport\/5 { background-color: rgba(125, 217, 242, 0.05); }

.bg-passport\/50 { background-color: rgba(125, 217, 242, 0.5); }

.bg-passport\/60 { background-color: rgba(125, 217, 242, 0.6); }

.bg-passport\/70 { background-color: rgba(125, 217, 242, 0.7); }

.bg-passport\/75 { background-color: rgba(125, 217, 242, 0.75); }

.bg-passport\/80 { background-color: rgba(125, 217, 242, 0.8); }

.bg-passport\/90 { background-color: rgba(125, 217, 242, 0.9); }

.bg-passport\/95 { background-color: rgba(125, 217, 242, 0.95); }

.bg-pennant { --tw-bg-opacity: 1; background-color: rgb(26 164 74 / var(--t=
w-bg-opacity)); }

.bg-pennant\/0 { background-color: rgba(26, 164, 74, 0); }

.bg-pennant\/10 { background-color: rgba(26, 164, 74, 0.1); }

.bg-pennant\/100 { background-color: rgb(26, 164, 74); }

.bg-pennant\/20 { background-color: rgba(26, 164, 74, 0.2); }

.bg-pennant\/25 { background-color: rgba(26, 164, 74, 0.25); }

.bg-pennant\/30 { background-color: rgba(26, 164, 74, 0.3); }

.bg-pennant\/40 { background-color: rgba(26, 164, 74, 0.4); }

.bg-pennant\/5 { background-color: rgba(26, 164, 74, 0.05); }

.bg-pennant\/50 { background-color: rgba(26, 164, 74, 0.5); }

.bg-pennant\/60 { background-color: rgba(26, 164, 74, 0.6); }

.bg-pennant\/70 { background-color: rgba(26, 164, 74, 0.7); }

.bg-pennant\/75 { background-color: rgba(26, 164, 74, 0.75); }

.bg-pennant\/80 { background-color: rgba(26, 164, 74, 0.8); }

.bg-pennant\/90 { background-color: rgba(26, 164, 74, 0.9); }

.bg-pennant\/95 { background-color: rgba(26, 164, 74, 0.95); }

.bg-pint { --tw-bg-opacity: 1; background-color: rgb(255 208 0 / var(--tw-b=
g-opacity)); }

.bg-pint\/0 { background-color: rgba(255, 208, 0, 0); }

.bg-pint\/10 { background-color: rgba(255, 208, 0, 0.1); }

.bg-pint\/100 { background-color: rgb(255, 208, 0); }

.bg-pint\/20 { background-color: rgba(255, 208, 0, 0.2); }

.bg-pint\/25 { background-color: rgba(255, 208, 0, 0.25); }

.bg-pint\/30 { background-color: rgba(255, 208, 0, 0.3); }

.bg-pint\/40 { background-color: rgba(255, 208, 0, 0.4); }

.bg-pint\/5 { background-color: rgba(255, 208, 0, 0.05); }

.bg-pint\/50 { background-color: rgba(255, 208, 0, 0.5); }

.bg-pint\/60 { background-color: rgba(255, 208, 0, 0.6); }

.bg-pint\/70 { background-color: rgba(255, 208, 0, 0.7); }

.bg-pint\/75 { background-color: rgba(255, 208, 0, 0.75); }

.bg-pint\/80 { background-color: rgba(255, 208, 0, 0.8); }

.bg-pint\/90 { background-color: rgba(255, 208, 0, 0.9); }

.bg-pint\/95 { background-color: rgba(255, 208, 0, 0.95); }

.bg-prompts { --tw-bg-opacity: 1; background-color: rgb(74 222 128 / var(--=
tw-bg-opacity)); }

.bg-prompts\/0 { background-color: rgba(74, 222, 128, 0); }

.bg-prompts\/10 { background-color: rgba(74, 222, 128, 0.1); }

.bg-prompts\/100 { background-color: rgb(74, 222, 128); }

.bg-prompts\/20 { background-color: rgba(74, 222, 128, 0.2); }

.bg-prompts\/25 { background-color: rgba(74, 222, 128, 0.25); }

.bg-prompts\/30 { background-color: rgba(74, 222, 128, 0.3); }

.bg-prompts\/40 { background-color: rgba(74, 222, 128, 0.4); }

.bg-prompts\/5 { background-color: rgba(74, 222, 128, 0.05); }

.bg-prompts\/50 { background-color: rgba(74, 222, 128, 0.5); }

.bg-prompts\/60 { background-color: rgba(74, 222, 128, 0.6); }

.bg-prompts\/70 { background-color: rgba(74, 222, 128, 0.7); }

.bg-prompts\/75 { background-color: rgba(74, 222, 128, 0.75); }

.bg-prompts\/80 { background-color: rgba(74, 222, 128, 0.8); }

.bg-prompts\/90 { background-color: rgba(74, 222, 128, 0.9); }

.bg-prompts\/95 { background-color: rgba(74, 222, 128, 0.95); }

.bg-purple-600 { --tw-bg-opacity: 1; background-color: rgb(131 56 236 / var=
(--tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(249 50 44 / var(--t=
w-bg-opacity)); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgb(235 68 50 / var(--t=
w-bg-opacity)); }

.bg-sail { --tw-bg-opacity: 1; background-color: rgb(56 189 247 / var(--tw-=
bg-opacity)); }

.bg-sail\/0 { background-color: rgba(56, 189, 247, 0); }

.bg-sail\/10 { background-color: rgba(56, 189, 247, 0.1); }

.bg-sail\/100 { background-color: rgb(56, 189, 247); }

.bg-sail\/20 { background-color: rgba(56, 189, 247, 0.2); }

.bg-sail\/25 { background-color: rgba(56, 189, 247, 0.25); }

.bg-sail\/30 { background-color: rgba(56, 189, 247, 0.3); }

.bg-sail\/40 { background-color: rgba(56, 189, 247, 0.4); }

.bg-sail\/5 { background-color: rgba(56, 189, 247, 0.05); }

.bg-sail\/50 { background-color: rgba(56, 189, 247, 0.5); }

.bg-sail\/60 { background-color: rgba(56, 189, 247, 0.6); }

.bg-sail\/70 { background-color: rgba(56, 189, 247, 0.7); }

.bg-sail\/75 { background-color: rgba(56, 189, 247, 0.75); }

.bg-sail\/80 { background-color: rgba(56, 189, 247, 0.8); }

.bg-sail\/90 { background-color: rgba(56, 189, 247, 0.9); }

.bg-sail\/95 { background-color: rgba(56, 189, 247, 0.95); }

.bg-sanctum { --tw-bg-opacity: 1; background-color: rgb(29 88 115 / var(--t=
w-bg-opacity)); }

.bg-sanctum\/0 { background-color: rgba(29, 88, 115, 0); }

.bg-sanctum\/10 { background-color: rgba(29, 88, 115, 0.1); }

.bg-sanctum\/100 { background-color: rgb(29, 88, 115); }

.bg-sanctum\/20 { background-color: rgba(29, 88, 115, 0.2); }

.bg-sanctum\/25 { background-color: rgba(29, 88, 115, 0.25); }

.bg-sanctum\/30 { background-color: rgba(29, 88, 115, 0.3); }

.bg-sanctum\/40 { background-color: rgba(29, 88, 115, 0.4); }

.bg-sanctum\/5 { background-color: rgba(29, 88, 115, 0.05); }

.bg-sanctum\/50 { background-color: rgba(29, 88, 115, 0.5); }

.bg-sanctum\/60 { background-color: rgba(29, 88, 115, 0.6); }

.bg-sanctum\/70 { background-color: rgba(29, 88, 115, 0.7); }

.bg-sanctum\/75 { background-color: rgba(29, 88, 115, 0.75); }

.bg-sanctum\/80 { background-color: rgba(29, 88, 115, 0.8); }

.bg-sanctum\/90 { background-color: rgba(29, 88, 115, 0.9); }

.bg-sanctum\/95 { background-color: rgba(29, 88, 115, 0.95); }

.bg-scout { --tw-bg-opacity: 1; background-color: rgb(245 93 92 / var(--tw-=
bg-opacity)); }

.bg-scout\/0 { background-color: rgba(245, 93, 92, 0); }

.bg-scout\/10 { background-color: rgba(245, 93, 92, 0.1); }

.bg-scout\/100 { background-color: rgb(245, 93, 92); }

.bg-scout\/20 { background-color: rgba(245, 93, 92, 0.2); }

.bg-scout\/25 { background-color: rgba(245, 93, 92, 0.25); }

.bg-scout\/30 { background-color: rgba(245, 93, 92, 0.3); }

.bg-scout\/40 { background-color: rgba(245, 93, 92, 0.4); }

.bg-scout\/5 { background-color: rgba(245, 93, 92, 0.05); }

.bg-scout\/50 { background-color: rgba(245, 93, 92, 0.5); }

.bg-scout\/60 { background-color: rgba(245, 93, 92, 0.6); }

.bg-scout\/70 { background-color: rgba(245, 93, 92, 0.7); }

.bg-scout\/75 { background-color: rgba(245, 93, 92, 0.75); }

.bg-scout\/80 { background-color: rgba(245, 93, 92, 0.8); }

.bg-scout\/90 { background-color: rgba(245, 93, 92, 0.9); }

.bg-scout\/95 { background-color: rgba(245, 93, 92, 0.95); }

.bg-socialite { --tw-bg-opacity: 1; background-color: rgb(227 148 186 / var=
(--tw-bg-opacity)); }

.bg-socialite\/0 { background-color: rgba(227, 148, 186, 0); }

.bg-socialite\/10 { background-color: rgba(227, 148, 186, 0.1); }

.bg-socialite\/100 { background-color: rgb(227, 148, 186); }

.bg-socialite\/20 { background-color: rgba(227, 148, 186, 0.2); }

.bg-socialite\/25 { background-color: rgba(227, 148, 186, 0.25); }

.bg-socialite\/30 { background-color: rgba(227, 148, 186, 0.3); }

.bg-socialite\/40 { background-color: rgba(227, 148, 186, 0.4); }

.bg-socialite\/5 { background-color: rgba(227, 148, 186, 0.05); }

.bg-socialite\/50 { background-color: rgba(227, 148, 186, 0.5); }

.bg-socialite\/60 { background-color: rgba(227, 148, 186, 0.6); }

.bg-socialite\/70 { background-color: rgba(227, 148, 186, 0.7); }

.bg-socialite\/75 { background-color: rgba(227, 148, 186, 0.75); }

.bg-socialite\/80 { background-color: rgba(227, 148, 186, 0.8); }

.bg-socialite\/90 { background-color: rgba(227, 148, 186, 0.9); }

.bg-socialite\/95 { background-color: rgba(227, 148, 186, 0.95); }

.bg-spark { --tw-bg-opacity: 1; background-color: rgb(155 139 251 / var(--t=
w-bg-opacity)); }

.bg-spark\/0 { background-color: rgba(155, 139, 251, 0); }

.bg-spark\/10 { background-color: rgba(155, 139, 251, 0.1); }

.bg-spark\/100 { background-color: rgb(155, 139, 251); }

.bg-spark\/20 { background-color: rgba(155, 139, 251, 0.2); }

.bg-spark\/25 { background-color: rgba(155, 139, 251, 0.25); }

.bg-spark\/30 { background-color: rgba(155, 139, 251, 0.3); }

.bg-spark\/40 { background-color: rgba(155, 139, 251, 0.4); }

.bg-spark\/5 { background-color: rgba(155, 139, 251, 0.05); }

.bg-spark\/50 { background-color: rgba(155, 139, 251, 0.5); }

.bg-spark\/60 { background-color: rgba(155, 139, 251, 0.6); }

.bg-spark\/70 { background-color: rgba(155, 139, 251, 0.7); }

.bg-spark\/75 { background-color: rgba(155, 139, 251, 0.75); }

.bg-spark\/80 { background-color: rgba(155, 139, 251, 0.8); }

.bg-spark\/90 { background-color: rgba(155, 139, 251, 0.9); }

.bg-spark\/95 { background-color: rgba(155, 139, 251, 0.95); }

.bg-telescope { --tw-bg-opacity: 1; background-color: rgb(64 64 200 / var(-=
-tw-bg-opacity)); }

.bg-telescope\/0 { background-color: rgba(64, 64, 200, 0); }

.bg-telescope\/10 { background-color: rgba(64, 64, 200, 0.1); }

.bg-telescope\/100 { background-color: rgb(64, 64, 200); }

.bg-telescope\/20 { background-color: rgba(64, 64, 200, 0.2); }

.bg-telescope\/25 { background-color: rgba(64, 64, 200, 0.25); }

.bg-telescope\/30 { background-color: rgba(64, 64, 200, 0.3); }

.bg-telescope\/40 { background-color: rgba(64, 64, 200, 0.4); }

.bg-telescope\/5 { background-color: rgba(64, 64, 200, 0.05); }

.bg-telescope\/50 { background-color: rgba(64, 64, 200, 0.5); }

.bg-telescope\/60 { background-color: rgba(64, 64, 200, 0.6); }

.bg-telescope\/70 { background-color: rgba(64, 64, 200, 0.7); }

.bg-telescope\/75 { background-color: rgba(64, 64, 200, 0.75); }

.bg-telescope\/80 { background-color: rgba(64, 64, 200, 0.8); }

.bg-telescope\/90 { background-color: rgba(64, 64, 200, 0.9); }

.bg-telescope\/95 { background-color: rgba(64, 64, 200, 0.95); }

.bg-tinker { --tw-bg-opacity: 1; background-color: rgb(236 118 88 / var(--t=
w-bg-opacity)); }

.bg-tinker\/0 { background-color: rgba(236, 118, 88, 0); }

.bg-tinker\/10 { background-color: rgba(236, 118, 88, 0.1); }

.bg-tinker\/100 { background-color: rgb(236, 118, 88); }

.bg-tinker\/20 { background-color: rgba(236, 118, 88, 0.2); }

.bg-tinker\/25 { background-color: rgba(236, 118, 88, 0.25); }

.bg-tinker\/30 { background-color: rgba(236, 118, 88, 0.3); }

.bg-tinker\/40 { background-color: rgba(236, 118, 88, 0.4); }

.bg-tinker\/5 { background-color: rgba(236, 118, 88, 0.05); }

.bg-tinker\/50 { background-color: rgba(236, 118, 88, 0.5); }

.bg-tinker\/60 { background-color: rgba(236, 118, 88, 0.6); }

.bg-tinker\/70 { background-color: rgba(236, 118, 88, 0.7); }

.bg-tinker\/75 { background-color: rgba(236, 118, 88, 0.75); }

.bg-tinker\/80 { background-color: rgba(236, 118, 88, 0.8); }

.bg-tinker\/90 { background-color: rgba(236, 118, 88, 0.9); }

.bg-tinker\/95 { background-color: rgba(236, 118, 88, 0.95); }

.bg-valet { --tw-bg-opacity: 1; background-color: rgb(94 71 205 / var(--tw-=
bg-opacity)); }

.bg-valet\/0 { background-color: rgba(94, 71, 205, 0); }

.bg-valet\/10 { background-color: rgba(94, 71, 205, 0.1); }

.bg-valet\/100 { background-color: rgb(94, 71, 205); }

.bg-valet\/20 { background-color: rgba(94, 71, 205, 0.2); }

.bg-valet\/25 { background-color: rgba(94, 71, 205, 0.25); }

.bg-valet\/30 { background-color: rgba(94, 71, 205, 0.3); }

.bg-valet\/40 { background-color: rgba(94, 71, 205, 0.4); }

.bg-valet\/5 { background-color: rgba(94, 71, 205, 0.05); }

.bg-valet\/50 { background-color: rgba(94, 71, 205, 0.5); }

.bg-valet\/60 { background-color: rgba(94, 71, 205, 0.6); }

.bg-valet\/70 { background-color: rgba(94, 71, 205, 0.7); }

.bg-valet\/75 { background-color: rgba(94, 71, 205, 0.75); }

.bg-valet\/80 { background-color: rgba(94, 71, 205, 0.8); }

.bg-valet\/90 { background-color: rgba(94, 71, 205, 0.9); }

.bg-valet\/95 { background-color: rgba(94, 71, 205, 0.95); }

.bg-vapor { --tw-bg-opacity: 1; background-color: rgb(37 196 242 / var(--tw=
-bg-opacity)); }

.bg-vapor\/0 { background-color: rgba(37, 196, 242, 0); }

.bg-vapor\/10 { background-color: rgba(37, 196, 242, 0.1); }

.bg-vapor\/100 { background-color: rgb(37, 196, 242); }

.bg-vapor\/20 { background-color: rgba(37, 196, 242, 0.2); }

.bg-vapor\/25 { background-color: rgba(37, 196, 242, 0.25); }

.bg-vapor\/30 { background-color: rgba(37, 196, 242, 0.3); }

.bg-vapor\/40 { background-color: rgba(37, 196, 242, 0.4); }

.bg-vapor\/5 { background-color: rgba(37, 196, 242, 0.05); }

.bg-vapor\/50 { background-color: rgba(37, 196, 242, 0.5); }

.bg-vapor\/60 { background-color: rgba(37, 196, 242, 0.6); }

.bg-vapor\/70 { background-color: rgba(37, 196, 242, 0.7); }

.bg-vapor\/75 { background-color: rgba(37, 196, 242, 0.75); }

.bg-vapor\/80 { background-color: rgba(37, 196, 242, 0.8); }

.bg-vapor\/90 { background-color: rgba(37, 196, 242, 0.9); }

.bg-vapor\/95 { background-color: rgba(37, 196, 242, 0.95); }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--t=
w-bg-opacity)); }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.from-\[rgba\(255\,255\,255\,\.2\)\] { --tw-gradient-from: rgba(255,255,255=
,.2) var(--tw-gradient-from-position); --tw-gradient-from-position: ; --tw-=
gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-from-position); --tw-=
gradient-to-position: ; --tw-gradient-stops: var(--tw-gradient-from), var(-=
-tw-gradient-to); }

.from-gray-100 { --tw-gradient-from: #f5f5fa var(--tw-gradient-from-positio=
n); --tw-gradient-from-position: ; --tw-gradient-to: rgb(245 245 250 / 0) v=
ar(--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient=
-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-red-500 { --tw-gradient-from: #F9322C var(--tw-gradient-from-position=
); --tw-gradient-from-position: ; --tw-gradient-to: rgb(249 50 44 / 0) var(=
--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-st=
ops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-from-position: ; --tw-gradient-to: rgb(255 255 255 / 0) var(--t=
w-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-stops=
: var(--tw-gradient-from), var(--tw-gradient-to); }

.to-\[rgba\(255\,255\,255\,0\)\] { --tw-gradient-to: rgba(255,255,255,0) va=
r(--tw-gradient-to-position); --tw-gradient-to-position: ; }

.to-red-600 { --tw-gradient-to: #EB4432 var(--tw-gradient-to-position); --t=
w-gradient-to-position: ; }

.to-white { --tw-gradient-to: #fff var(--tw-gradient-to-position); --tw-gra=
dient-to-position: ; }

.fill-current { fill: currentcolor; }

.fill-gray-700 { fill: rgb(86, 84, 84); }

.fill-gray-900 { fill: rgb(35, 35, 35); }

.fill-purple-600 { fill: rgb(131, 56, 236); }

.stroke-gray-800 { stroke: rgb(34, 34, 34); }

.stroke-red-500 { stroke: rgb(249, 50, 44); }

.object-cover { object-fit: cover; }

.object-center { object-position: center center; }

.p-10 { padding: 2.5rem; }

.p-12 { padding: 3rem; }

.p-2 { padding: 0.5rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-8 { padding: 2rem; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; }

.py-12 { padding-top: 3rem; padding-bottom: 3rem; }

.py-16 { padding-top: 4rem; padding-bottom: 4rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-16 { padding-bottom: 4rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-24 { padding-bottom: 6rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pr-3 { padding-right: 0.75rem; }

.pt-0 { padding-top: 0px; }

.pt-12 { padding-top: 3rem; }

.pt-16 { padding-top: 4rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-4 { padding-top: 1rem; }

.pt-48 { padding-top: 12rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[4\.2rem\] { padding-top: 4.2rem; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.font-sans { font-family: scandia-web, ui-sans-serif, system-ui, -apple-sys=
tem, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto=
 Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol=
", "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-5xl { font-size: 3rem; line-height: 1; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.lowercase { text-transform: lowercase; }

.italic { font-style: italic; }

.not-italic { font-style: normal; }

.leading-4 { line-height: 1rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-8 { line-height: 2rem; }

.leading-loose { line-height: 2; }

.leading-relaxed { line-height: 1.625; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.text-\[\#d97707\] { --tw-text-opacity: 1; color: rgb(217 119 7 / var(--tw-=
text-opacity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-te=
xt-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(181 181 189 / var(--tw-te=
xt-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(147 147 158 / var(--tw-te=
xt-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(119 119 119 / var(--tw-te=
xt-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgb(86 84 84 / var(--tw-text-=
opacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(34 34 34 / var(--tw-text-=
opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(35 35 35 / var(--tw-text-=
opacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgb(34 197 94 / var(--tw-tex=
t-opacity)); }

.text-jetstream { --tw-text-opacity: 1; color: rgb(104 117 245 / var(--tw-t=
ext-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(249 50 44 / var(--tw-text-=
opacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-=
opacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgb(236 14 0 / var(--tw-text-o=
pacity)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-=
opacity)); }

.underline { text-decoration-line: underline; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-gray-900::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(35 35 35 / var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-25 { opacity: 0.25; }

.opacity-75 { opacity: 0.75; }

.opacity-\[\.15\] { opacity: 0.15; }

.\!shadow-\[64px_64px_100px_-20px_theme\(colors\.red\.400\)\] { --tw-shadow=
: 64px 64px 100px -20px #f87171 !important; --tw-shadow-colored: 64px 64px =
100px -20px var(--tw-shadow-color) !important; box-shadow: var(--tw-ring-of=
fset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow) !=
important; }

.shadow-\[32px_32px_40px_-20px_theme\(colors\.gray\.400\)\] { --tw-shadow: =
32px 32px 40px -20px #B5B5BD; --tw-shadow-colored: 32px 32px 40px -20px var=
(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),va=
r(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 20px 30px -16px rgba(9, 9, 16, .2); --tw-shadow=
-colored: 0 20px 30px -16px var(--tw-shadow-color); box-shadow: var(--tw-ri=
ng-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shad=
ow); }

.shadow-sm { --tw-shadow: 0 10px 15px -8px rgba(9, 9, 16, .1); --tw-shadow-=
colored: 0 10px 15px -8px var(--tw-shadow-color); box-shadow: var(--tw-ring=
-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow=
); }

.shadow-xl { --tw-shadow: 0 10px 20px 0 rgba(9, 9, 16, .15); --tw-shadow-co=
lored: 0 10px 20px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offs=
et-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow, 0 0 #0000); }

.ring-red-500 { --tw-ring-opacity: 1; --tw-ring-color: rgb(249 50 44 / var(=
--tw-ring-opacity)); }

.ring-red-600 { --tw-ring-opacity: 1; --tw-ring-color: rgb(235 68 50 / var(=
--tw-ring-opacity)); }

.ring-offset-1 { --tw-ring-offset-width: 1px; }

.ring-offset-red-500 { --tw-ring-offset-color: #F9322C; }

.blur { --tw-blur: blur(8px); filter: var(--tw-blur) var(--tw-brightness) v=
ar(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)=
 var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.grayscale { --tw-grayscale: grayscale(100%); filter: var(--tw-blur) var(--=
tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) =
var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); =
}

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.transition { transition-property: color, background-color, border-color, t=
ext-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,=
 backdrop-filter, -webkit-backdrop-filter; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-all { transition-property: all; transition-timing-function: cub=
ic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-transform { transition-property: transform; transition-timing-f=
unction: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

:is(.dark .docs_main h1), :is(.dark .docs_main h2), :is(.dark .docs_main h3=
), :is(.dark .docs_main h4), :is(.dark .docs_main h5), :is(.dark .docs_main=
 h6), :is(.dark .docs_main h4 a), :is(.dark .docs_main h3 a), :is(.dark .do=
cs_main h2 a) { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-tex=
t-opacity)); }

:is(.dark .docs_main p), :is(.dark .docs_main ul:not(:first-of-type) li), :=
is(.dark .docs_main .content-list ul li), :is(.dark .docs_main #software-li=
st), :is(.dark .docs_main #valet-support) { --tw-text-opacity: 1; color: rg=
b(181 181 189 / var(--tw-text-opacity)); }

:is(.dark .docs_main h1 + ul li a) { --tw-text-opacity: 1; color: rgb(215 2=
15 220 / var(--tw-text-opacity)); }

:is(.dark .docs_main p a), :is(.dark .docs_main ul a), :is(.dark .docs_main=
 ol a) { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-opacity=
)); }

:is(.dark .docs_main table th) { --tw-text-opacity: 1; color: rgb(231 232 2=
42 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td) { --tw-text-opacity: 1; color: rgb(181 181 1=
89 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td.support-policy-highlight) { --tw-text-opacity=
: 1; color: rgb(0 0 0 / var(--tw-text-opacity)); }

:is(.dark .docs_sidebar ul li h2), :is(.dark .docs_sidebar ul li a) { --tw-=
text-opacity: 1; color: rgb(181 181 189 / var(--tw-text-opacity)); }

.dark .docs_main h4 a::before, .dark .docs_main h3 a::before, .dark .docs_m=
ain h2 a::before { opacity: 1; }

:is(.dark #carbonads) { --tw-bg-opacity: 1; background-color: rgb(37 42 55 =
/ var(--tw-bg-opacity)); }

:is(.dark #carbonads .carbon-text) { --tw-text-opacity: 1; color: rgb(181 1=
81 189 / var(--tw-text-opacity)); }

:is(.dark #carbonads .carbon-poweredby) { --tw-text-opacity: 1; color: rgb(=
147 147 158 / var(--tw-text-opacity)); }

#header__sun, #header__moon, #header__indeterminate { display: none; }

html[color-theme=3D"dark"] #header__moon, html[color-theme=3D"light"] #head=
er__sun, html[color-theme=3D"system"] #header__indeterminate { display: blo=
ck; }

[x-cloak] { display: none !important; }

.bg-radial-gradient { background-image: radial-gradient(50% 50% at 50% 50%,=
 rgb(235, 68, 50) 0%, rgba(255, 255, 255, 0) 100%); }

.partners_body a { color: rgb(235, 68, 50); text-decoration: underline; }

.version-colors { margin-bottom: 0.25rem; }

:is(.dark .version-colors) { --tw-text-opacity: 1; color: rgb(181 181 189 /=
 var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .version-colors { display: flex; }
}

.version-colors .color-box { margin-right: 0.5rem; height: 0.75rem; width: =
0.75rem; }

.version-colors div.end-of-life { margin-right: 1rem; display: flex; align-=
items: center; }

.version-colors div.end-of-life div:first-child { --tw-bg-opacity: 1; backg=
round-color: rgb(249 50 44 / var(--tw-bg-opacity)); }

.version-colors div.security-fixes { display: flex; align-items: center; }

.version-colors div.security-fixes div:first-child { --tw-bg-opacity: 1; ba=
ckground-color: rgb(244 157 55 / var(--tw-bg-opacity)); }

.even\:-translate-y-1\/2:nth-child(2n) { --tw-translate-y: -50%; transform:=
 translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rot=
ate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-=
x)) scaleY(var(--tw-scale-y)); }

.focus-within\:border-gray-600:focus-within { --tw-border-opacity: 1; borde=
r-color: rgb(119 119 119 / var(--tw-border-opacity)); }

.hover\:border-gray-300:hover { --tw-border-opacity: 1; border-color: rgb(2=
15 215 220 / var(--tw-border-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(251 25=
1 253 / var(--tw-bg-opacity)); }

.hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgb(255 255 =
255 / var(--tw-bg-opacity)); }

.hover\:text-gray-500:hover { --tw-text-opacity: 1; color: rgb(147 147 158 =
/ var(--tw-text-opacity)); }

.hover\:text-gray-600:hover { --tw-text-opacity: 1; color: rgb(119 119 119 =
/ var(--tw-text-opacity)); }

.hover\:no-underline:hover { text-decoration-line: none; }

.hover\:grayscale-0:hover { --tw-grayscale: grayscale(0); filter: var(--tw-=
blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-=
hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-dr=
op-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.disabled\:text-gray-200:disabled { --tw-text-opacity: 1; color: rgb(231 23=
2 242 / var(--tw-text-opacity)); }

.group:hover .group-hover\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:hover .group-hover\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

:is(.dark .dark\:block) { display: block; }

:is(.dark .dark\:inline-block) { display: inline-block; }

:is(.dark .dark\:hidden) { display: none; }

:is(.dark .dark\:border-dark-500) { --tw-border-opacity: 1; border-color: r=
gb(57 64 86 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-400) { --tw-border-opacity: 1; border-color: r=
gb(181 181 189 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-700) { --tw-border-opacity: 1; border-color: r=
gb(86 84 84 / var(--tw-border-opacity)); }

:is(.dark .dark\:bg-dark-600) { --tw-bg-opacity: 1; background-color: rgb(3=
7 42 55 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-dark-700) { --tw-bg-opacity: 1; background-color: rgb(2=
3 25 35 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-gray-800) { --tw-bg-opacity: 1; background-color: rgb(3=
4 34 34 / var(--tw-bg-opacity)); }

:is(.dark .dark\:from-dark-800) { --tw-gradient-from: #12141C var(--tw-grad=
ient-from-position); --tw-gradient-from-position: ; --tw-gradient-to: rgb(1=
8 20 28 / 0) var(--tw-gradient-from-position); --tw-gradient-to-position: ;=
 --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

:is(.dark .dark\:to-dark-700) { --tw-gradient-to: #171923 var(--tw-gradient=
-to-position); --tw-gradient-to-position: ; }

:is(.dark .dark\:text-gray-200) { --tw-text-opacity: 1; color: rgb(231 232 =
242 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-400) { --tw-text-opacity: 1; color: rgb(181 181 =
189 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-500) { --tw-text-opacity: 1; color: rgb(147 147 =
158 / var(--tw-text-opacity)); }

:is(.dark .dark\:placeholder-gray-500)::placeholder { --tw-placeholder-opac=
ity: 1; color: rgb(147 147 158 / var(--tw-placeholder-opacity)); }

:is(.dark .dark\:hover\:text-gray-400:hover) { --tw-text-opacity: 1; color:=
 rgb(181 181 189 / var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .sm\:left-\[12\%\] { left: 12%; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-12 { margin-top: 3rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:hidden { display: none; }
  .sm\:h-\[500px\] { height: 500px; }
  .sm\:w-auto { width: auto; }
  .sm\:max-w-5xl { max-width: 64rem; }
  .sm\:max-w-\[480px\] { max-width: 480px; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:max-w-xl { max-width: 36rem; }
  .sm\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .sm\:columns-2 { columns: 2; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:justify-center { justify-content: center; }
  .sm\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .sm\:py-12 { padding-top: 3rem; padding-bottom: 3rem; }
  .sm\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .sm\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-5xl { font-size: 3rem; line-height: 1; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
}

@media (min-width: 768px) {
  .md\:absolute { position: absolute; }
  .md\:inset-y-0 { top: 0px; bottom: 0px; }
  .md\:bottom-64 { bottom: 16rem; }
  .md\:left-0 { left: 0px; }
  .md\:left-1\/2 { left: 50%; }
  .md\:left-2 { left: 0.5rem; }
  .md\:left-\[12\%\] { left: 12%; }
  .md\:right-1\/2 { right: 50%; }
  .md\:right-1\/4 { right: 25%; }
  .md\:right-\[12\%\] { right: 12%; }
  .md\:right-auto { right: auto; }
  .md\:top-48 { top: 12rem; }
  .md\:top-auto { top: auto; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:col-span-3 { grid-column: span 3 / span 3; }
  .md\:-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }
  .md\:-mx-3 { margin-left: -0.75rem; margin-right: -0.75rem; }
  .md\:ml-auto { margin-left: auto; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-12 { margin-top: 3rem; }
  .md\:mt-16 { margin-top: 4rem; }
  .md\:mt-24 { margin-top: 6rem; }
  .md\:mt-6 { margin-top: 1.5rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:block { display: block; }
  .md\:inline { display: inline; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:w-3\/4 { width: 75%; }
  .md\:w-full { width: 100%; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .md\:scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }
  .md\:transform { transform: translate(var(--tw-translate-x),var(--tw-tran=
slate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-sk=
ew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .md\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .md\:items-end { align-items: flex-end; }
  .md\:items-center { align-items: center; }
  .md\:gap-12 { gap: 3rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-8 { column-gap: 2rem; }
  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: =
0; margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse))); margin-bott=
om: calc(0px * var(--tw-space-y-reverse)); }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:p-8 { padding: 2rem; }
  .md\:py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .md\:pr-0 { padding-right: 0px; }
  .md\:pt-12 { padding-top: 3rem; }
  .md\:pt-24 { padding-top: 6rem; }
  .md\:pt-32 { padding-top: 8rem; }
  .md\:pt-48 { padding-top: 12rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-9 { line-height: 2.25rem; }
  .md\:leading-tight { line-height: 1.25; }
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:sticky { position: sticky; }
  .lg\:bottom-12 { bottom: 3rem; }
  .lg\:bottom-64 { bottom: 16rem; }
  .lg\:left-1\/2 { left: 50%; }
  .lg\:left-1\/3 { left: 33.3333%; }
  .lg\:left-\[12\%\] { left: 12%; }
  .lg\:right-auto { right: auto; }
  .lg\:top-2\/3 { top: 66.6667%; }
  .lg\:top-auto { top: auto; }
  .lg\:order-last { order: 9999; }
  .lg\:col-span-2 { grid-column: span 2 / span 2; }
  .lg\:col-span-3 { grid-column: span 3 / span 3; }
  .lg\:col-span-4 { grid-column: span 4 / span 4; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:ml-4 { margin-left: 1rem; }
  .lg\:ml-6 { margin-left: 1.5rem; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:mt-10 { margin-top: 2.5rem; }
  .lg\:mt-24 { margin-top: 6rem; }
  .lg\:mt-4 { margin-top: 1rem; }
  .lg\:mt-8 { margin-top: 2rem; }
  .lg\:block { display: block; }
  .lg\:inline { display: inline; }
  .lg\:flex { display: flex; }
  .lg\:inline-flex { display: inline-flex; }
  .lg\:grid { display: grid; }
  .lg\:hidden { display: none; }
  .lg\:h-12 { height: 3rem; }
  .lg\:h-6 { height: 1.5rem; }
  .lg\:h-8 { height: 2rem; }
  .lg\:h-\[550px\] { height: 550px; }
  .lg\:h-screen { height: 100vh; }
  .lg\:w-12 { width: 3rem; }
  .lg\:w-40 { width: 10rem; }
  .lg\:w-80 { width: 20rem; }
  .lg\:w-\[454px\] { width: 454px; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-xs { max-width: 20rem; }
  .lg\:shrink-0 { flex-shrink: 0; }
  .lg\:translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--=
tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--=
tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--=
tw-scale-y)); }
  .lg\:-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:-rotate-3 { --tw-rotate: -3deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:rotate-1 { --tw-rotate: 1deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:columns-3 { columns: 3; }
  .lg\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .lg\:flex-row { flex-direction: row; }
  .lg\:flex-row-reverse { flex-direction: row-reverse; }
  .lg\:flex-col { flex-direction: column; }
  .lg\:items-start { align-items: flex-start; }
  .lg\:items-end { align-items: flex-end; }
  .lg\:items-center { align-items: center; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-end { justify-content: flex-end; }
  .lg\:justify-center { justify-content: center; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-12 { gap: 3rem; }
  .lg\:gap-6 { gap: 1.5rem; }
  .lg\:gap-8 { gap: 2rem; }
  .lg\:divide-x-0 > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse=
: 0; border-right-width: calc(0px * var(--tw-divide-x-reverse)); border-lef=
t-width: calc(0px * calc(1 - var(--tw-divide-x-reverse))); }
  .lg\:divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: =
0; border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse))); bord=
er-bottom-width: calc(1px * var(--tw-divide-y-reverse)); }
  .lg\:overflow-hidden { overflow: hidden; }
  .lg\:overflow-y-auto { overflow-y: auto; }
  .lg\:overflow-x-visible { overflow-x: visible; }
  .lg\:overscroll-y-contain { overscroll-behavior-y: contain; }
  .lg\:border-\[16px\] { border-width: 16px; }
  .lg\:border-b-0 { border-bottom-width: 0px; }
  .lg\:border-r { border-right-width: 1px; }
  .lg\:border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50=
 / var(--tw-border-opacity)); }
  .lg\:bg-transparent { background-color: transparent; }
  .lg\:bg-gradient-to-b { background-image: linear-gradient(to bottom,var(-=
-tw-gradient-stops)); }
  .lg\:bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw=
-gradient-stops)); }
  .lg\:px-12 { padding-left: 3rem; padding-right: 3rem; }
  .lg\:px-24 { padding-left: 6rem; padding-right: 6rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .lg\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .lg\:py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
  .lg\:pb-64 { padding-bottom: 16rem; }
  .lg\:pl-12 { padding-left: 3rem; }
  .lg\:pt-16 { padding-top: 4rem; }
  .lg\:pt-36 { padding-top: 9rem; }
  .lg\:pt-48 { padding-top: 12rem; }
  .lg\:pt-64 { padding-top: 16rem; }
  .lg\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .lg\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .lg\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .lg\:leading-10 { line-height: 2.5rem; }
}

@media (min-width: 1280px) {
  .xl\:left-16 { left: 4rem; }
  .xl\:top-3\/4 { top: 75%; }
  .xl\:col-span-5 { grid-column: span 5 / span 5; }
  .xl\:col-span-7 { grid-column: span 7 / span 7; }
  .xl\:w-80 { width: 20rem; }
  .xl\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .xl\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); =
}
  .xl\:gap-10 { gap: 2.5rem; }
  .xl\:gap-16 { gap: 4rem; }
  .xl\:p-16 { padding: 4rem; }
  .xl\:px-0 { padding-left: 0px; padding-right: 0px; }
  .xl\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:pb-28 { padding-bottom: 7rem; }
  .xl\:pr-8 { padding-right: 2rem; }
  .xl\:pt-56 { padding-top: 14rem; }
  .xl\:text-6xl { font-size: 3.75rem; line-height: 1; }
}

@media (min-width: 1536px) {
  .\32 xl\:left-32 { left: 8rem; }
  .\32 xl\:w-full { width: 100%; }
  .\32 xl\:max-w-lg { max-width: 32rem; }
}

.\[\&_a\]\:text-red-600 a { --tw-text-opacity: 1; color: rgb(235 68 50 / va=
r(--tw-text-opacity)); }

.\[\&_a\]\:underline a { text-decoration-line: underline; }

.hover\:\[\&_a\]\:no-underline a:hover { text-decoration-line: none; }

.\[\&_pre\]\:bg-\[\#161414\] pre { --tw-bg-opacity: 1; background-color: rg=
b(22 20 20 / var(--tw-bg-opacity)); }

.\[\&_pre\]\:p-2 pre { padding: 0.5rem; }

.\[\&_pre\]\:leading-8 pre { line-height: 2rem; }

.\[\&_pre_code\.torchlight\]\:\!bg-\[\#161414\] pre code.torchlight { --tw-=
bg-opacity: 1 !important; background-color: rgb(22 20 20 / var(--tw-bg-opac=
ity)) !important; }

.\[\&_strong\]\:font-medium strong { font-weight: 500; }

.\[\&_ul\]\:ml-4 ul { margin-left: 1rem; }

.\[\&_ul\]\:list-disc ul { list-style-type: disc; }
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/active_marker.min.svg

<svg width=3D"8" height=3D"8" viewBox=3D"0 0 8 8" xmlns=3D"http://www.w3.or=
g/2000/svg"><title>active_marker</title><path d=3D"M4 0l3.464 2v4L4 8 .536 =
6V2z" fill=3D"#FF2D20" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/callouts/lightbulb.min.svg

<svg width=3D"28" height=3D"40" viewBox=3D"0 0 28 40" xmlns=3D"http://www.w=
3.org/2000/svg"><title>lightbulb</title><path d=3D"M12 28h4v-8h-4v8zM8 40h1=
2v-8H8v8zm13.98-14.52c-1.001.705-1.661 1.545-1.98 2.52H8c-.416-.959-1.076-1=
.799-1.98-2.52A13.99 13.99 0 0 1 0 14C0 6.272 6.272 0 14 0s14 6.272 14 14a1=
3.99 13.99 0 0 1-6.02 11.48z" fill=3D"#FFF" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/callouts/exclamation.min.svg

<svg width=3D"6" height=3D"35" viewBox=3D"0 0 6 35" xmlns=3D"http://www.w3.=
org/2000/svg"><title>exclamation</title><path d=3D"M0 29h6v6H0v-6zM0 0h6v24=
H0V0z" fill=3D"#FFF" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--i2649foIyLH29tK4TlwCSRGi4hg7bt23c3xGiO797a------
