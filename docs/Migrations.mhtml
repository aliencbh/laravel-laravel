From: <Saved by Blink>
Snapshot-Content-Location: https://laravel.com/docs/10.x/migrations#column-method-year
Subject: Database: Migrations - Laravel 10.x - The PHP Framework For Web Artisans
Date: Thu, 2 Nov 2023 21:01:46 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----"


------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: text/html
Content-ID: <frame-D3A16C38650C0B93F3C8DDD0C2FFF32E@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/docs/10.x/migrations#column-method-year

<!DOCTYPE html><html lang=3D"en" data-theme=3D"light" color-theme=3D"system=
"><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DU=
TF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-ead0727d-a=
2ab-4dd2-9312-839f3fad7b84@mhtml.blink" />
   =20

        <title>Database: Migrations - Laravel 10.x - The PHP Framework For =
Web Artisans</title>
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1, viewport-fit=3Dcover">

        <link rel=3D"canonical" href=3D"https://laravel.com/docs/10.x/migra=
tions">
   =20
    <!-- Primary Meta Tags -->
    <meta name=3D"title" content=3D"Laravel - The PHP Framework For Web Art=
isans">
    <meta name=3D"description" content=3D"Laravel is a PHP web application =
framework with expressive, elegant syntax. We=E2=80=99ve already laid the f=
oundation =E2=80=94 freeing you to create without sweating the small things=
.">

    <!-- Open Graph / Facebook -->
    <meta property=3D"og:type" content=3D"website">
    <meta property=3D"og:url" content=3D"https://laravel.com/">
    <meta property=3D"og:title" content=3D"Laravel - The PHP Framework For =
Web Artisans">
    <meta property=3D"og:description" content=3D"Laravel is a PHP web appli=
cation framework with expressive, elegant syntax. We=E2=80=99ve already lai=
d the foundation =E2=80=94 freeing you to create without sweating the small=
 things.">
    <meta property=3D"og:image" content=3D"https://laravel.com/img/og-image=
.jpg">

    <!-- Twitter -->
    <meta property=3D"twitter:card" content=3D"summary_large_image">
    <meta property=3D"twitter:url" content=3D"https://laravel.com/">
    <meta property=3D"twitter:title" content=3D"Laravel - The PHP Framework=
 For Web Artisans">
    <meta property=3D"twitter:description" content=3D"Laravel is a PHP web =
application framework with expressive, elegant syntax. We=E2=80=99ve alread=
y laid the foundation =E2=80=94 freeing you to create without sweating the =
small things.">
    <meta property=3D"twitter:image" content=3D"https://laravel.com/img/og-=
image.jpg">

    <!-- Favicon -->
    <link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://larave=
l.com/img/favicon/apple-touch-icon.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"32x32" href=3D"https://l=
aravel.com/img/favicon/favicon-32x32.png">
    <link rel=3D"icon" type=3D"image/png" sizes=3D"16x16" href=3D"https://l=
aravel.com/img/favicon/favicon-16x16.png">
    <link rel=3D"manifest" href=3D"https://laravel.com/img/favicon/site.web=
manifest">
    <link rel=3D"mask-icon" href=3D"https://laravel.com/img/favicon/safari-=
pinned-tab.svg" color=3D"#ff2d20">
    <link rel=3D"shortcut icon" href=3D"https://laravel.com/img/favicon/fav=
icon.ico">
    <meta name=3D"msapplication-TileColor" content=3D"#ff2d20">
    <meta name=3D"msapplication-config" content=3D"/img/favicon/browserconf=
ig.xml">
    <meta name=3D"theme-color" content=3D"#ffffff">
    <meta name=3D"color-scheme" content=3D"light">

    <link rel=3D"preconnect" href=3D"https://e3mirnpjh5-dsn.algolia.net/" c=
rossorigin=3D"">

    <link rel=3D"stylesheet" href=3D"https://use.typekit.net/ins2wgm.css">
    <link rel=3D"preload" as=3D"style" href=3D"https://laravel.com/build/as=
sets/app-8aa4d27a.css"><link rel=3D"modulepreload" href=3D"https://laravel.=
com/build/assets/app-c412b7b5.js"><link rel=3D"stylesheet" href=3D"https://=
laravel.com/build/assets/app-8aa4d27a.css">
            <!-- Fathom - beautiful, simple website analytics -->
       =20
        <!-- / Fathom -->
   =20
   =20
   =20

   =20
</head>
<body>

   =20

   =20

    <div class=3D"relative overflow-auto dark:bg-dark-700" id=3D"docsScreen=
">
        <div class=3D"relative lg:flex lg:items-start">
           =20

           =20

            <section class=3D"flex-1 dark:bg-dark-700">
                <div class=3D"max-w-screen-lg px-8 sm:px-16 lg:px-24">
                   =20

                    <section class=3D"mt-8 md:mt-16">
                        <section class=3D"docs_main max-w-prose">
                           =20
                           =20
                            <div id=3D"main-content">
   =20

















































































































<h3 id=3D"available-column-types"><a href=3D"https://laravel.com/docs/10.x/=
migrations#available-column-types">Available Column Types</a></h3>
<p>The schema builder blueprint offers a variety of methods that correspond=
 to the different types of columns you can add to your database tables. Eac=
h of the available methods are listed in the table below:</p>

<div class=3D"collection-method-list" markdown=3D"1">
<p><a href=3D"https://laravel.com/docs/10.x/migrations#column-method-bigInc=
rements">bigIncrements</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-bigIntege=
r">bigInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-binary">b=
inary</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-boolean">=
boolean</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-char">cha=
r</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-dateTimeT=
z">dateTimeTz</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-dateTime"=
>dateTime</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-date">dat=
e</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-decimal">=
decimal</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-double">d=
ouble</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-enum">enu=
m</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-float">fl=
oat</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-foreignId=
">foreignId</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-foreignId=
For">foreignIdFor</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-foreignUl=
id">foreignUlid</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-foreignUu=
id">foreignUuid</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-geometryC=
ollection">geometryCollection</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-geometry"=
>geometry</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-id">id</a=
>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-increment=
s">increments</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-integer">=
integer</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-ipAddress=
">ipAddress</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-json">jso=
n</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-jsonb">js=
onb</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-lineStrin=
g">lineString</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-longText"=
>longText</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-macAddres=
s">macAddress</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-mediumInc=
rements">mediumIncrements</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-mediumInt=
eger">mediumInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-mediumTex=
t">mediumText</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-morphs">m=
orphs</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-multiLine=
String">multiLineString</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-multiPoin=
t">multiPoint</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-multiPoly=
gon">multiPolygon</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableM=
orphs">nullableMorphs</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableT=
imestamps">nullableTimestamps</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableU=
lidMorphs">nullableUlidMorphs</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableU=
uidMorphs">nullableUuidMorphs</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-point">po=
int</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-polygon">=
polygon</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-rememberT=
oken">rememberToken</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-set">set<=
/a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-smallIncr=
ements">smallIncrements</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-smallInte=
ger">smallInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-softDelet=
esTz">softDeletesTz</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-softDelet=
es">softDeletes</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-string">s=
tring</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-text">tex=
t</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-timeTz">t=
imeTz</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-time">tim=
e</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-timestamp=
Tz">timestampTz</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-timestamp=
">timestamp</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-timestamp=
sTz">timestampsTz</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-timestamp=
s">timestamps</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-tinyIncre=
ments">tinyIncrements</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-tinyInteg=
er">tinyInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-tinyText"=
>tinyText</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedB=
igInteger">unsignedBigInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedD=
ecimal">unsignedDecimal</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedI=
nteger">unsignedInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedM=
ediumInteger">unsignedMediumInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedS=
mallInteger">unsignedSmallInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedT=
inyInteger">unsignedTinyInteger</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-ulidMorph=
s">ulidMorphs</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-uuidMorph=
s">uuidMorphs</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-ulid">uli=
d</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-uuid">uui=
d</a>
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-year">yea=
r</a></p>
</div>
<p></p>
<h4 class=3D"collection-method first-collection-method" id=3D"column-method=
-bigIncrements"><a href=3D"https://laravel.com/docs/10.x/migrations#column-=
method-bigIncrements"><code>bigIncrements()</code></a></h4>
<p>The <code>bigIncrements</code> method creates an auto-incrementing <code=
>UNSIGNED BIGINT</code> (primary key) equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-29"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">bigIncrements</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton=
-29" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" tit=
le=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-29"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-bigInteger"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-bigInteger"><code>bi=
gInteger()</code></a></h4>
<p>The <code>bigInteger</code> method creates a <code>BIGINT</code> equival=
ent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-30"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">bigInteger</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton=
-30" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" tit=
le=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-30"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-binary"><a href=3D"http=
s://laravel.com/docs/10.x/migrations#column-method-binary"><code>binary()</=
code></a></h4>
<p>The <code>binary</code> method creates a <code>BLOB</code> equivalent co=
lumn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-31"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">binary</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">photo</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-3=
1" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-31"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-boolean"><a href=3D"htt=
ps://laravel.com/docs/10.x/migrations#column-method-boolean"><code>boolean(=
)</code></a></h4>
<p>The <code>boolean</code> method creates a <code>BOOLEAN</code> equivalen=
t column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-32"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">boolean</span><span style=3D"color: #BFC=
7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">confirmed</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-32" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-32"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-char"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-char"><code>char()</code><=
/a></h4>
<p>The <code>char</code> method creates a <code>CHAR</code> equivalent colu=
mn with of a given length:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-33"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">char</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">100</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-33" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-33"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-dateTimeTz"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-dateTimeTz"><code>da=
teTimeTz()</code></a></h4>
<p>The <code>dateTimeTz</code> method creates a <code>DATETIME</code> (with=
 timezone) equivalent column with an optional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-34"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">dateTimeTz</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">created_at</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$preci=
sion</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C=
792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"co=
lor: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div></cod=
e></pre><button id=3D"clipButton-34" class=3D"md:block hidden copyBtn" aria=
-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-tar=
get=3D"#clipText-34"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://ww=
w.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M=
8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0=
 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01=
-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-dateTime"><a href=3D"ht=
tps://laravel.com/docs/10.x/migrations#column-method-dateTime"><code>dateTi=
me()</code></a></h4>
<p>The <code>dateTime</code> method creates a <code>DATETIME</code> equival=
ent column with an optional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-35"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">dateTime</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">created_at</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$precisi=
on</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C79=
2EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"colo=
r: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div></code>=
</pre><button id=3D"clipButton-35" class=3D"md:block hidden copyBtn" aria-l=
abel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targe=
t=3D"#clipText-35"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.=
w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 =
3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 0=
0-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3=
-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-date"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-date"><code>date()</code><=
/a></h4>
<p>The <code>date</code> method creates a <code>DATE</code> equivalent colu=
mn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-36"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">date</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">created_at</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-=
36" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-36"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-decimal"><a href=3D"htt=
ps://laravel.com/docs/10.x/migrations#column-method-decimal"><code>decimal(=
)</code></a></h4>
<p>The <code>decimal</code> method creates a <code>DECIMAL</code> equivalen=
t column with the given precision (total digits) and scale (decimal digits)=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-37"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">decimal</span><span style=3D"color: #BFC=
7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">amount</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$precision</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;"=
>=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F=
78C6C;">8</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"col=
or: #BEC5D4;">$scale</span><span style=3D"color: #BFC7D5;"> </span><span st=
yle=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><=
span style=3D"color: #F78C6C;">2</span><span style=3D"color: #BFC7D5;">);</=
span></div></code></pre><button id=3D"clipButton-37" class=3D"md:block hidd=
en copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" da=
ta-clipboard-target=3D"#clipText-37"><svg class=3D"fill-current h-5 w-5" xm=
lns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCol=
or"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path=
 d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 0=
1-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-double"><a href=3D"http=
s://laravel.com/docs/10.x/migrations#column-method-double"><code>double()</=
code></a></h4>
<p>The <code>double</code> method creates a <code>DOUBLE</code> equivalent =
column with the given precision (total digits) and scale (decimal digits):<=
/p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-38"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">double</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">amount</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">8</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">2</span=
><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"=
clipButton-38" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clip=
board" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-38"><=
svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vie=
wBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 =
0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2=
h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></=
button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-enum"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-enum"><code>enum()</code><=
/a></h4>
<p>The <code>enum</code> method creates a <code>ENUM</code> equivalent colu=
mn with the given valid values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-39"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">enum</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">difficulty</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">, [</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">easy</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #C3E88D;">hard</span><span style=3D"color:=
 #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]);</span></div></code><=
/pre><button id=3D"clipButton-39" class=3D"md:block hidden copyBtn" aria-la=
bel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-39"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-float"><a href=3D"https=
://laravel.com/docs/10.x/migrations#column-method-float"><code>float()</cod=
e></a></h4>
<p>The <code>float</code> method creates a <code>FLOAT</code> equivalent co=
lumn with the given precision (total digits) and scale (decimal digits):</p=
>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-40"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">float</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">amount</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">8</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">2</span=
><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"=
clipButton-40" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clip=
board" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-40"><=
svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vie=
wBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 =
0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2=
h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></=
button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-foreignId"><a href=3D"h=
ttps://laravel.com/docs/10.x/migrations#column-method-foreignId"><code>fore=
ignId()</code></a></h4>
<p>The <code>foreignId</code> method creates an <code>UNSIGNED BIGINT</code=
> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-41"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">foreignId</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-41" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-41"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-foreignIdFor"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-foreignIdFor"><c=
ode>foreignIdFor()</code></a></h4>
<p>The <code>foreignIdFor</code> method adds a <code>{column}_id</code> equ=
ivalent column for a given model class. The column type will be <code>UNSIG=
NED BIGINT</code>, <code>CHAR(36)</code>, or <code>CHAR(26)</code> dependin=
g on the model key type:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-42"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">foreignIdFor</span><span style=3D"color:=
 #BFC7D5;">(</span><span style=3D"color: #FFCB8B;">User</span><span style=
=3D"color: #89DDFF;">::</span><span style=3D"color: #C792EA;">class</span><=
span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"cl=
ipButton-42" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipbo=
ard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-42"><sv=
g class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewB=
ox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 =
110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8=
a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></bu=
tton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-foreignUlid"><a href=3D=
"https://laravel.com/docs/10.x/migrations#column-method-foreignUlid"><code>=
foreignUlid()</code></a></h4>
<p>The <code>foreignUlid</code> method creates a <code>ULID</code> equivale=
nt column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-43"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">foreignUlid</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBut=
ton-43" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-43"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-foreignUuid"><a href=3D=
"https://laravel.com/docs/10.x/migrations#column-method-foreignUuid"><code>=
foreignUuid()</code></a></h4>
<p>The <code>foreignUuid</code> method creates a <code>UUID</code> equivale=
nt column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-44"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">foreignUuid</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBut=
ton-44" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-44"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-geometryCollection"><a =
href=3D"https://laravel.com/docs/10.x/migrations#column-method-geometryColl=
ection"><code>geometryCollection()</code></a></h4>
<p>The <code>geometryCollection</code> method creates a <code>GEOMETRYCOLLE=
CTION</code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-45"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">geometryCollection</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">positions</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=
=3D"clipButton-45" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-4=
5"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-geometry"><a href=3D"ht=
tps://laravel.com/docs/10.x/migrations#column-method-geometry"><code>geomet=
ry()</code></a></h4>
<p>The <code>geometry</code> method creates a <code>GEOMETRY</code> equival=
ent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-46"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">geometry</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">positions</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButt=
on-46" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" t=
itle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-46"><svg clas=
s=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"=
0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H=
9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0=
 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button><=
/div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-id"><a href=3D"https://=
laravel.com/docs/10.x/migrations#column-method-id"><code>id()</code></a></h=
4>
<p>The <code>id</code> method is an alias of the <code>bigIncrements</code>=
 method. By default, the method will create an <code>id</code> column; howe=
ver, you may pass a column name if you would like to assign a different nam=
e to the column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-47"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">id</span><span style=3D"color: #BFC7D5;"=
>();</span></div></code></pre><button id=3D"clipButton-47" class=3D"md:bloc=
k hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboa=
rd" data-clipboard-target=3D"#clipText-47"><svg class=3D"fill-current h-5 w=
-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curr=
entColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path=
><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3=
 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-increments"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-increments"><code>in=
crements()</code></a></h4>
<p>The <code>increments</code> method creates an auto-incrementing <code>UN=
SIGNED INTEGER</code> equivalent column as a primary key:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-48"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">increments</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-4=
8" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-48"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-integer"><a href=3D"htt=
ps://laravel.com/docs/10.x/migrations#column-method-integer"><code>integer(=
)</code></a></h4>
<p>The <code>integer</code> method creates an <code>INTEGER</code> equivale=
nt column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-49"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">integer</span><span style=3D"color: #BFC=
7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-4=
9" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-49"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-ipAddress"><a href=3D"h=
ttps://laravel.com/docs/10.x/migrations#column-method-ipAddress"><code>ipAd=
dress()</code></a></h4>
<p>The <code>ipAddress</code> method creates a <code>VARCHAR</code> equival=
ent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-50"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">ipAddress</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">visitor</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-50" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-50"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p>When using Postgres, an <code>INET</code> column will be created.</p>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-json"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-json"><code>json()</code><=
/a></h4>
<p>The <code>json</code> method creates a <code>JSON</code> equivalent colu=
mn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-51"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">json</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">options</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-5=
1" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-51"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-jsonb"><a href=3D"https=
://laravel.com/docs/10.x/migrations#column-method-jsonb"><code>jsonb()</cod=
e></a></h4>
<p>The <code>jsonb</code> method creates a <code>JSONB</code> equivalent co=
lumn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-52"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">jsonb</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">options</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-5=
2" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-52"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-lineString"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-lineString"><code>li=
neString()</code></a></h4>
<p>The <code>lineString</code> method creates a <code>LINESTRING</code> equ=
ivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-53"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">lineString</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">positions</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBu=
tton-53" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-53"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-longText"><a href=3D"ht=
tps://laravel.com/docs/10.x/migrations#column-method-longText"><code>longTe=
xt()</code></a></h4>
<p>The <code>longText</code> method creates a <code>LONGTEXT</code> equival=
ent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-54"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">longText</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">description</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBu=
tton-54" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-54"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-macAddress"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-macAddress"><code>ma=
cAddress()</code></a></h4>
<p>The <code>macAddress</code> method creates a column that is intended to =
hold a MAC address. Some database systems, such as PostgreSQL, have a dedic=
ated column type for this type of data. Other database systems will use a s=
tring equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-55"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">macAddress</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">device</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-55" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-55"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-mediumIncrements"><a hr=
ef=3D"https://laravel.com/docs/10.x/migrations#column-method-mediumIncremen=
ts"><code>mediumIncrements()</code></a></h4>
<p>The <code>mediumIncrements</code> method creates an auto-incrementing <c=
ode>UNSIGNED MEDIUMINT</code> equivalent column as a primary key:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-56"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">mediumIncrements</span><span style=3D"co=
lor: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBu=
tton-56" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-56"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-mediumInteger"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-mediumInteger"><=
code>mediumInteger()</code></a></h4>
<p>The <code>mediumInteger</code> method creates a <code>MEDIUMINT</code> e=
quivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-57"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">mediumInteger</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"=
color: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBut=
ton-57" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-57"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-mediumText"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-mediumText"><code>me=
diumText()</code></a></h4>
<p>The <code>mediumText</code> method creates a <code>MEDIUMTEXT</code> equ=
ivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-58"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">mediumText</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">description</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clip=
Button-58" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-58"><svg =
class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-morphs"><a href=3D"http=
s://laravel.com/docs/10.x/migrations#column-method-morphs"><code>morphs()</=
code></a></h4>
<p>The <code>morphs</code> method is a convenience method that adds a <code=
>{column}_id</code> equivalent column and a <code>{column}_type</code> <cod=
e>VARCHAR</code> equivalent column. The column type for the <code>{column}_=
id</code> will be <code>UNSIGNED BIGINT</code>, <code>CHAR(36)</code>, or <=
code>CHAR(26)</code> depending on the model key type.</p>
<p>This method is intended to be used when defining the columns necessary f=
or a polymorphic <a href=3D"https://laravel.com/docs/10.x/eloquent-relation=
ships">Eloquent relationship</a>. In the following example, <code>taggable_=
id</code> and <code>taggable_type</code> columns would be created:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-59"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">morphs</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">taggable</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-=
59" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-59"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-multiLineString"><a hre=
f=3D"https://laravel.com/docs/10.x/migrations#column-method-multiLineString=
"><code>multiLineString()</code></a></h4>
<p>The <code>multiLineString</code> method creates a <code>MULTILINESTRING<=
/code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-60"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">multiLineString</span><span style=3D"col=
or: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">positions</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D=
"clipButton-60" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cli=
pboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-60">=
<svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vi=
ewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1=
 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 =
2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg><=
/button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-multiPoint"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-multiPoint"><code>mu=
ltiPoint()</code></a></h4>
<p>The <code>multiPoint</code> method creates a <code>MULTIPOINT</code> equ=
ivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-61"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">multiPoint</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">positions</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBu=
tton-61" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-61"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-multiPolygon"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-multiPolygon"><c=
ode>multiPolygon()</code></a></h4>
<p>The <code>multiPolygon</code> method creates a <code>MULTIPOLYGON</code>=
 equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-62"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">multiPolygon</span><span style=3D"color:=
 #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #C3E88D;">positions</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clip=
Button-62" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-62"><svg =
class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-nullableTimestamps"><a =
href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableTime=
stamps"><code>nullableTimestamps()</code></a></h4>
<p>The <code>nullableTimestamps</code> method is an alias of the <a href=3D=
"https://laravel.com/docs/10.x/migrations#column-method-timestamps">timesta=
mps</a> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-63"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">nullableTimestamps</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #F78C6C;">0</span><span styl=
e=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-=
63" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-63"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-nullableMorphs"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableMorphs">=
<code>nullableMorphs()</code></a></h4>
<p>The method is similar to the <a href=3D"https://laravel.com/docs/10.x/mi=
grations#column-method-morphs">morphs</a> method; however, the columns that=
 are created will be "nullable":</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-64"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">nullableMorphs</span><span style=3D"colo=
r: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #C3E88D;">taggable</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"cli=
pButton-64" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboa=
rd" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-64"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-nullableUlidMorphs"><a =
href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableUlid=
Morphs"><code>nullableUlidMorphs()</code></a></h4>
<p>The method is similar to the <a href=3D"https://laravel.com/docs/10.x/mi=
grations#column-method-ulidMorphs">ulidMorphs</a> method; however, the colu=
mns that are created will be "nullable":</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-65"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">nullableUlidMorphs</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">taggable</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D=
"clipButton-65" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cli=
pboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-65">=
<svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vi=
ewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1=
 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 =
2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg><=
/button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-nullableUuidMorphs"><a =
href=3D"https://laravel.com/docs/10.x/migrations#column-method-nullableUuid=
Morphs"><code>nullableUuidMorphs()</code></a></h4>
<p>The method is similar to the <a href=3D"https://laravel.com/docs/10.x/mi=
grations#column-method-uuidMorphs">uuidMorphs</a> method; however, the colu=
mns that are created will be "nullable":</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-66"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">nullableUuidMorphs</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">taggable</span><span style=3D"color: #D9F5DD;">'</spa=
n><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D=
"clipButton-66" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cli=
pboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-66">=
<svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" vi=
ewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1=
 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 =
2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg><=
/button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-point"><a href=3D"https=
://laravel.com/docs/10.x/migrations#column-method-point"><code>point()</cod=
e></a></h4>
<p>The <code>point</code> method creates a <code>POINT</code> equivalent co=
lumn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-67"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">point</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">position</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-6=
7" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-67"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-polygon"><a href=3D"htt=
ps://laravel.com/docs/10.x/migrations#column-method-polygon"><code>polygon(=
)</code></a></h4>
<p>The <code>polygon</code> method creates a <code>POLYGON</code> equivalen=
t column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-68"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">polygon</span><span style=3D"color: #BFC=
7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">position</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton=
-68" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" tit=
le=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-68"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-rememberToken"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-rememberToken"><=
code>rememberToken()</code></a></h4>
<p>The <code>rememberToken</code> method creates a nullable, <code>VARCHAR(=
100)</code> equivalent column that is intended to store the current "rememb=
er me" <a href=3D"https://laravel.com/docs/10.x/authentication#remembering-=
users">authentication token</a>:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-69"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">rememberToken</span><span style=3D"color=
: #BFC7D5;">();</span></div></code></pre><button id=3D"clipButton-69" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-69"><svg class=3D"fill-cu=
rrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" f=
ill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1=
-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2=
 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-set"><a href=3D"https:/=
/laravel.com/docs/10.x/migrations#column-method-set"><code>set()</code></a>=
</h4>
<p>The <code>set</code> method creates a <code>SET</code> equivalent column=
 with the given list of valid values:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-70"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">set</span><span style=3D"color: #BFC7D5;=
">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3=
E88D;">flavors</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">, [</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #C3E88D;">strawberry</span><span style=3D"color: #D9F5DD;">'=
</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">vanilla</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]);</span></div></c=
ode></pre><button id=3D"clipButton-70" class=3D"md:block hidden copyBtn" ar=
ia-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-t=
arget=3D"#clipText-70"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://=
www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D=
"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2=
 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 =
01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-smallIncrements"><a hre=
f=3D"https://laravel.com/docs/10.x/migrations#column-method-smallIncrements=
"><code>smallIncrements()</code></a></h4>
<p>The <code>smallIncrements</code> method creates an auto-incrementing <co=
de>UNSIGNED SMALLINT</code> equivalent column as a primary key:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-71"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">smallIncrements</span><span style=3D"col=
or: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBu=
tton-71" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-71"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-smallInteger"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-smallInteger"><c=
ode>smallInteger()</code></a></h4>
<p>The <code>smallInteger</code> method creates a <code>SMALLINT</code> equ=
ivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-72"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">smallInteger</span><span style=3D"color:=
 #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButt=
on-72" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" t=
itle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-72"><svg clas=
s=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"=
0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H=
9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0=
 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button><=
/div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-softDeletesTz"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-softDeletesTz"><=
code>softDeletesTz()</code></a></h4>
<p>The <code>softDeletesTz</code> method adds a nullable <code>deleted_at</=
code> <code>TIMESTAMP</code> (with timezone) equivalent column with an opti=
onal precision (total digits). This column is intended to store the <code>d=
eleted_at</code> timestamp needed for Eloquent's "soft delete" functionalit=
y:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-73"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">softDeletesTz</span><span style=3D"color=
: #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$column</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #C3E88D;">deleted_at</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"co=
lor: #BEC5D4;">$precision</span><span style=3D"color: #BFC7D5;"> </span><sp=
an style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </s=
pan><span style=3D"color: #F78C6C;">0</span><span style=3D"color: #BFC7D5;"=
>);</span></div></code></pre><button id=3D"clipButton-73" class=3D"md:block=
 hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboar=
d" data-clipboard-target=3D"#clipText-73"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-softDeletes"><a href=3D=
"https://laravel.com/docs/10.x/migrations#column-method-softDeletes"><code>=
softDeletes()</code></a></h4>
<p>The <code>softDeletes</code> method adds a nullable <code>deleted_at</co=
de> <code>TIMESTAMP</code> equivalent column with an optional precision (to=
tal digits). This column is intended to store the <code>deleted_at</code> t=
imestamp needed for Eloquent's "soft delete" functionality:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-74"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">softDeletes</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$column</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">deleted_at</span><span style=3D"color: #D9=
F5DD;">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"colo=
r: #BEC5D4;">$precision</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">)=
;</span></div></code></pre><button id=3D"clipButton-74" class=3D"md:block h=
idden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard"=
 data-clipboard-target=3D"#clipText-74"><svg class=3D"fill-current h-5 w-5"=
 xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"current=
Color"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><p=
ath d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 =
0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-string"><a href=3D"http=
s://laravel.com/docs/10.x/migrations#column-method-string"><code>string()</=
code></a></h4>
<p>The <code>string</code> method creates a <code>VARCHAR</code> equivalent=
 column of the given length:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-75"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">string</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">100</span><span =
style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBut=
ton-75" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-75"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-text"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-text"><code>text()</code><=
/a></h4>
<p>The <code>text</code> method creates a <code>TEXT</code> equivalent colu=
mn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-76"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">text</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">description</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton=
-76" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" tit=
le=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-76"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-timeTz"><a href=3D"http=
s://laravel.com/docs/10.x/migrations#column-method-timeTz"><code>timeTz()</=
code></a></h4>
<p>The <code>timeTz</code> method creates a <code>TIME</code> (with timezon=
e) equivalent column with an optional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-77"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">timeTz</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">sunrise</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$precision</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;"=
>=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F=
78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre=
><button id=3D"clipButton-77" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-77"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.o=
rg/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 =
1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 =
2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"=
></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-time"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-time"><code>time()</code><=
/a></h4>
<p>The <code>time</code> method creates a <code>TIME</code> equivalent colu=
mn with an optional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-78"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">time</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">sunrise</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$precision</s=
pan><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;"=
>=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F=
78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre=
><button id=3D"clipButton-78" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-78"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.o=
rg/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 =
1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 =
2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"=
></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-timestampTz"><a href=3D=
"https://laravel.com/docs/10.x/migrations#column-method-timestampTz"><code>=
timestampTz()</code></a></h4>
<p>The <code>timestampTz</code> method creates a <code>TIMESTAMP</code> (wi=
th timezone) equivalent column with an optional precision (total digits):</=
p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-79"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">timestampTz</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">added_at</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$precis=
ion</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C7=
92EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"col=
or: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div></code=
></pre><button id=3D"clipButton-79" class=3D"md:block hidden copyBtn" aria-=
label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-targ=
et=3D"#clipText-79"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www=
.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8=
 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 =
00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-=
3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-timestamp"><a href=3D"h=
ttps://laravel.com/docs/10.x/migrations#column-method-timestamp"><code>time=
stamp()</code></a></h4>
<p>The <code>timestamp</code> method creates a <code>TIMESTAMP</code> equiv=
alent column with an optional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-80"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">timestamp</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">added_at</span><span style=3D"color: #D9F5DD;">'</span><span s=
tyle=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$precisio=
n</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792=
EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color=
: #F78C6C;">0</span><span style=3D"color: #BFC7D5;">);</span></div></code><=
/pre><button id=3D"clipButton-80" class=3D"md:block hidden copyBtn" aria-la=
bel=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-80"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w=
3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3=
a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00=
-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-=
3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-timestampsTz"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-timestampsTz"><c=
ode>timestampsTz()</code></a></h4>
<p>The <code>timestampsTz</code> method creates <code>created_at</code> and=
 <code>updated_at</code> <code>TIMESTAMP</code> (with timezone) equivalent =
columns with an optional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-81"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">timestampsTz</span><span style=3D"color:=
 #BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$precision</span><span s=
tyle=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span>=
<span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">0</=
span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=
=3D"clipButton-81" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-8=
1"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-timestamps"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-timestamps"><code>ti=
mestamps()</code></a></h4>
<p>The <code>timestamps</code> method creates <code>created_at</code> and <=
code>updated_at</code> <code>TIMESTAMP</code> equivalent columns with an op=
tional precision (total digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-82"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">timestamps</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #BEC5D4;">$precision</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">=3D</span><s=
pan style=3D"color: #BFC7D5;"> </span><span style=3D"color: #F78C6C;">0</sp=
an><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=
=3D"clipButton-82" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-8=
2"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-tinyIncrements"><a href=
=3D"https://laravel.com/docs/10.x/migrations#column-method-tinyIncrements">=
<code>tinyIncrements()</code></a></h4>
<p>The <code>tinyIncrements</code> method creates an auto-incrementing <cod=
e>UNSIGNED TINYINT</code> equivalent column as a primary key:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-83"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">tinyIncrements</span><span style=3D"colo=
r: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-83" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-83"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-tinyInteger"><a href=3D=
"https://laravel.com/docs/10.x/migrations#column-method-tinyInteger"><code>=
tinyInteger()</code></a></h4>
<p>The <code>tinyInteger</code> method creates a <code>TINYINT</code> equiv=
alent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-84"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">tinyInteger</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButto=
n-84" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" ti=
tle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-84"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-tinyText"><a href=3D"ht=
tps://laravel.com/docs/10.x/migrations#column-method-tinyText"><code>tinyTe=
xt()</code></a></h4>
<p>The <code>tinyText</code> method creates a <code>TINYTEXT</code> equival=
ent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-85"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">tinyText</span><span style=3D"color: #BF=
C7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color=
: #C3E88D;">notes</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-8=
5" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=
=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-85"><svg class=3D=
"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 =
20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 =
1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002=
-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div=
>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-unsignedBigInteger"><a =
href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedBigI=
nteger"><code>unsignedBigInteger()</code></a></h4>
<p>The <code>unsignedBigInteger</code> method creates an <code>UNSIGNED BIG=
INT</code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-86"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unsignedBigInteger</span><span style=3D"=
color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"cl=
ipButton-86" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipbo=
ard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-86"><sv=
g class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewB=
ox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 =
110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8=
a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></bu=
tton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-unsignedDecimal"><a hre=
f=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedDecimal=
"><code>unsignedDecimal()</code></a></h4>
<p>The <code>unsignedDecimal</code> method creates an <code>UNSIGNED DECIMA=
L</code> equivalent column with an optional precision (total digits) and sc=
ale (decimal digits):</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-87"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unsignedDecimal</span><span style=3D"col=
or: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">amount</span><span style=3D"color: #D9F5DD;">'</span><=
span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #BEC5D4;">$pr=
ecision</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"> </span><span style=3D=
"color: #F78C6C;">8</span><span style=3D"color: #BFC7D5;">, </span><span st=
yle=3D"color: #BEC5D4;">$scale</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #C792EA;">=3D</span><span style=3D"color: #BFC7D5;"=
> </span><span style=3D"color: #F78C6C;">2</span><span style=3D"color: #BFC=
7D5;">);</span></div></code></pre><button id=3D"clipButton-87" class=3D"md:=
block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cli=
pboard" data-clipboard-target=3D"#clipText-87"><svg class=3D"fill-current h=
-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"=
currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></=
path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2=
-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-unsignedInteger"><a hre=
f=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedInteger=
"><code>unsignedInteger()</code></a></h4>
<p>The <code>unsignedInteger</code> method creates an <code>UNSIGNED INTEGE=
R</code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-88"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unsignedInteger</span><span style=3D"col=
or: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"cli=
pButton-88" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboa=
rd" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-88"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-unsignedMediumInteger">=
<a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedM=
ediumInteger"><code>unsignedMediumInteger()</code></a></h4>
<p>The <code>unsignedMediumInteger</code> method creates an <code>UNSIGNED =
MEDIUMINT</code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-89"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unsignedMediumInteger</span><span style=
=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=
=3D"clipButton-89" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-8=
9"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-unsignedSmallInteger"><=
a href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedSm=
allInteger"><code>unsignedSmallInteger()</code></a></h4>
<p>The <code>unsignedSmallInteger</code> method creates an <code>UNSIGNED S=
MALLINT</code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-90"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unsignedSmallInteger</span><span style=
=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=
=3D"clipButton-90" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to =
Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-9=
0"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg"=
 viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a=
1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 0=
02 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></sv=
g></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-unsignedTinyInteger"><a=
 href=3D"https://laravel.com/docs/10.x/migrations#column-method-unsignedTin=
yInteger"><code>unsignedTinyInteger()</code></a></h4>
<p>The <code>unsignedTinyInteger</code> method creates an <code>UNSIGNED TI=
NYINT</code> equivalent column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-91"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unsignedTinyInteger</span><span style=3D=
"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"c=
lipButton-91" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipb=
oard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-91"><s=
vg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" view=
Box=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0=
 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h=
8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></b=
utton></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-ulidMorphs"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-ulidMorphs"><code>ul=
idMorphs()</code></a></h4>
<p>The <code>ulidMorphs</code> method is a convenience method that adds a <=
code>{column}_id</code> <code>CHAR(26)</code> equivalent column and a <code=
>{column}_type</code> <code>VARCHAR</code> equivalent column.</p>
<p>This method is intended to be used when defining the columns necessary f=
or a polymorphic <a href=3D"https://laravel.com/docs/10.x/eloquent-relation=
ships">Eloquent relationship</a> that use ULID identifiers. In the followin=
g example, <code>taggable_id</code> and <code>taggable_type</code> columns =
would be created:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-92"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">ulidMorphs</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">taggable</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBut=
ton-92" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-92"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-uuidMorphs"><a href=3D"=
https://laravel.com/docs/10.x/migrations#column-method-uuidMorphs"><code>uu=
idMorphs()</code></a></h4>
<p>The <code>uuidMorphs</code> method is a convenience method that adds a <=
code>{column}_id</code> <code>CHAR(36)</code> equivalent column and a <code=
>{column}_type</code> <code>VARCHAR</code> equivalent column.</p>
<p>This method is intended to be used when defining the columns necessary f=
or a polymorphic <a href=3D"https://laravel.com/docs/10.x/eloquent-relation=
ships">Eloquent relationship</a> that use UUID identifiers. In the followin=
g example, <code>taggable_id</code> and <code>taggable_type</code> columns =
would be created:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-93"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">uuidMorphs</span><span style=3D"color: #=
BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #C3E88D;">taggable</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipBut=
ton-93" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-93"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-ulid"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-ulid"><code>ulid()</code><=
/a></h4>
<p>The <code>ulid</code> method creates a <code>ULID</code> equivalent colu=
mn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-94"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">ulid</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-94" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-94"><svg class=3D"fill-c=
urrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" =
fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-=
1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 =
2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-uuid"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-uuid"><code>uuid()</code><=
/a></h4>
<p>The <code>uuid</code> method creates a <code>UUID</code> equivalent colu=
mn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-95"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">uuid</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">id</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"col=
or: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-95" clas=
s=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Cop=
y to Clipboard" data-clipboard-target=3D"#clipText-95"><svg class=3D"fill-c=
urrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" =
fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-=
1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 =
2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 class=3D"collection-method" id=3D"column-method-year"><a href=3D"https:=
//laravel.com/docs/10.x/migrations#column-method-year"><code>year()</code><=
/a></h4>
<p>The <code>year</code> method creates a <code>YEAR</code> equivalent colu=
mn:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-96"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">year</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">birth_year</span><span style=3D"color: #D9F5DD;">'</span><span styl=
e=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-=
96" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-96"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h3 id=3D"column-modifiers"><a href=3D"https://laravel.com/docs/10.x/migrat=
ions#column-modifiers">Column Modifiers</a></h3>
<p>In addition to the column types listed above, there are several column "=
modifiers" you may use when adding a column to a database table. For exampl=
e, to make the column "nullable", you may use the <code>nullable</code> met=
hod:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-97"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Database\Schema\</span><span style=3D"color: #FFCB8B;">Blueprint</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Schema</span><span s=
tyle=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #FFCB8B;">Schema</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">table</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">users</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #C=
792EA;">function</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #D9F5DD;">(</span><span style=3D"color: #FFCB8B;">Blueprint</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$=
table</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #=
BFC7D5;"> {</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;"=
>    </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"col=
or: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">string</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">email</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89=
DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">nullable</span><span sty=
le=3D"color: #BFC7D5;">();</span></div><div class=3D"line"><span style=3D"c=
olor: #BFC7D5;">});</span></div></code></pre><button id=3D"clipButton-97" c=
lass=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"=
Copy to Clipboard" data-clipboard-target=3D"#clipText-97"><svg class=3D"fil=
l-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 2=
0" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 =
01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5=
a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The following table contains all of the available column modifiers. This=
 list does not include <a href=3D"https://laravel.com/docs/10.x/migrations#=
creating-indexes">index modifiers</a>:</p>
<table>
<thead>
<tr>
<th>Modifier</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>-&gt;after('column')</code></td>
<td>Place the column "after" another column (MySQL).</td>
</tr>
<tr>
<td><code>-&gt;autoIncrement()</code></td>
<td>Set INTEGER columns as auto-incrementing (primary key).</td>
</tr>
<tr>
<td><code>-&gt;charset('utf8mb4')</code></td>
<td>Specify a character set for the column (MySQL).</td>
</tr>
<tr>
<td><code>-&gt;collation('utf8mb4_unicode_ci')</code></td>
<td>Specify a collation for the column (MySQL/PostgreSQL/SQL Server).</td>
</tr>
<tr>
<td><code>-&gt;comment('my comment')</code></td>
<td>Add a comment to a column (MySQL/PostgreSQL).</td>
</tr>
<tr>
<td><code>-&gt;default($value)</code></td>
<td>Specify a "default" value for the column.</td>
</tr>
<tr>
<td><code>-&gt;first()</code></td>
<td>Place the column "first" in the table (MySQL).</td>
</tr>
<tr>
<td><code>-&gt;from($integer)</code></td>
<td>Set the starting value of an auto-incrementing field (MySQL / PostgreSQ=
L).</td>
</tr>
<tr>
<td><code>-&gt;invisible()</code></td>
<td>Make the column "invisible" to <code>SELECT *</code> queries (MySQL).</=
td>
</tr>
<tr>
<td><code>-&gt;nullable($value =3D true)</code></td>
<td>Allow NULL values to be inserted into the column.</td>
</tr>
<tr>
<td><code>-&gt;storedAs($expression)</code></td>
<td>Create a stored generated column (MySQL / PostgreSQL).</td>
</tr>
<tr>
<td><code>-&gt;unsigned()</code></td>
<td>Set INTEGER columns as UNSIGNED (MySQL).</td>
</tr>
<tr>
<td><code>-&gt;useCurrent()</code></td>
<td>Set TIMESTAMP columns to use CURRENT_TIMESTAMP as default value.</td>
</tr>
<tr>
<td><code>-&gt;useCurrentOnUpdate()</code></td>
<td>Set TIMESTAMP columns to use CURRENT_TIMESTAMP when a record is updated=
 (MySQL).</td>
</tr>
<tr>
<td><code>-&gt;virtualAs($expression)</code></td>
<td>Create a virtual generated column (MySQL / PostgreSQL / SQLite).</td>
</tr>
<tr>
<td><code>-&gt;generatedAs($expression)</code></td>
<td>Create an identity column with specified sequence options (PostgreSQL).=
</td>
</tr>
<tr>
<td><code>-&gt;always()</code></td>
<td>Defines the precedence of sequence values over input for an identity co=
lumn (PostgreSQL).</td>
</tr>
<tr>
<td><code>-&gt;isGeometry()</code></td>
<td>Set spatial column type to <code>geometry</code> - the default type is =
<code>geography</code> (PostgreSQL).</td>
</tr>
</tbody>
</table>
<p></p>
<h4 id=3D"default-expressions"><a href=3D"https://laravel.com/docs/10.x/mig=
rations#default-expressions">Default Expressions</a></h4>
<p>The <code>default</code> modifier accepts a value or an <code>Illuminate=
\Database\Query\Expression</code> instance. Using an <code>Expression</code=
> instance will prevent Laravel from wrapping the value in quotes and allow=
 you to use database specific functions. One situation where this is partic=
ularly useful is when you need to assign default values to JSON columns:</p=
>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-98"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #D3423E;">&lt;?php</span></div><div class=3D"line">&nbsp;</div><=
div class=3D"line"><span style=3D"color: #C792EA;">use</span><span style=3D=
"color: #BFC7D5;"> Illuminate\Support\Facades\</span><span style=3D"color: =
#FFCB8B;">Schema</span><span style=3D"color: #BFC7D5;">;</span></div><div c=
lass=3D"line"><span style=3D"color: #C792EA;">use</span><span style=3D"colo=
r: #BFC7D5;"> Illuminate\Database\Schema\</span><span style=3D"color: #FFCB=
8B;">Blueprint</span><span style=3D"color: #BFC7D5;">;</span></div><div cla=
ss=3D"line"><span style=3D"color: #C792EA;">use</span><span style=3D"color:=
 #BFC7D5;"> Illuminate\Database\Query\</span><span style=3D"color: #FFCB8B;=
">Expression</span><span style=3D"color: #BFC7D5;">;</span></div><div class=
=3D"line"><span style=3D"color: #C792EA;">use</span><span style=3D"color: #=
BFC7D5;"> Illuminate\Database\Migrations\</span><span style=3D"color: #FFCB=
8B;">Migration</span><span style=3D"color: #BFC7D5;">;</span></div><div cla=
ss=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #C792EA;"=
>return</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #89DDFF;">new</span><span style=3D"color: #BFC7D5;"> </span><span style=3D=
"color: #C792EA;">class</span><span style=3D"color: #BFC7D5;"> </span><span=
 style=3D"color: #C792EA;">extends</span><span style=3D"color: #BFC7D5;"> <=
/span><span style=3D"color: #A9C77D;">Migration</span></div><div class=3D"l=
ine"><span style=3D"color: #BFC7D5;">{</span></div><div class=3D"line"><spa=
n style=3D"color: #BFC7D5;">    </span><span style=3D"color: #697098;">/**<=
/span></div><div class=3D"line"><span style=3D"color: #697098;">     * Run =
the migrations.</span></div><div class=3D"line"><span style=3D"color: #6970=
98;">     </span><span style=3D"color: #697098;">*/</span></div><div class=
=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"color: =
#C792EA;">public</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #C792EA;">function</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #82AAFF;">up</span><span style=3D"color: #D9F5DD;">(=
)</span><span style=3D"color: #89DDFF;">:</span><span style=3D"color: #BFC7=
D5;"> </span><span style=3D"color: #C792EA;">void</span></div><div class=3D=
"line"><span style=3D"color: #BFC7D5;">    {</span></div><div class=3D"line=
"><span style=3D"color: #BFC7D5;">        </span><span style=3D"color: #FFC=
B8B;">Schema</span><span style=3D"color: #89DDFF;">::</span><span style=3D"=
color: #82AAFF;">create</span><span style=3D"color: #BFC7D5;">(</span><span=
 style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">flights<=
/span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5=
;">, </span><span style=3D"color: #C792EA;">function</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><span style=
=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC7D5;"> </spa=
n><span style=3D"color: #BEC5D4;">$table</span><span style=3D"color: #D9F5D=
D;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div class=3D"li=
ne"><span style=3D"color: #BFC7D5;">            </span><span style=3D"color=
: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><span =
style=3D"color: #82AAFF;">id</span><span style=3D"color: #BFC7D5;">();</spa=
n></div><div class=3D"line"><span style=3D"color: #BFC7D5;">            </s=
pan><span style=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89D=
DFF;">-&gt;</span><span style=3D"color: #82AAFF;">json</span><span style=3D=
"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">movies</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&=
gt;</span><span style=3D"color: #82AAFF;">default</span><span style=3D"colo=
r: #BFC7D5;">(</span><span style=3D"color: #89DDFF;">new</span><span style=
=3D"color: #BFC7D5;"> </span><span style=3D"color: #FFCB8B;">Expression</sp=
an><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #C3E88D;">(JSON_ARRAY())</span><span style=3D=
"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">));</span></div><=
div class=3D"line"><span style=3D"color: #BFC7D5;">            </span><span=
 style=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&g=
t;</span><span style=3D"color: #82AAFF;">timestamps</span><span style=3D"co=
lor: #BFC7D5;">();</span></div><div class=3D"line"><span style=3D"color: #B=
FC7D5;">        });</span></div><div class=3D"line"><span style=3D"color: #=
BFC7D5;">    }</span></div><div class=3D"line"><span style=3D"color: #BFC7D=
5;">};</span></div></code></pre><button id=3D"clipButton-98" class=3D"md:bl=
ock hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipb=
oard" data-clipboard-target=3D"#clipText-98"><svg class=3D"fill-current h-5=
 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"cu=
rrentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></pa=
th><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2=
 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>Support for default expressions depends on your database driver, database =
version, and the field type. Please refer to your database's documentation.=
</p></div>
</blockquote>
<p></p>
<h4 id=3D"column-order"><a href=3D"https://laravel.com/docs/10.x/migrations=
#column-order">Column Order</a></h4>
<p>When using the MySQL database, the <code>after</code> method may be used=
 to add columns after an existing column in the schema:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-99"><!-=
- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">after</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">password</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(=
</span><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color=
: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span styl=
e=3D"color: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></di=
v><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span styl=
e=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</s=
pan><span style=3D"color: #82AAFF;">string</span><span style=3D"color: #BFC=
7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">address_line1</span><span style=3D"color: #D9F5DD;">'</span><spa=
n style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">    </span><span style=3D"color: #BEC5D4;">$table</spa=
n><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF=
;">string</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"colo=
r: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">address_line2</span><s=
pan style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</s=
pan></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    </span><s=
pan style=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">=
-&gt;</span><span style=3D"color: #82AAFF;">string</span><span style=3D"col=
or: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #C3E88D;">city</span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span style=
=3D"color: #BFC7D5;">});</span></div></code></pre><button id=3D"clipButton-=
99" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-99"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p></p>
<h3 id=3D"modifying-columns"><a href=3D"https://laravel.com/docs/10.x/migra=
tions#modifying-columns">Modifying Columns</a></h3>
<p>The <code>change</code> method allows you to modify the type and attribu=
tes of existing columns. For example, you may wish to increase the size of =
a <code>string</code> column. To see the <code>change</code> method in acti=
on, let's increase the size of the <code>name</code> column from 25 to 50. =
To accomplish this, we simply define the new state of the column and then c=
all the <code>change</code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-100"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">string</span><span style=3D"color: #BFC7D5;">=
(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E8=
8D;">name</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #BFC7D5;">, </span><span style=3D"color: #F78C6C;">50</span><span style=
=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">change</span><span style=3D"color: #BFC7D5;">=
();</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">});</sp=
an></div></code></pre><button id=3D"clipButton-100" class=3D"md:block hidde=
n copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" dat=
a-clipboard-target=3D"#clipText-100"><svg class=3D"fill-current h-5 w-5" xm=
lns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentCol=
or"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path=
 d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 0=
1-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>When modifying a column, you must explicitly include all of the modifier=
s you want to keep on the column definition - any missing attribute will be=
 dropped. For example, to retain the <code>unsigned</code>, <code>default</=
code>, and <code>comment</code> attributes, you must call each modifier exp=
licitly when changing the column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-101"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">integer</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><span st=
yle=3D"color: #82AAFF;">unsigned</span><span style=3D"color: #BFC7D5;">()</=
span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82A=
AFF;">default</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"=
color: #F78C6C;">1</span><span style=3D"color: #BFC7D5;">)</span><span styl=
e=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">comment</=
span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #C3E88D;">my comment</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">)</span><span style=
=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">change</sp=
an><span style=3D"color: #BFC7D5;">();</span></div><div class=3D"line"><spa=
n style=3D"color: #BFC7D5;">});</span></div></code></pre><button id=3D"clip=
Button-101" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboa=
rd" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-101"><sv=
g class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewB=
ox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 =
110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8=
a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></bu=
tton></div>
<p></p>
<h4 id=3D"modifying-columns-on-sqlite"><a href=3D"https://laravel.com/docs/=
10.x/migrations#modifying-columns-on-sqlite">Modifying Columns On SQLite</a=
></h4>
<p>If your application is utilizing an SQLite database, you must install th=
e <code>doctrine/dbal</code> package using the Composer package manager bef=
ore modifying a column. The Doctrine DBAL library is used to determine the =
current state of the column and to create the SQL queries needed to make th=
e requested changes to your column:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-102"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #82AAFF;">composer</span><span style=3D"color: #BFC7D5;"> </span=
><span style=3D"color: #C792EA;">require</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #82AAFF;">doctrine</span><span style=3D"c=
olor: #89DDFF;">/</span><span style=3D"color: #82AAFF;">dbal</span></div></=
code></pre><button id=3D"clipButton-102" class=3D"md:block hidden copyBtn" =
aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard=
-target=3D"#clipText-102"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http=
://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p>If you plan to modify columns created using the <code>timestamp</code> m=
ethod, you must also add the following configuration to your application's =
<code>config/database.php</code> configuration file:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-103"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Database\DBAL\</span><span style=3D"color: #FFCB8B;">TimestampType</span><s=
pan style=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div=
><div class=3D"line"><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #C3E88D;">dbal</span><span style=3D"color: #D9F5DD;">'</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #89DDFF;">=3D&gt;</=
span><span style=3D"color: #BFC7D5;"> [</span></div><div class=3D"line"><sp=
an style=3D"color: #BFC7D5;">    </span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">types</span><span style=3D"color: #D9F=
5DD;">'</span><span style=3D"color: #BFC7D5;"> </span><span style=3D"color:=
 #89DDFF;">=3D&gt;</span><span style=3D"color: #BFC7D5;"> [</span></div><di=
v class=3D"line"><span style=3D"color: #BFC7D5;">        </span><span style=
=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">timestamp</spa=
n><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;"> =
</span><span style=3D"color: #89DDFF;">=3D&gt;</span><span style=3D"color: =
#BFC7D5;"> </span><span style=3D"color: #FFCB8B;">TimestampType</span><span=
 style=3D"color: #89DDFF;">::</span><span style=3D"color: #C792EA;">class</=
span><span style=3D"color: #BFC7D5;">,</span></div><div class=3D"line"><spa=
n style=3D"color: #BFC7D5;">    ],</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">],</span></div></code></pre><button id=3D"clipButto=
n-103" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" t=
itle=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-103"><svg cla=
ss=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D=
"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2=
H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 =
0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button>=
</div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>When using the <code>doctrine/dbal</code> package, the following column ty=
pes can be modified: <code>bigInteger</code>, <code>binary</code>, <code>bo=
olean</code>, <code>char</code>, <code>date</code>, <code>dateTime</code>, =
<code>dateTimeTz</code>, <code>decimal</code>, <code>double</code>, <code>i=
nteger</code>, <code>json</code>, <code>longText</code>, <code>mediumText</=
code>, <code>smallInteger</code>, <code>string</code>, <code>text</code>, <=
code>time</code>, <code>tinyText</code>, <code>unsignedBigInteger</code>, <=
code>unsignedInteger</code>, <code>unsignedSmallInteger</code>, <code>ulid<=
/code>, and <code>uuid</code>.</p></div>
</blockquote>
<p></p>
<h3 id=3D"renaming-columns"><a href=3D"https://laravel.com/docs/10.x/migrat=
ions#renaming-columns">Renaming Columns</a></h3>
<p>To rename a column, you may use the <code>renameColumn</code> method pro=
vided by the schema builder:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-104"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">renameColumn</span><span style=3D"color: #BFC=
7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color:=
 #C3E88D;">from</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">to</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span s=
tyle=3D"color: #BFC7D5;">});</span></div></code></pre><button id=3D"clipBut=
ton-104" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard"=
 title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-104"><svg c=
lass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p></p>
<h4 id=3D"renaming-columns-on-legacy-databases"><a href=3D"https://laravel.=
com/docs/10.x/migrations#renaming-columns-on-legacy-databases">Renaming Col=
umns On Legacy Databases</a></h4>
<p>If you are running a database installation older than one of the followi=
ng releases, you should ensure that you have installed the <code>doctrine/d=
bal</code> library via the Composer package manager before renaming a colum=
n:</p>
<div class=3D"content-list" markdown=3D"1">
<ul>
<li>MySQL &lt; <code>8.0.3</code>
</li>
<li>MariaDB &lt; <code>10.5.2</code>
</li>
<li>SQLite &lt; <code>3.25.0</code>
</li>
</ul>
</div>
<p></p>
<h3 id=3D"dropping-columns"><a href=3D"https://laravel.com/docs/10.x/migrat=
ions#dropping-columns">Dropping Columns</a></h3>
<p>To drop a column, you may use the <code>dropColumn</code> method on the =
schema builder:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-105"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">dropColumn</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #=
C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span style=3D=
"color: #BFC7D5;">);</span></div><div class=3D"line"><span style=3D"color: =
#BFC7D5;">});</span></div></code></pre><button id=3D"clipButton-105" class=
=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy=
 to Clipboard" data-clipboard-target=3D"#clipText-105"><svg class=3D"fill-c=
urrent h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" =
fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-=
1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 =
2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may drop multiple columns from a table by passing an array of column=
 names to the <code>dropColumn</code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-106"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">dropColumn</span><span style=3D"color: #BFC7D=
5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">votes</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">avatar</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #C3E88D;">location</span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">]);</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code></pr=
e><button id=3D"clipButton-106" class=3D"md:block hidden copyBtn" aria-labe=
l=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=
=3D"#clipText-106"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.=
w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 =
3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 0=
0-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3=
-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"dropping-columns-on-legacy-databases"><a href=3D"https://laravel.=
com/docs/10.x/migrations#dropping-columns-on-legacy-databases">Dropping Col=
umns On Legacy Databases</a></h4>
<p>If you are running a version of SQLite prior to <code>3.35.0</code>, you=
 must install the <code>doctrine/dbal</code> package via the Composer packa=
ge manager before the <code>dropColumn</code> method may be used. Dropping =
or modifying multiple columns within a single migration while using this pa=
ckage is not supported.</p>
<p></p>
<h4 id=3D"available-command-aliases"><a href=3D"https://laravel.com/docs/10=
.x/migrations#available-command-aliases">Available Command Aliases</a></h4>
<p>Laravel provides several convenient methods related to dropping common t=
ypes of columns. Each of these methods is described in the table below:</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$table-&gt;dropMorphs('morphable');</code></td>
<td>Drop the <code>morphable_id</code> and <code>morphable_type</code> colu=
mns.</td>
</tr>
<tr>
<td><code>$table-&gt;dropRememberToken();</code></td>
<td>Drop the <code>remember_token</code> column.</td>
</tr>
<tr>
<td><code>$table-&gt;dropSoftDeletes();</code></td>
<td>Drop the <code>deleted_at</code> column.</td>
</tr>
<tr>
<td><code>$table-&gt;dropSoftDeletesTz();</code></td>
<td>Alias of <code>dropSoftDeletes()</code> method.</td>
</tr>
<tr>
<td><code>$table-&gt;dropTimestamps();</code></td>
<td>Drop the <code>created_at</code> and <code>updated_at</code> columns.</=
td>
</tr>
<tr>
<td><code>$table-&gt;dropTimestampsTz();</code></td>
<td>Alias of <code>dropTimestamps()</code> method.</td>
</tr>
</tbody>
</table>
<p></p>
<h2 id=3D"indexes"><a href=3D"https://laravel.com/docs/10.x/migrations#inde=
xes">Indexes</a></h2>
<p></p>
<h3 id=3D"creating-indexes"><a href=3D"https://laravel.com/docs/10.x/migrat=
ions#creating-indexes">Creating Indexes</a></h3>
<p>The Laravel schema builder supports several types of indexes. The follow=
ing example creates a new <code>email</code> column and specifies that its =
values should be unique. To create the index, we can chain the <code>unique=
</code> method onto the column definition:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-107"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Database\Schema\</span><span style=3D"color: #FFCB8B;">Blueprint</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Schema</span><span s=
tyle=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #FFCB8B;">Schema</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">table</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">users</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #C=
792EA;">function</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #D9F5DD;">(</span><span style=3D"color: #FFCB8B;">Blueprint</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$=
table</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #=
BFC7D5;"> {</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;"=
>    </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"col=
or: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">string</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">email</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #89=
DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">unique</span><span style=
=3D"color: #BFC7D5;">();</span></div><div class=3D"line"><span style=3D"col=
or: #BFC7D5;">});</span></div></code></pre><button id=3D"clipButton-107" cl=
ass=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"C=
opy to Clipboard" data-clipboard-target=3D"#clipText-107"><svg class=3D"fil=
l-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 2=
0" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 =
01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5=
a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may create the index after defining the column. To do=
 so, you should call the <code>unique</code> method on the schema builder b=
lueprint. This method accepts the name of the column that should receive a =
unique index:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-108"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unique</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">email</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">);</span></div></code></pre><button id=3D"clipButton-1=
08" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" titl=
e=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-108"><svg class=
=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0=
 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9=
a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 =
002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></=
div>
<p>You may even pass an array of columns to an index method to create a com=
pound (or composite) index:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-109"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">index</span><span style=3D"color: #BFC7D=
5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">account_id</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><s=
pan style=3D"color: #C3E88D;">created_at</span><span style=3D"color: #D9F5D=
D;">'</span><span style=3D"color: #BFC7D5;">]);</span></div></code></pre><b=
utton id=3D"clipButton-109" class=3D"md:block hidden copyBtn" aria-label=3D=
"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#c=
lipText-109"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org=
/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 =
0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v=
11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"><=
/path></svg></button></div>
<p>When creating an index, Laravel will automatically generate an index nam=
e based on the table, column names, and the index type, but you may pass a =
second argument to the method to specify the index name yourself:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-110"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">unique</span><span style=3D"color: #BFC7=
D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: =
#C3E88D;">email</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #C3E88D;">unique_email</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><but=
ton id=3D"clipButton-110" class=3D"md:block hidden copyBtn" aria-label=3D"C=
opy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#cli=
pText-110"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2=
000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 =
011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11=
a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></p=
ath></svg></button></div>
<p></p>
<h4 id=3D"available-index-types"><a href=3D"https://laravel.com/docs/10.x/m=
igrations#available-index-types">Available Index Types</a></h4>
<p>Laravel's schema builder blueprint class provides methods for creating e=
ach type of index supported by Laravel. Each index method accepts an option=
al second argument to specify the name of the index. If omitted, the name w=
ill be derived from the names of the table and column(s) used for the index=
, as well as the index type. Each of the available index methods is describ=
ed in the table below:</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$table-&gt;primary('id');</code></td>
<td>Adds a primary key.</td>
</tr>
<tr>
<td><code>$table-&gt;primary(['id', 'parent_id']);</code></td>
<td>Adds composite keys.</td>
</tr>
<tr>
<td><code>$table-&gt;unique('email');</code></td>
<td>Adds a unique index.</td>
</tr>
<tr>
<td><code>$table-&gt;index('state');</code></td>
<td>Adds an index.</td>
</tr>
<tr>
<td><code>$table-&gt;fullText('body');</code></td>
<td>Adds a full text index (MySQL/PostgreSQL).</td>
</tr>
<tr>
<td><code>$table-&gt;fullText('body')-&gt;language('english');</code></td>
<td>Adds a full text index of the specified language (PostgreSQL).</td>
</tr>
<tr>
<td><code>$table-&gt;spatialIndex('location');</code></td>
<td>Adds a spatial index (except SQLite).</td>
</tr>
</tbody>
</table>
<p></p>
<h4 id=3D"index-lengths-mysql-mariadb"><a href=3D"https://laravel.com/docs/=
10.x/migrations#index-lengths-mysql-mariadb">Index Lengths &amp; MySQL / Ma=
riaDB</a></h4>
<p>By default, Laravel uses the <code>utf8mb4</code> character set. If you =
are running a version of MySQL older than the 5.7.7 release or MariaDB olde=
r than the 10.2.2 release, you may need to manually configure the default s=
tring length generated by migrations in order for MySQL to create indexes f=
or them. You may configure the default string length by calling the <code>S=
chema::defaultStringLength</code> method within the <code>boot</code> metho=
d of your <code>App\Providers\AppServiceProvider</code> class:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-111"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Schema</span><span s=
tyle=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #697098;">/**</span></div><div class=
=3D"line"><span style=3D"color: #697098;"> * Bootstrap any application serv=
ices.</span></div><div class=3D"line"><span style=3D"color: #697098;"> </sp=
an><span style=3D"color: #697098;">*/</span></div><div class=3D"line"><span=
 style=3D"color: #C792EA;">public</span><span style=3D"color: #BFC7D5;"> </=
span><span style=3D"color: #C792EA;">function</span><span style=3D"color: #=
BFC7D5;"> </span><span style=3D"color: #82AAFF;">boot</span><span style=3D"=
color: #D9F5DD;">()</span><span style=3D"color: #89DDFF;">:</span><span sty=
le=3D"color: #BFC7D5;"> </span><span style=3D"color: #C792EA;">void</span><=
/div><div class=3D"line"><span style=3D"color: #BFC7D5;">{</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span><span=
 style=3D"color: #82AAFF;">defaultStringLength</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #F78C6C;">191</span><span style=3D"=
color: #BFC7D5;">);</span></div><div class=3D"line"><span style=3D"color: #=
BFC7D5;">}</span></div></code></pre><button id=3D"clipButton-111" class=3D"=
md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to =
Clipboard" data-clipboard-target=3D"#clipText-111"><svg class=3D"fill-curre=
nt h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>Alternatively, you may enable the <code>innodb_large_prefix</code> optio=
n for your database. Refer to your database's documentation for instruction=
s on how to properly enable this option.</p>
<p></p>
<h3 id=3D"renaming-indexes"><a href=3D"https://laravel.com/docs/10.x/migrat=
ions#renaming-indexes">Renaming Indexes</a></h3>
<p>To rename an index, you may use the <code>renameIndex</code> method prov=
ided by the schema builder blueprint. This method accepts the current index=
 name as its first argument and the desired name as its second argument:</p=
>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-112"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">renameIndex</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">from</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #BFC7D5;">, </span><span style=3D"color: #D9F5DD;">'</span><sp=
an style=3D"color: #C3E88D;">to</span><span style=3D"color: #D9F5DD;">'</sp=
an><span style=3D"color: #BFC7D5;">)</span></div></code></pre><button id=3D=
"clipButton-112" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Cl=
ipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-112=
"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" =
viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1=
 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 00=
2 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg=
></button></div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>If your application is utilizing an SQLite database, you must install the =
<code>doctrine/dbal</code> package via the Composer package manager before =
the <code>renameIndex</code> method may be used.</p></div>
</blockquote>
<p></p>
<h3 id=3D"dropping-indexes"><a href=3D"https://laravel.com/docs/10.x/migrat=
ions#dropping-indexes">Dropping Indexes</a></h3>
<p>To drop an index, you must specify the index's name. By default, Laravel=
 automatically assigns an index name based on the table name, the name of t=
he indexed column, and the index type. Here are some examples:</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$table-&gt;dropPrimary('users_id_primary');</code></td>
<td>Drop a primary key from the "users" table.</td>
</tr>
<tr>
<td><code>$table-&gt;dropUnique('users_email_unique');</code></td>
<td>Drop a unique index from the "users" table.</td>
</tr>
<tr>
<td><code>$table-&gt;dropIndex('geo_state_index');</code></td>
<td>Drop a basic index from the "geo" table.</td>
</tr>
<tr>
<td><code>$table-&gt;dropFullText('posts_body_fulltext');</code></td>
<td>Drop a full text index from the "posts" table.</td>
</tr>
<tr>
<td><code>$table-&gt;dropSpatialIndex('geo_location_spatialindex');</code><=
/td>
<td>Drop a spatial index from the "geo" table  (except SQLite).</td>
</tr>
</tbody>
</table>
<p>If you pass an array of columns into a method that drops indexes, the co=
nventional index name will be generated based on the table name, columns, a=
nd index type:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-113"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">geo</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><span =
style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span><=
span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC7D=
5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"col=
or: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div c=
lass=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"col=
or: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><spa=
n style=3D"color: #82AAFF;">dropIndex</span><span style=3D"color: #BFC7D5;"=
>([</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3=
E88D;">state</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #BFC7D5;">]); </span><span style=3D"color: #697098;">//</span><span s=
tyle=3D"color: #697098;"> Drops index 'geo_state_index'</span></div><div cl=
ass=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></code></pre><=
button id=3D"clipButton-113" class=3D"md:block hidden copyBtn" aria-label=
=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D=
"#clipText-113"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.=
org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1=
 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2=
 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z=
"></path></svg></button></div>
<p></p>
<h3 id=3D"foreign-key-constraints"><a href=3D"https://laravel.com/docs/10.x=
/migrations#foreign-key-constraints">Foreign Key Constraints</a></h3>
<p>Laravel also provides support for creating foreign key constraints, whic=
h are used to force referential integrity at the database level. For exampl=
e, let's define a <code>user_id</code> column on the <code>posts</code> tab=
le that references the <code>id</code> column on a <code>users</code> table=
:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-114"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Database\Schema\</span><span style=3D"color: #FFCB8B;">Blueprint</span><spa=
n style=3D"color: #BFC7D5;">;</span></div><div class=3D"line"><span style=
=3D"color: #C792EA;">use</span><span style=3D"color: #BFC7D5;"> Illuminate\=
Support\Facades\</span><span style=3D"color: #FFCB8B;">Schema</span><span s=
tyle=3D"color: #BFC7D5;">;</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #FFCB8B;">Schema</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">table</span><spa=
n style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span=
><span style=3D"color: #C3E88D;">posts</span><span style=3D"color: #D9F5DD;=
">'</span><span style=3D"color: #BFC7D5;">, </span><span style=3D"color: #C=
792EA;">function</span><span style=3D"color: #BFC7D5;"> </span><span style=
=3D"color: #D9F5DD;">(</span><span style=3D"color: #FFCB8B;">Blueprint</spa=
n><span style=3D"color: #BFC7D5;"> </span><span style=3D"color: #BEC5D4;">$=
table</span><span style=3D"color: #D9F5DD;">)</span><span style=3D"color: #=
BFC7D5;"> {</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;"=
>    </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"col=
or: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">unsignedBigIntege=
r</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5=
DD;">'</span><span style=3D"color: #C3E88D;">user_id</span><span style=3D"c=
olor: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span></div><div=
 class=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #BFC7=
D5;">    </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D=
"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">foreign</span=
><span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'<=
/span><span style=3D"color: #C3E88D;">user_id</span><span style=3D"color: #=
D9F5DD;">'</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"col=
or: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">references</span>=
<span style=3D"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</=
span><span style=3D"color: #C3E88D;">id</span><span style=3D"color: #D9F5DD=
;">'</span><span style=3D"color: #BFC7D5;">)</span><span style=3D"color: #8=
9DDFF;">-&gt;</span><span style=3D"color: #82AAFF;">on</span><span style=3D=
"color: #BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span sty=
le=3D"color: #C3E88D;">users</span><span style=3D"color: #D9F5DD;">'</span>=
<span style=3D"color: #BFC7D5;">);</span></div><div class=3D"line"><span st=
yle=3D"color: #BFC7D5;">});</span></div></code></pre><button id=3D"clipButt=
on-114" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboard" =
title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-114"><svg cl=
ass=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 11=
0 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2=
 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></butt=
on></div>
<p>Since this syntax is rather verbose, Laravel provides additional, terser=
 methods that use conventions to provide a better developer experience. Whe=
n using the <code>foreignId</code> method to create your column, the exampl=
e above can be rewritten like so:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-115"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">posts</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">foreignId</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">constrained</span><span style=3D"color: #BFC7=
D5;">();</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">})=
;</span></div></code></pre><button id=3D"clipButton-115" class=3D"md:block =
hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard=
" data-clipboard-target=3D"#clipText-115"><svg class=3D"fill-current h-5 w-=
5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"curre=
ntColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path>=
<path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 =
3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>The <code>foreignId</code> method creates an <code>UNSIGNED BIGINT</code=
> equivalent column, while the <code>constrained</code> method will use con=
ventions to determine the table and column being referenced. If your table =
name does not match Laravel's conventions, you may manually provide it to t=
he <code>constrained</code> method. In addition, the name that should be as=
signed to the generated index may be specified as well:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-116"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">table</span><span style=3D"color: #BFC7D5;"=
>(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E=
88D;">posts</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #BFC7D5;">, </span><span style=3D"color: #C792EA;">function</span><spa=
n style=3D"color: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">(</span=
><span style=3D"color: #FFCB8B;">Blueprint</span><span style=3D"color: #BFC=
7D5;"> </span><span style=3D"color: #BEC5D4;">$table</span><span style=3D"c=
olor: #D9F5DD;">)</span><span style=3D"color: #BFC7D5;"> {</span></div><div=
 class=3D"line"><span style=3D"color: #BFC7D5;">    </span><span style=3D"c=
olor: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">foreignId</span><span style=3D"color: #BFC7D5=
;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #C=
3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span style=
=3D"color: #BFC7D5;">)</span><span style=3D"color: #89DDFF;">-&gt;</span><s=
pan style=3D"color: #82AAFF;">constrained</span><span style=3D"color: #BFC7=
D5;">(</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    =
    table: </span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">users</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">, indexName: </span><span style=3D"color: #D9F5DD;"=
>'</span><span style=3D"color: #C3E88D;">posts_user_id</span><span style=3D=
"color: #D9F5DD;">'</span></div><div class=3D"line"><span style=3D"color: #=
BFC7D5;">    );</span></div><div class=3D"line"><span style=3D"color: #BFC7=
D5;">});</span></div></code></pre><button id=3D"clipButton-116" class=3D"md=
:block hidden copyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Cl=
ipboard" data-clipboard-target=3D"#clipText-116"><svg class=3D"fill-current=
 h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=
=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z=
"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 =
00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>You may also specify the desired action for the "on delete" and "on upda=
te" properties of the constraint:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-117"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">foreignId</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">)</span></div><div class=3D"line"><span style=3D"co=
lor: #BFC7D5;">      </span><span style=3D"color: #89DDFF;">-&gt;</span><sp=
an style=3D"color: #82AAFF;">constrained</span><span style=3D"color: #BFC7D=
5;">()</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">    =
  </span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: =
#82AAFF;">onUpdate</span><span style=3D"color: #BFC7D5;">(</span><span styl=
e=3D"color: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">cascade</span=
><span style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">)<=
/span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">      </spa=
n><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82AAFF=
;">onDelete</span><span style=3D"color: #BFC7D5;">(</span><span style=3D"co=
lor: #D9F5DD;">'</span><span style=3D"color: #C3E88D;">cascade</span><span =
style=3D"color: #D9F5DD;">'</span><span style=3D"color: #BFC7D5;">);</span>=
</div></code></pre><button id=3D"clipButton-117" class=3D"md:block hidden c=
opyBtn" aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-c=
lipboard-target=3D"#clipText-117"><svg class=3D"fill-current h-5 w-5" xmlns=
=3D"http://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"=
><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=
=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-=
3 3H9a3 3 0 01-3-3z"></path></svg></button></div>
<p>An alternative, expressive syntax is also provided for these actions:</p=
>
<table>
<thead>
<tr>
<th>Method</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$table-&gt;cascadeOnUpdate();</code></td>
<td>Updates should cascade.</td>
</tr>
<tr>
<td><code>$table-&gt;restrictOnUpdate();</code></td>
<td>Updates should be restricted.</td>
</tr>
<tr>
<td><code>$table-&gt;cascadeOnDelete();</code></td>
<td>Deletes should cascade.</td>
</tr>
<tr>
<td><code>$table-&gt;restrictOnDelete();</code></td>
<td>Deletes should be restricted.</td>
</tr>
<tr>
<td><code>$table-&gt;nullOnDelete();</code></td>
<td>Deletes should set the foreign key value to null.</td>
</tr>
</tbody>
</table>
<p>Any additional <a href=3D"https://laravel.com/docs/10.x/migrations#colum=
n-modifiers">column modifiers</a> must be called before the <code>constrain=
ed</code> method:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-118"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">foreignId</span><span style=3D"color: #B=
FC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"colo=
r: #C3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span st=
yle=3D"color: #BFC7D5;">)</span></div><div class=3D"line"><span style=3D"co=
lor: #BFC7D5;">      </span><span style=3D"color: #89DDFF;">-&gt;</span><sp=
an style=3D"color: #82AAFF;">nullable</span><span style=3D"color: #BFC7D5;"=
>()</span></div><div class=3D"line"><span style=3D"color: #BFC7D5;">      <=
/span><span style=3D"color: #89DDFF;">-&gt;</span><span style=3D"color: #82=
AAFF;">constrained</span><span style=3D"color: #BFC7D5;">();</span></div></=
code></pre><button id=3D"clipButton-118" class=3D"md:block hidden copyBtn" =
aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard=
-target=3D"#clipText-118"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http=
://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<p></p>
<h4 id=3D"dropping-foreign-keys"><a href=3D"https://laravel.com/docs/10.x/m=
igrations#dropping-foreign-keys">Dropping Foreign Keys</a></h4>
<p>To drop a foreign key, you may use the <code>dropForeign</code> method, =
passing the name of the foreign key constraint to be deleted as an argument=
. Foreign key constraints use the same naming convention as indexes. In oth=
er words, the foreign key constraint name is based on the name of the table=
 and the columns in the constraint, followed by a "_foreign" suffix:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-119"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">dropForeign</span><span style=3D"color: =
#BFC7D5;">(</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"co=
lor: #C3E88D;">posts_user_id_foreign</span><span style=3D"color: #D9F5DD;">=
'</span><span style=3D"color: #BFC7D5;">);</span></div></code></pre><button=
 id=3D"clipButton-119" class=3D"md:block hidden copyBtn" aria-label=3D"Copy=
 to Clipboard" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipTe=
xt-119"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000=
/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011=
-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 =
2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path=
></svg></button></div>
<p>Alternatively, you may pass an array containing the column name that hol=
ds the foreign key to the <code>dropForeign</code> method. The array will b=
e converted to a foreign key constraint name using Laravel's constraint nam=
ing conventions:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-120"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #BEC5D4;">$table</span><span style=3D"color: #89DDFF;">-&gt;</sp=
an><span style=3D"color: #82AAFF;">dropForeign</span><span style=3D"color: =
#BFC7D5;">([</span><span style=3D"color: #D9F5DD;">'</span><span style=3D"c=
olor: #C3E88D;">user_id</span><span style=3D"color: #D9F5DD;">'</span><span=
 style=3D"color: #BFC7D5;">]);</span></div></code></pre><button id=3D"clipB=
utton-120" class=3D"md:block hidden copyBtn" aria-label=3D"Copy to Clipboar=
d" title=3D"Copy to Clipboard" data-clipboard-target=3D"#clipText-120"><svg=
 class=3D"fill-current h-5 w-5" xmlns=3D"http://www.w3.org/2000/svg" viewBo=
x=3D"0 0 20 20" fill=3D"currentColor"><path d=3D"M8 3a1 1 0 011-1h2a1 1 0 1=
10 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a=
2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z"></path></svg></but=
ton></div>
<p></p>
<h4 id=3D"toggling-foreign-key-constraints"><a href=3D"https://laravel.com/=
docs/10.x/migrations#toggling-foreign-key-constraints">Toggling Foreign Key=
 Constraints</a></h4>
<p>You may enable or disable foreign key constraints within your migrations=
 by using the following methods:</p>
<div class=3D"relative code-block-wrapper"><pre><code data-theme=3D"olaolu-=
palenight" data-lang=3D"php" class=3D"torchlight" style=3D"background-color=
: #292D3E; --theme-selection-background: #7580B850;" id=3D"clipText-121"><!=
-- Syntax highlighted by torchlight.dev --><div class=3D"line"><span style=
=3D"color: #FFCB8B;">Schema</span><span style=3D"color: #89DDFF;">::</span>=
<span style=3D"color: #82AAFF;">enableForeignKeyConstraints</span><span sty=
le=3D"color: #BFC7D5;">();</span></div><div class=3D"line">&nbsp;</div><div=
 class=3D"line"><span style=3D"color: #FFCB8B;">Schema</span><span style=3D=
"color: #89DDFF;">::</span><span style=3D"color: #82AAFF;">disableForeignKe=
yConstraints</span><span style=3D"color: #BFC7D5;">();</span></div><div cla=
ss=3D"line">&nbsp;</div><div class=3D"line"><span style=3D"color: #FFCB8B;"=
>Schema</span><span style=3D"color: #89DDFF;">::</span><span style=3D"color=
: #82AAFF;">withoutForeignKeyConstraints</span><span style=3D"color: #BFC7D=
5;">(</span><span style=3D"color: #C792EA;">function</span><span style=3D"c=
olor: #BFC7D5;"> </span><span style=3D"color: #D9F5DD;">()</span><span styl=
e=3D"color: #BFC7D5;"> {</span></div><div class=3D"line"><span style=3D"col=
or: #BFC7D5;">    </span><span style=3D"color: #697098;">//</span><span sty=
le=3D"color: #697098;"> Constraints disabled within this closure...</span><=
/div><div class=3D"line"><span style=3D"color: #BFC7D5;">});</span></div></=
code></pre><button id=3D"clipButton-121" class=3D"md:block hidden copyBtn" =
aria-label=3D"Copy to Clipboard" title=3D"Copy to Clipboard" data-clipboard=
-target=3D"#clipText-121"><svg class=3D"fill-current h-5 w-5" xmlns=3D"http=
://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor"><path d=
=3D"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"></path><path d=3D"M6 3a=
2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3=
 0 01-3-3z"></path></svg></button></div>
<blockquote>
<div class=3D"mb-10 max-w-2xl mx-auto px-4 py-8 shadow-lg lg:flex lg:items-=
center callout"><div class=3D"w-20 h-20 mb-6 flex items-center justify-cent=
er shrink-0 bg-red-600 lg:mb-0"><img src=3D"https://laravel.com/img/callout=
s/exclamation.min.svg" class=3D"opacity-75"></div><p class=3D"mb-0 lg:ml-6"=
>SQLite disables foreign key constraints by default. When using SQLite, mak=
e sure to <a href=3D"https://laravel.com/docs/10.x/database#configuration">=
enable foreign key support</a> in your database configuration before attemp=
ting to create them in your migrations. In addition, SQLite only supports f=
oreign keys upon creation of the table and <a href=3D"https://www.sqlite.or=
g/omitted.html">not when tables are altered</a>.</p></div>
</blockquote>
<p></p>
<h2 id=3D"events"><a href=3D"https://laravel.com/docs/10.x/migrations#event=
s">Events</a></h2>
<p>For convenience, each migration operation will dispatch an <a href=3D"ht=
tps://laravel.com/docs/10.x/events">event</a>. All of the following events =
extend the base <code>Illuminate\Database\Events\MigrationEvent</code> clas=
s:</p>
<table>
<thead>
<tr>
<th>Class</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Illuminate\Database\Events\MigrationsStarted</code></td>
<td>A batch of migrations is about to be executed.</td>
</tr>
<tr>
<td><code>Illuminate\Database\Events\MigrationsEnded</code></td>
<td>A batch of migrations has finished executing.</td>
</tr>
<tr>
<td><code>Illuminate\Database\Events\MigrationStarted</code></td>
<td>A single migration is about to be executed.</td>
</tr>
<tr>
<td><code>Illuminate\Database\Events\MigrationEnded</code></td>
<td>A single migration has finished executing.</td>
</tr>
<tr>
<td><code>Illuminate\Database\Events\SchemaDumped</code></td>
<td>A database schema dump has completed.</td>
</tr>
<tr>
<td><code>Illuminate\Database\Events\SchemaLoaded</code></td>
<td>An existing database schema dump has loaded.</td>
</tr>
</tbody>
</table>

                               =20
</div>
                        </section>
                    </section>
                </div>
            </section>
        </div>
    </div>











</body></html>
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-ead0727d-a2ab-4dd2-9312-839f3fad7b84@mhtml.blink

@charset "utf-8";

.collection-method-list > p { columns: 10.8em 3; }

.collection-method-list a { display: block; overflow: hidden; text-overflow=
: ellipsis; white-space: nowrap; }

.collection-method code { font-size: 14px; }

.collection-method:not(.first-collection-method) { margin-top: 50px; }
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://use.typekit.net/ins2wgm.css

@charset "utf-8";

@import url("https://p.typekit.net/p.css?s=3D1&k=3Dins2wgm&ht=3Dtk&f=3D1745=
4.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3D3993700&app=3Dt=
ypekit&e=3Dcss");

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/398a64/00000000000000007735dc06/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/398a64/00000000000000007735dc06/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/398a64/0000000000=
0000007735dc06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto;=
 font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/b0fedd/00000000000000007735dc01/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/b0fedd/00000000000000007735dc01/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/b0fedd/0000000000=
0000007735dc01/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto;=
 font-style: italic; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/9c393a/00000000000000007735db08/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/9c393a/00000000000000007735db08/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n7&v=3D3") format("woff"), url("https://use.typekit.net/af/9c393a/000000000=
00000007735db08/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/47cb70/00000000000000007735db06/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/47cb70/00000000000000007735db06/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n5&v=3D3") format("woff"), url("https://use.typekit.net/af/47cb70/000000000=
00000007735db06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-line-web; src: url("https://use.typekit.n=
et/af/3cdb9c/00000000000000007735db09/30/l?primer=3D7cdcb44be4a7db8877ffa5c=
0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"),=
 url("https://use.typekit.net/af/3cdb9c/00000000000000007735db09/30/d?prime=
r=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3D=
n4&v=3D3") format("woff"), url("https://use.typekit.net/af/3cdb9c/000000000=
00000007735db09/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831=
fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto=
; font-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/716155/00000000000000007735dd24/30/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/716155/00000000000000007735dd24/30/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=
=3D3") format("woff"), url("https://use.typekit.net/af/716155/0000000000000=
0007735dd24/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 700; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/7e0390/0000000000000000000158e4/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/7e0390/0000000000000000000158e4/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/7e0390/0000000000000=
000000158e4/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/4cf72c/0000000000000000000158e6/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/4cf72c/0000000000000000000158e6/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di5&v=
=3D3") format("woff"), url("https://use.typekit.net/af/4cf72c/0000000000000=
000000158e6/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di5&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 500; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/e3f590/0000000000000000000158e7/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/e3f590/0000000000000000000158e7/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/e3f590/0000000000000=
000000158e7/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: normal; font-weight: 400; font-stretch: normal; }

@font-face { font-family: scandia-web; src: url("https://use.typekit.net/af=
/396f3b/0000000000000000000158e8/27/l?primer=3D7cdcb44be4a7db8877ffa5c0007b=
8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), url(=
"https://use.typekit.net/af/396f3b/0000000000000000000158e8/27/d?primer=3D7=
cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=
=3D3") format("woff"), url("https://use.typekit.net/af/396f3b/0000000000000=
000000158e8/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2e=
a177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-display: auto; fo=
nt-style: italic; font-weight: 400; font-stretch: normal; }

.tk-source-code-pro { font-family: source-code-pro, monospace; }

.tk-scandia-line-web { font-family: scandia-line-web, sans-serif; }

.tk-scandia-web { font-family: scandia-web, sans-serif; }
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://p.typekit.net/p.css?s=1&k=ins2wgm&ht=tk&f=17454.25777.24735.24740.24741.24737.24744.24746.24747.24748&a=3993700&app=typekit&e=css

@charset "utf-8";
=0A
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/build/assets/app-8aa4d27a.css

@charset "utf-8";

*, ::before, ::after { box-sizing: border-box; border-width: 0px; border-st=
yle: solid; border-color: rgb(231, 232, 242); }

::before, ::after { --tw-content: ""; }

html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-family: =
scandia-web, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-feature-settings: normal; font-variation-settings: normal; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, samp, pre { font-family: source-code-pro, ui-monospace, SFMono-R=
egular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospac=
e; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; font-weight: inherit; line-height: inherit; color: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

button, [type=3D"button"], [type=3D"reset"], [type=3D"submit"] { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; padding: 0px; }

legend { padding: 0px; }

ol, ul, menu { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(181, 181=
, 189); }

button, [role=3D"button"] { cursor: pointer; }

:disabled { cursor: default; }

img, svg, video, canvas, audio, iframe, embed, object { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

[hidden] { display: none; }

*, ::before, ::after { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: =
; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-=
numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ri=
ng-offset-color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-off=
set-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000;=
 --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contr=
ast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ;=
 --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brig=
htness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdro=
p-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backd=
rop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-ordinal: ; --tw-sla=
shed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fr=
action: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-=
color: #fff; --tw-ring-color: rgb(10 178 245 / .5); --tw-ring-offset-shadow=
: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 #0000; --tw-shad=
ow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --t=
w-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepi=
a: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; =
--tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rota=
te: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-satura=
te: ; --tw-backdrop-sepia: ; }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.docs_main h1, .docs_main h2, .docs_main h3, .docs_main h4, .docs_main h5, =
.docs_main h6 { font-weight: 500; margin-bottom: 0.75em; }

.docs_main h2, .docs_main h3 { margin-top: 2em; }

.docs_main h4 { margin-top: 1.5em; }

.docs_main h1 { font-size: 2em; letter-spacing: -1px; line-height: 1.125em;=
 margin-bottom: 0.65em; }

@media (min-width: 768px) {
  .docs_main h1 { font-size: 2.5em; }
}

@media (min-width: 1024px) {
  .docs_main h1 { font-size: 3em; }
}

@media (min-width: 1280px) {
  .docs_main h1 { font-size: 3.5em; }
}

@media (min-width: 1536px) {
  .docs_main h1 { font-size: 4em; }
}

.docs_main h2 { font-size: 1.75em; font-weight: 400; letter-spacing: -0.5px=
; line-height: 1.125em; }

@media (min-width: 768px) {
  .docs_main h2 { font-size: 2.25em; }
}

@media (min-width: 1024px) {
  .docs_main h2 { font-size: 3em; }
}

.docs_main h3 { font-size: 1.25em; font-weight: 500; line-height: 1.25em; l=
etter-spacing: -0.33px; }

@media (min-width: 640px) {
  .docs_main h3 { font-size: 1.75em; }
}

@media (min-width: 768px) {
  .docs_main h3 { font-size: 2em; }
}

.docs_main h4 { font-size: 1em; font-weight: 400; letter-spacing: -0.25px; =
}

@media (min-width: 640px) {
  .docs_main h4 { font-size: 1.5em; }
}

.docs_main h5 { font-size: 0.95em; font-weight: 700; line-height: 1.666em; =
color: rgb(86, 84, 84); }

@media (min-width: 640px) {
  .docs_main h5 { font-size: 1.125em; }
}

.docs_main h6 { font-size: 0.875em; font-weight: 500; color: rgb(119, 119, =
119); }

.docs_main a { position: relative; text-decoration: none; transition: all 0=
.3s ease 0s; }

.docs_main a.learn_more { color: rgb(235, 68, 50); font-weight: 500; }

.docs_main a.learn_more span { display: inline-block; transition: transform=
 0.3s ease 0s; }

.docs_main a.learn_more:hover span { transform: translate(0.5em); }

.docs_main p { font-size: 1em; line-height: 1.666em; color: rgb(86, 84, 84)=
; }

.docs_main p strong { font-weight: 500; }

.docs_main p.small { font-size: 0.75em; line-height: 1.714em; }

@media (min-width: 768px) {
  .docs_main p { font-size: 1.125em; }
  .docs_main p.small { font-size: 0.875em; }
}

.docs_main p + pre { margin-top: 0px; }

.docs_main p, .docs_main ul, .docs_main ol, .docs_main pre { margin-bottom:=
 1.5em; }

.docs_main p a, .docs_main ul a, .docs_main ol a, .docs_main pre a { color:=
 rgb(235, 68, 50); text-decoration: underline; word-break: break-word; }

.docs_main p a:hover, .docs_main ul a:hover, .docs_main ol a:hover, .docs_m=
ain pre a:hover { }

.docs_main q, .docs_main blockquote p { quotes: "=E2=80=9C" "=E2=80=9D" "=
=E2=80=98" "=E2=80=99"; }

@media (min-width: 640px) {
  .docs_main blockquote { margin-left: 0px; margin-right: 0px; }
}

.docs_main span.small_text { display: block; font-size: 0.625em; line-heigh=
t: 1.4em; color: rgb(86, 84, 84); }

.docs_main span.label, .docs_main label { display: block; font-size: 0.625e=
m; line-height: 1.4em; text-transform: uppercase; opacity: 0.4; margin-bott=
om: 0.875em; letter-spacing: 2.5px; }

.docs_main code { font-size: 0.875em; font-family: source-code-pro, ui-mono=
space, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier=
 New", monospace; line-height: 1.714em; color: rgb(35, 35, 35); }

.docs_main :not(pre) > code { background: rgb(251, 251, 253); color: rgb(20=
2, 71, 63); padding: 0px 0.25em; }

.list-custom li { position: relative; padding-left: 1rem; }

.list-custom li::before { content: ""; position: absolute; top: 0.15em; lef=
t: 0px; width: 9px; height: 10px; background: url("/img/icons/ul_marker.min=
.svg") 50% center / contain no-repeat; }

:not(pre) > code { color: rgb(35, 35, 35); background: none; text-align: le=
ft; white-space: pre; word-spacing: normal; word-break: normal; overflow-wr=
ap: normal; tab-size: 4; hyphens: none; }

.docs_main :not(pre) > code { display: inline-flex; padding: 0px 0.125rem; =
border-radius: 0.125rem; max-width: 100%; overflow-x: auto; vertical-align:=
 middle; }

:is(.dark .docs_main :not(pre) > code) { --tw-bg-opacity: 1; background-col=
or: rgb(37 42 55 / var(--tw-bg-opacity)); --tw-text-opacity: 1; color: rgb(=
235 68 50 / var(--tw-text-opacity)); }

pre { margin-top: 1rem; margin-bottom: 1rem; overflow-x: auto; tab-size: 4;=
 white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap:=
 normal; box-shadow: rgba(0, 0, 0, 0.08) 0px 1px 1px; position: relative; b=
order-radius: 0.5rem; --tw-bg-opacity: 1; background-color: rgb(37 42 55 / =
var(--tw-bg-opacity)); }

.code-block-wrapper .copyBtn { position: absolute; right: 0.5rem; top: 0.5r=
em; --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-text-opacity));=
 opacity: 0.25; outline: transparent solid 2px; outline-offset: 2px; }

.code-block-wrapper .copyBtn:hover { --tw-text-opacity: 1; color: rgb(147 1=
47 158 / var(--tw-text-opacity)); opacity: 1; }

pre .copyBtn:hover, pre .copyBtn:focus, pre .copyBtn:active { --tw-text-opa=
city: 1; color: rgb(255 255 255 / var(--tw-text-opacity)); outline: transpa=
rent solid 2px; outline-offset: 2px; }

pre code.torchlight { display: block; min-width: max-content; padding-top: =
1rem; padding-bottom: 1rem; --tw-bg-opacity: 1 !important; background-color=
: rgb(37 42 55 / var(--tw-bg-opacity)) !important; }

pre code.torchlight .line { padding-left: 1rem; padding-right: 1rem; }

pre code.torchlight .line-number { padding-right: 1rem; }

.docs_sidebar ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_sidebar ul li { display: block; padding: 0.65em 0px; white-space: now=
rap; }

.docs_sidebar ul li h2 { display: block; font-size: 0.875em; font-weight: 5=
00; color: rgb(35, 35, 35); text-decoration: none; margin-bottom: 0px; curs=
or: pointer; transition: all 0.3s ease 0s; }

.docs_sidebar ul li h2:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul li a { display: block; font-size: 0.875em; font-weight: 50=
0; color: rgb(35, 35, 35); text-decoration: none; transition: transform 0.3=
s ease 0s; }

.docs_sidebar ul li a:hover { transform: translate3d(5px, 0px, 0px); }

.docs_sidebar ul ul { overflow: hidden; max-height: 0px; transition: max-he=
ight 0.45s ease 0s; }

.docs_sidebar ul ul li a { position: relative; padding-left: 1em; font-weig=
ht: 400; line-height: 1.25; }

.docs_sidebar ul ul li.active a::before { content: ""; position: absolute; =
top: 0.25em; left: 0px; width: 0.5rem; height: 0.5rem; background: url("/im=
g/icons/active_marker.min.svg") center center no-repeat; }

.docs_sidebar ul .sub--on > h2 { margin-bottom: 1em; }

.docs_sidebar ul .sub--on ul { max-height: none; }

:root { --docsearch-primary-color: #5468ff; --docsearch-text-color: #1c1e21=
; --docsearch-spacing: 12px; --docsearch-icon-stroke-width: 1.4; --docsearc=
h-highlight-color: var(--docsearch-primary-color); --docsearch-muted-color:=
 #969faf; --docsearch-container-background: rgba(101,108,133,.8); --docsear=
ch-logo-color: #5468ff; --docsearch-modal-width: 560px; --docsearch-modal-h=
eight: 600px; --docsearch-modal-background: #f5f6f7; --docsearch-modal-shad=
ow: inset 1px 1px 0 0 hsla(0,0%,100%,.5),0 3px 8px 0 #555a64; --docsearch-s=
earchbox-height: 56px; --docsearch-searchbox-background: #ebedf0; --docsear=
ch-searchbox-focus-background: #fff; --docsearch-searchbox-shadow: inset 0 =
0 0 2px var(--docsearch-primary-color); --docsearch-hit-height: 56px; --doc=
search-hit-color: #444950; --docsearch-hit-active-color: #fff; --docsearch-=
hit-background: #fff; --docsearch-hit-shadow: 0 1px 3px 0 #d4d9e1; --docsea=
rch-key-gradient: linear-gradient(-225deg,#d5dbe4,#f8f8f8); --docsearch-key=
-shadow: inset 0 -2px 0 0 #cdcde6,inset 0 0 1px 1px #fff,0 1px 2px 1px rgba=
(30,35,90,.4); --docsearch-footer-height: 44px; --docsearch-footer-backgrou=
nd: #fff; --docsearch-footer-shadow: 0 -1px 0 0 #e0e3e8,0 -3px 6px 0 rgba(6=
9,98,155,.12); }

html[data-theme=3D"dark"] { --docsearch-text-color: #f5f6f7; --docsearch-co=
ntainer-background: rgba(9,10,17,.8); --docsearch-modal-background: #15172a=
; --docsearch-modal-shadow: inset 1px 1px 0 0 #2c2e40,0 3px 8px 0 #000309; =
--docsearch-searchbox-background: #090a11; --docsearch-searchbox-focus-back=
ground: #000; --docsearch-hit-color: #bec3c9; --docsearch-hit-shadow: none;=
 --docsearch-hit-background: #090a11; --docsearch-key-gradient: linear-grad=
ient(-26.5deg,#565872,#31355b); --docsearch-key-shadow: inset 0 -2px 0 0 #2=
82d55,inset 0 0 1px 1px #51577d,0 2px 2px 0 rgba(3,4,9,.3); --docsearch-foo=
ter-background: #1e2136; --docsearch-footer-shadow: inset 0 1px 0 0 rgba(73=
,76,106,.5),0 -4px 8px 0 rgba(0,0,0,.2); --docsearch-logo-color: #fff; --do=
csearch-muted-color: #7f8497; }

.DocSearch--active { overflow: hidden !important; }

.DocSearch-Container, .DocSearch-Container * { box-sizing: border-box; }

.DocSearch-Container { background-color: var(--docsearch-container-backgrou=
nd); height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw; z-i=
ndex: 200; }

.DocSearch-Container a { text-decoration: none; }

.DocSearch-Link { appearance: none; background: none; border: 0px; color: v=
ar(--docsearch-highlight-color); cursor: pointer; font: inherit; margin: 0p=
x; padding: 0px; }

.DocSearch-Modal { background: var(--docsearch-modal-background); border-ra=
dius: 6px; box-shadow: var(--docsearch-modal-shadow); flex-direction: colum=
n; margin: 60px auto auto; max-width: var(--docsearch-modal-width); positio=
n: relative; }

.DocSearch-SearchBar { display: flex; padding: var(--docsearch-spacing) var=
(--docsearch-spacing) 0; }

.DocSearch-Form { align-items: center; background: var(--docsearch-searchbo=
x-focus-background); border-radius: 4px; box-shadow: var(--docsearch-search=
box-shadow); display: flex; height: var(--docsearch-searchbox-height); marg=
in: 0px; padding: 0 var(--docsearch-spacing); position: relative; width: 10=
0%; }

.DocSearch-Input { appearance: none; background: transparent; border: 0px; =
color: var(--docsearch-text-color); flex: 1 1 0%; font-style: inherit; font=
-variant: inherit; font-weight: inherit; font-stretch: inherit; line-height=
: inherit; font-family: inherit; font-optical-sizing: inherit; font-kerning=
: inherit; font-feature-settings: inherit; font-variation-settings: inherit=
; font-size: 1.2em; height: 100%; outline: none; padding: 0px 0px 0px 8px; =
width: 80%; }

.DocSearch-Input::placeholder { color: var(--docsearch-muted-color); opacit=
y: 1; }

.DocSearch-Input::-webkit-search-cancel-button, .DocSearch-Input::-webkit-s=
earch-decoration, .DocSearch-Input::-webkit-search-results-button, .DocSear=
ch-Input::-webkit-search-results-decoration { display: none; }

.DocSearch-LoadingIndicator, .DocSearch-MagnifierLabel, .DocSearch-Reset { =
margin: 0px; padding: 0px; }

.DocSearch-MagnifierLabel, .DocSearch-Reset { align-items: center; color: v=
ar(--docsearch-highlight-color); display: flex; justify-content: center; }

.DocSearch-Container--Stalled .DocSearch-MagnifierLabel, .DocSearch-Loading=
Indicator { display: none; }

.DocSearch-Container--Stalled .DocSearch-LoadingIndicator { align-items: ce=
nter; color: var(--docsearch-highlight-color); display: flex; justify-conte=
nt: center; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Reset { animation: auto ease 0s 1 normal none running none; ap=
pearance: none; background: none; border: 0px; border-radius: 50%; color: v=
ar(--docsearch-icon-color); cursor: pointer; right: 0px; stroke-width: var(=
--docsearch-icon-stroke-width); }
}

.DocSearch-Reset { animation: 0.1s ease-in 0s 1 normal forwards running fad=
e-in; appearance: none; background: none; border: 0px; border-radius: 50%; =
color: var(--docsearch-icon-color); cursor: pointer; padding: 2px; right: 0=
px; stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Reset[hidden] { display: none; }

.DocSearch-Reset:hover { color: var(--docsearch-highlight-color); }

.DocSearch-LoadingIndicator svg, .DocSearch-MagnifierLabel svg { height: 24=
px; width: 24px; }

.DocSearch-Cancel { display: none; }

.DocSearch-Dropdown { max-height: calc(var(--docsearch-modal-height) - var(=
--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch-=
footer-height)); min-height: var(--docsearch-spacing); overflow-y: overlay;=
 padding: 0 var(--docsearch-spacing); }

.DocSearch-Dropdown::-webkit-scrollbar { width: 12px; }

.DocSearch-Dropdown::-webkit-scrollbar-track { background: transparent; }

.DocSearch-Dropdown::-webkit-scrollbar-thumb { background-color: var(--docs=
earch-muted-color); border: 3px solid var(--docsearch-modal-background); bo=
rder-radius: 20px; }

.DocSearch-Dropdown ul { list-style: none; margin: 0px; padding: 0px; }

.DocSearch-Label { font-size: 0.75em; line-height: 1.6em; }

.DocSearch-Help, .DocSearch-Label { color: var(--docsearch-muted-color); }

.DocSearch-Help { font-size: 0.9em; margin: 0px; user-select: none; }

.DocSearch-Title { font-size: 1.2em; }

.DocSearch-Logo a { display: flex; }

.DocSearch-Logo svg { color: var(--docsearch-logo-color); margin-left: 8px;=
 }

.DocSearch-Hits:last-of-type { margin-bottom: 24px; }

.DocSearch-Hits mark { background: none; color: var(--docsearch-highlight-c=
olor); }

.DocSearch-HitsFooter { color: var(--docsearch-muted-color); display: flex;=
 font-size: 0.85em; justify-content: center; margin-bottom: var(--docsearch=
-spacing); padding: var(--docsearch-spacing); }

.DocSearch-HitsFooter a { border-bottom: 1px solid; color: inherit; }

.DocSearch-Hit { border-radius: 4px; display: flex; padding-bottom: 4px; po=
sition: relative; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--deleting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--deleting { opacity: 0; transition: all 0.25s linear 0s; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit--favoriting { transition: none 0s ease 0s; }
}

.DocSearch-Hit--favoriting { transform: scale(0); transform-origin: center =
top; transition: all 0.25s linear 0.25s; }

.DocSearch-Hit a { background: var(--docsearch-hit-background); border-radi=
us: 4px; box-shadow: var(--docsearch-hit-shadow); display: block; padding-l=
eft: var(--docsearch-spacing); width: 100%; }

.DocSearch-Hit-source { background: var(--docsearch-modal-background); colo=
r: var(--docsearch-highlight-color); font-size: 0.85em; font-weight: 600; l=
ine-height: 32px; margin: 0px -4px; padding: 8px 4px 0px; position: sticky;=
 top: 0px; z-index: 10; }

.DocSearch-Hit-Tree { color: var(--docsearch-muted-color); height: var(--do=
csearch-hit-height); opacity: 0.5; stroke-width: var(--docsearch-icon-strok=
e-width); width: 24px; }

.DocSearch-Hit[aria-selected=3D"true"] a { background-color: var(--docsearc=
h-highlight-color); }

.DocSearch-Hit[aria-selected=3D"true"] mark { text-decoration: underline; }

.DocSearch-Hit-Container { align-items: center; color: var(--docsearch-hit-=
color); display: flex; flex-direction: row; height: var(--docsearch-hit-hei=
ght); padding: 0 var(--docsearch-spacing) 0 0; }

.DocSearch-Hit-icon { height: 20px; width: 20px; }

.DocSearch-Hit-action, .DocSearch-Hit-icon { color: var(--docsearch-muted-c=
olor); stroke-width: var(--docsearch-icon-stroke-width); }

.DocSearch-Hit-action { align-items: center; display: flex; height: 22px; w=
idth: 22px; }

.DocSearch-Hit-action svg { display: block; height: 18px; width: 18px; }

.DocSearch-Hit-action + .DocSearch-Hit-action { margin-left: 6px; }

.DocSearch-Hit-action-button { appearance: none; background: none; border: =
0px; border-radius: 50%; color: inherit; cursor: pointer; padding: 2px; }

svg.DocSearch-Hit-Select-Icon { display: none; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Select-Icon { display=
: block; }

.DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { ba=
ckground: rgba(0, 0, 0, 0.2); transition: background-color 0.1s ease-in 0s;=
 }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
transition: none 0s ease 0s; }
}

.DocSearch-Hit-action-button:focus path, .DocSearch-Hit-action-button:hover=
 path { fill: rgb(255, 255, 255); }

.DocSearch-Hit-content-wrapper { display: flex; flex: 1 1 auto; flex-direct=
ion: column; font-weight: 500; justify-content: center; line-height: 1.2em;=
 margin: 0px 8px; overflow-x: hidden; position: relative; text-overflow: el=
lipsis; white-space: nowrap; width: 80%; }

.DocSearch-Hit-title { font-size: 0.9em; }

.DocSearch-Hit-path { color: var(--docsearch-muted-color); font-size: 0.75e=
m; }

.DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-action, .DocSearch-Hi=
t[aria-selected=3D"true"] .DocSearch-Hit-icon, .DocSearch-Hit[aria-selected=
=3D"true"] .DocSearch-Hit-path, .DocSearch-Hit[aria-selected=3D"true"] .Doc=
Search-Hit-text, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-titl=
e, .DocSearch-Hit[aria-selected=3D"true"] .DocSearch-Hit-Tree, .DocSearch-H=
it[aria-selected=3D"true"] mark { color: var(--docsearch-hit-active-color) =
!important; }

@media screen and (prefers-reduced-motion: reduce) {
  .DocSearch-Hit-action-button:focus, .DocSearch-Hit-action-button:hover { =
background: rgba(0, 0, 0, 0.2); transition: none 0s ease 0s; }
}

.DocSearch-ErrorScreen, .DocSearch-NoResults, .DocSearch-StartScreen { font=
-size: 0.9em; margin: 0px auto; padding: 36px 0px; text-align: center; widt=
h: 80%; }

.DocSearch-Screen-Icon { color: var(--docsearch-muted-color); padding-botto=
m: 12px; }

.DocSearch-NoResults-Prefill-List { display: inline-block; padding-bottom: =
24px; text-align: left; }

.DocSearch-NoResults-Prefill-List ul { display: inline-block; padding: 8px =
0px 0px; }

.DocSearch-NoResults-Prefill-List li { list-style-position: inside; list-st=
yle-type: "=C2=BB "; }

.DocSearch-Prefill { appearance: none; background: none; border: 0px; borde=
r-radius: 1em; color: var(--docsearch-highlight-color); cursor: pointer; di=
splay: inline-block; font-size: 1em; font-weight: 700; padding: 0px; }

.DocSearch-Prefill:focus, .DocSearch-Prefill:hover { outline: none; text-de=
coration: underline; }

.DocSearch-Footer { align-items: center; background: var(--docsearch-footer=
-background); border-radius: 0px 0px 8px 8px; box-shadow: var(--docsearch-f=
ooter-shadow); display: flex; flex-direction: row-reverse; flex-shrink: 0; =
height: var(--docsearch-footer-height); justify-content: space-between; pad=
ding: 0 var(--docsearch-spacing); position: relative; user-select: none; wi=
dth: 100%; z-index: 300; }

.DocSearch-Commands { color: var(--docsearch-muted-color); display: flex; l=
ist-style: none; margin: 0px; padding: 0px; }

.DocSearch-Commands li { align-items: center; display: flex; }

.DocSearch-Commands li:not(:last-of-type) { margin-right: 0.8em; }

.DocSearch-Commands-Key { align-items: center; background: var(--docsearch-=
key-gradient); border-radius: 2px; box-shadow: var(--docsearch-key-shadow);=
 display: flex; height: 18px; justify-content: center; margin-right: 0.4em;=
 padding: 0px 0px 1px; color: var(--docsearch-muted-color); border: 0px; wi=
dth: 20px; }

@media (max-width: 768px) {
  :root { --docsearch-spacing: 10px; --docsearch-footer-height: 40px; }
  .DocSearch-Dropdown { height: 100%; }
  .DocSearch-Container { height: calc(var(--docsearch-vh, 1vh)*100); positi=
on: absolute; }
  .DocSearch-Footer { border-radius: 0px; bottom: 0px; position: absolute; =
}
  .DocSearch-Hit-content-wrapper { display: flex; position: relative; width=
: 80%; }
  .DocSearch-Modal { border-radius: 0px; box-shadow: none; height: calc(var=
(--docsearch-vh, 1vh)*100); margin: 0px; max-width: 100%; width: 100%; }
  .DocSearch-Dropdown { max-height: calc(var(--docsearch-vh, 1vh)*100 - var=
(--docsearch-searchbox-height) - var(--docsearch-spacing) - var(--docsearch=
-footer-height)); }
  .DocSearch-Cancel { appearance: none; background: none; border: 0px; colo=
r: var(--docsearch-highlight-color); cursor: pointer; display: inline-block=
; flex: 0 0 auto; font-style: inherit; font-variant: inherit; font-stretch:=
 inherit; line-height: inherit; font-family: inherit; font-optical-sizing: =
inherit; font-kerning: inherit; font-feature-settings: inherit; font-variat=
ion-settings: inherit; font-size: 1em; font-weight: 500; margin-left: var(-=
-docsearch-spacing); outline: none; overflow: hidden; padding: 0px; user-se=
lect: none; white-space: nowrap; }
  .DocSearch-Commands, .DocSearch-Hit-Tree { display: none; }
}

@keyframes fade-in {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

:root { --docsearch-primary-color: #F9322C; }

html[data-theme=3D"dark"]:root { --docsearch-primary-color: #F9322C; }

.DocSearch-Button { width: 100%; text-align: left; }

.DocSearch-Button-Container { display: inline-block; margin-right: 5px; }

.DocSearch-Search-Icon { display: inline-block; margin-right: 14px; margin-=
top: -2px; width: 15px; height: 15px; stroke-width: 2; }

.main-header .DocSearch-Button-Placeholder, .DocSearch-Button-Keys { displa=
y: none; }

.main-header .DocSearch-Button-Container { margin-right: 0px; }

.main-header .DocSearch-Search-Icon { color: rgb(35, 35, 35); width: 20px; =
height: 20px; stroke-width: 1.5; }

.callout p { margin-bottom: 0px; }

.docs_main a[name] { position: relative; display: block; visibility: hidden=
; top: -45px; }

.docs_main table { border-collapse: collapse; width: 100%; font-size: 13px;=
 margin-bottom: 2em; }

.docs_main table th, .docs_main table td { border: 1px solid rgb(215, 215, =
220); padding: 10px; text-align: left; }

.docs_main table th { font-size: 16px; }

@media (min-width: 640px) {
  .docs_main a[name] { position: relative; display: block; visibility: hidd=
en; top: -30px; }
}

.docs_main .page_title { display: none; }

.docs_main h1 { font-size: 2.5em; letter-spacing: 0em; }

.docs_main h2 { font-size: 1.75em; letter-spacing: 0px; }

.docs_main h3 { font-size: 1.25em; letter-spacing: 0px; font-weight: 500; }

.docs_main h4 { font-size: 1em; font-weight: 500; letter-spacing: 0px; }

.docs_main h4 a, .docs_main h3 a, .docs_main h2 a { color: rgb(35, 35, 35);=
 }

.docs_main h4 a::before, .docs_main h3 a::before, .docs_main h2 a::before {=
 content: "#"; font-weight: 400; position: absolute; color: rgb(235, 68, 50=
); opacity: 0.6; }

.docs_main h3 a::before, .docs_main h2 a::before { margin-left: -25px; font=
-size: 28px; }

.docs_main h4 a::before { margin-left: -18px; font-size: 17px; }

.docs_main code { font-size: 0.8rem; font-weight: 500; line-height: 1.9; co=
lor: rgb(35, 35, 35); }

.docs_main p { font-size: 1rem; line-height: 1.8em; }

.docs_main p code { font-size: 0.8rem; }

.docs_main ul:not(:first-of-type), .docs_main .content-list ul { list-style=
-type: none; margin: 0px 0px 2.5em; padding: 0px; }

.docs_main ul:not(:first-of-type) li, .docs_main .content-list ul li { posi=
tion: relative; display: block; padding-left: 1.25em; margin-bottom: 1rem; =
font-size: 0.89em; color: rgb(86, 84, 84); line-height: 1.714em; }

.docs_main ul:not(:first-of-type) li a, .docs_main .content-list ul li a { =
text-decoration: none; }

.docs_main ul:not(:first-of-type) li code, .docs_main .content-list ul li c=
ode { font-size: 0.875em; }

.docs_main ul:not(:first-of-type) li::before, .docs_main .content-list ul l=
i::before { content: ""; position: absolute; top: 0.4em; left: 0px; width: =
9px; height: 10px; background: url("/img/icons/ul_marker.min.svg") center c=
enter / contain no-repeat; }

.docs_main h1 + ul { list-style-type: none; margin: 0px; padding: 0px; }

.docs_main h1 + ul li { display: block; margin-bottom: 0.5em; }

.docs_main h1 + ul li a { position: relative; font-size: 0.89em; font-weigh=
t: 500; color: rgb(35, 35, 35); text-decoration: none; }

.docs_main h1 + ul li a::before { content: "# "; color: rgb(235, 68, 50); }

.docs_main h1 + ul ul { margin-top: 0.5em; padding: 0px; margin-bottom: 0px=
; }

.docs_main h1 + ul ul li { padding-left: 1.5em; }

.docs_main h1 + ul ul li a { font-weight: 400; }

#carbonads { position: fixed; bottom: 20px; right: 20px; background-color: =
rgb(247, 248, 251); z-index: 100; box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 1=
px; padding: 0.625em; max-width: 130px; box-sizing: content-box; }

#carbonads span { display: block; }

#carbonads img { display: block; margin-bottom: 0.75em; }

#carbonads .carbon-text { display: block; font-size: 0.75em; line-height: 1=
.4em; color: rgb(86, 84, 84); }

#carbonads .carbon-poweredby { font-size: 0.5em; text-transform: uppercase;=
 letter-spacing: 1px; line-height: 1; color: rgb(119, 119, 119); }

@media only screen and (min-width: 320px) and (max-width: 1239px) {
  #carbonads { position: relative; float: none; bottom: initial; right: ini=
tial; margin: 20px 0px; max-width: 330px; padding: 1em; }
  #carbonads .carbon-wrap { display: flex; flex-direction: row; }
  #carbonads img { margin: 0px 1em 0px 0px; }
  #carbonads .carbon-text { font-size: 0.825em; margin-bottom: 1em; }
  #carbonads .carbon-poweredby { position: absolute; left: 162px; bottom: 1=
5px; }
}

@media only screen and (min-width: 320px) and (max-width: 429px) {
  #carbonads .carbon-wrap { flex-direction: column; }
  #carbonads img { margin: 0px 0px 0.5em; }
  #carbonads .carbon-text { margin-bottom: initial; }
  #carbonads .carbon-poweredby { position: initial; left: initial; right: i=
nitial; }
}

@media only print {
  #carbonads { display: none; }
}

#skip-to-content-link:not(:focus) { position: absolute !important; clip: re=
ct(0px, 0px, 0px, 0px) !important; width: 1px !important; height: 1px !impo=
rtant; padding: 0px !important; margin: -1px !important; overflow: hidden !=
important; }

#skip-to-content-link { z-index: 2147483647; }

#main-content { outline: none; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: now=
rap; border-width: 0px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-y-0 { top: 0px; bottom: 0px; }

.-left-2 { left: -0.5rem; }

.-left-6 { left: -1.5rem; }

.-right-2 { right: -0.5rem; }

.-right-\[40px\] { right: -40px; }

.-top-24 { top: -6rem; }

.bottom-0 { bottom: 0px; }

.bottom-12 { bottom: 3rem; }

.bottom-40 { bottom: 10rem; }

.left-0 { left: 0px; }

.left-2 { left: 0.5rem; }

.left-28 { left: 7rem; }

.left-3 { left: 0.75rem; }

.left-\[-20\%\] { left: -20%; }

.right-0 { right: 0px; }

.right-1\/3 { right: 33.3333%; }

.right-1\/4 { right: 25%; }

.right-16 { right: 4rem; }

.right-6 { right: 1.5rem; }

.right-8 { right: 2rem; }

.right-\[-20\%\] { right: -20%; }

.right-\[12\%\] { right: 12%; }

.right-\[20\%\] { right: 20%; }

.right-\[300px\] { right: 300px; }

.right-\[80px\] { right: 80px; }

.top-0 { top: 0px; }

.top-12 { top: 3rem; }

.top-2\/3 { top: 66.6667%; }

.top-20 { top: 5rem; }

.top-24 { top: 6rem; }

.top-3 { top: 0.75rem; }

.top-40 { top: 10rem; }

.top-48 { top: 12rem; }

.top-64 { top: 16rem; }

.top-\[25\%\] { top: 25%; }

.top-\[300px\] { top: 300px; }

.top-\[45\%\] { top: 45%; }

.top-\[480px\] { top: 480px; }

.top-\[50px\] { top: 50px; }

.z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-50 { z-index: 50; }

.col-span-12 { grid-column: span 12 / span 12; }

.col-span-6 { grid-column: span 6 / span 6; }

.m-0 { margin: 0px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.mb-0 { margin-bottom: 0px; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-6 { margin-bottom: 1.5rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-2\.5 { margin-left: 0.625rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-8 { margin-left: 2rem; }

.mr-2 { margin-right: 0.5rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-12 { margin-top: 3rem; }

.mt-14 { margin-top: 3.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-2\.5 { margin-top: 0.625rem; }

.mt-24 { margin-top: 6rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-8 { margin-top: 2rem; }

.mt-px { margin-top: 1px; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.grid { display: grid; }

.hidden { display: none; }

.aspect-square { aspect-ratio: 1 / 1; }

.h-10 { height: 2.5rem; }

.h-12 { height: 3rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-20 { height: 5rem; }

.h-4 { height: 1rem; }

.h-5 { height: 1.25rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-\[300px\] { height: 300px; }

.h-\[640px\] { height: 640px; }

.h-full { height: 100%; }

.max-h-full { max-height: 100%; }

.min-h-0 { min-height: 0px; }

.min-h-full { min-height: 100%; }

.w-1\/2 { width: 50%; }

.w-10 { width: 2.5rem; }

.w-12 { width: 3rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\.5 { width: 0.625rem; }

.w-20 { width: 5rem; }

.w-224 { width: 56rem; }

.w-4 { width: 1rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-9 { width: 2.25rem; }

.w-\[302px\] { width: 302px; }

.w-\[640px\] { width: 640px; }

.w-full { width: 100%; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-\[1100px\] { max-width: 1100px; }

.max-w-\[218px\] { max-width: 218px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-none { max-width: none; }

.max-w-prose { max-width: 65ch; }

.max-w-screen-2xl { max-width: 1536px; }

.max-w-screen-lg { max-width: 1024px; }

.max-w-screen-xl { max-width: 1280px; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.flex-1 { flex: 1 1 0%; }

.flex-shrink-0, .shrink-0 { flex-shrink: 0; }

.origin-top { transform-origin: center top; }

.-translate-x-1 { --tw-translate-x: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-1 { --tw-translate-y: -.25rem; transform: translate(var(--tw-=
translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.-translate-y-12 { --tw-translate-y: -3rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-20 { --tw-translate-y: -5rem; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-s=
kew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-s=
cale-y)); }

.-translate-y-8 { --tw-translate-y: -2rem; transform: translate(var(--tw-tr=
anslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-sk=
ew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sc=
ale-y)); }

.translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.translate-x-32 { --tw-translate-x: 8rem; transform: translate(var(--tw-tra=
nslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-rotate-1 { --tw-rotate: -1deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) ske=
wY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; transform: translate(var(--tw-translate-=
x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) s=
kewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));=
 }

.rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translate-x),v=
ar(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY=
(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(var(--t=
w-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }

.scale-105 { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }

.scale-75 { --tw-scale-x: .75; --tw-scale-y: .75; transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(=
--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(=
--tw-scale-y)); }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y))=
 scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@keyframes cube {=20
  50% { transform: translateY(1rem); }
}

.animate-cube { animation: 6s ease-in-out 0s infinite normal none running c=
ube; }

.resize { resize: both; }

.list-disc { list-style-type: disc; }

.appearance-none { appearance: none; }

.columns-1 { columns: 1; }

.break-inside-avoid-column { break-inside: avoid-column; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-6 { grid-template-columns: repeat(6, minmax(0px, 1fr)); }

.grid-cols-8 { grid-template-columns: repeat(8, minmax(0px, 1fr)); }

.flex-col { flex-direction: column; }

.flex-wrap { flex-wrap: wrap; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.gap-10 { gap: 2.5rem; }

.gap-12 { gap: 3rem; }

.gap-3 { gap: 0.75rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-x-10 { column-gap: 2.5rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-y-12 { row-gap: 3rem; }

.gap-y-6 { row-gap: 1.5rem; }

.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(.75rem * var(--tw-space-x-reverse)); margin-left: calc(.75r=
em * calc(1 - var(--tw-space-x-reverse))); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1rem * var(--tw-space-x-reverse)); margin-left: calc(1rem *=
 calc(1 - var(--tw-space-x-reverse))); }

.space-x-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-right: calc(1.25rem * var(--tw-space-x-reverse)); margin-left: calc(1.2=
5rem * calc(1 - var(--tw-space-x-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.25rem * var(--tw-space-y-reverse)); }

.space-y-12 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; ma=
rgin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(3rem * var(--tw-space-y-reverse)); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: =
calc(.5rem * var(--tw-space-y-reverse)); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(.75rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom:=
 calc(.75rem * var(--tw-space-y-reverse)); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(1rem * var(--tw-space-y-reverse)); }

.space-y-5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom=
: calc(1.25rem * var(--tw-space-y-reverse)); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: c=
alc(2rem * var(--tw-space-y-reverse)); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-right-width: calc(1px * var(--tw-divide-x-reverse)); border-left-width:=
 calc(1px * calc(1 - var(--tw-divide-x-reverse))); }

.divide-dark-500 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(57 64 86 / var(--tw-divide-opacity)); }

.divide-gray-100 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgb(245 245 250 / var(--tw-divide-opacity)); }

.self-stretch { align-self: stretch; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.whitespace-nowrap { white-space: nowrap; }

.rounded-2xl { border-radius: 1rem; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-none { border-radius: 0px; }

.rounded-b-lg { border-bottom-right-radius: 0.5rem; border-bottom-left-radi=
us: 0.5rem; }

.rounded-b-none { border-bottom-right-radius: 0px; border-bottom-left-radiu=
s: 0px; }

.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.=
5rem; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.border { border-width: 1px; }

.border-\[10px\] { border-width: 10px; }

.border-b { border-bottom-width: 1px; }

.border-b-\[3px\] { border-bottom-width: 3px; }

.border-l { border-left-width: 1px; }

.border-r { border-right-width: 1px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-dashed { border-style: dashed; }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgb(245 245 250 / =
var(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgb(231 232 242 / =
var(--tw-border-opacity)); }

.border-red-400 { --tw-border-opacity: 1; border-color: rgb(248 113 113 / v=
ar(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgb(249 50 44 / var=
(--tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50 / var=
(--tw-border-opacity)); }

.border-white { --tw-border-opacity: 1; border-color: rgb(255 255 255 / var=
(--tw-border-opacity)); }

.border-b-transparent { border-bottom-color: transparent; }

.border-opacity-60 { --tw-border-opacity: .6; }

.bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(7 130 177 / var(--=
tw-bg-opacity)); }

.bg-breeze { --tw-bg-opacity: 1; background-color: rgb(243 193 75 / var(--t=
w-bg-opacity)); }

.bg-breeze\/0 { background-color: rgba(243, 193, 75, 0); }

.bg-breeze\/10 { background-color: rgba(243, 193, 75, 0.1); }

.bg-breeze\/100 { background-color: rgb(243, 193, 75); }

.bg-breeze\/20 { background-color: rgba(243, 193, 75, 0.2); }

.bg-breeze\/25 { background-color: rgba(243, 193, 75, 0.25); }

.bg-breeze\/30 { background-color: rgba(243, 193, 75, 0.3); }

.bg-breeze\/40 { background-color: rgba(243, 193, 75, 0.4); }

.bg-breeze\/5 { background-color: rgba(243, 193, 75, 0.05); }

.bg-breeze\/50 { background-color: rgba(243, 193, 75, 0.5); }

.bg-breeze\/60 { background-color: rgba(243, 193, 75, 0.6); }

.bg-breeze\/70 { background-color: rgba(243, 193, 75, 0.7); }

.bg-breeze\/75 { background-color: rgba(243, 193, 75, 0.75); }

.bg-breeze\/80 { background-color: rgba(243, 193, 75, 0.8); }

.bg-breeze\/90 { background-color: rgba(243, 193, 75, 0.9); }

.bg-breeze\/95 { background-color: rgba(243, 193, 75, 0.95); }

.bg-cashier { --tw-bg-opacity: 1; background-color: rgb(145 214 48 / var(--=
tw-bg-opacity)); }

.bg-cashier\/0 { background-color: rgba(145, 214, 48, 0); }

.bg-cashier\/10 { background-color: rgba(145, 214, 48, 0.1); }

.bg-cashier\/100 { background-color: rgb(145, 214, 48); }

.bg-cashier\/20 { background-color: rgba(145, 214, 48, 0.2); }

.bg-cashier\/25 { background-color: rgba(145, 214, 48, 0.25); }

.bg-cashier\/30 { background-color: rgba(145, 214, 48, 0.3); }

.bg-cashier\/40 { background-color: rgba(145, 214, 48, 0.4); }

.bg-cashier\/5 { background-color: rgba(145, 214, 48, 0.05); }

.bg-cashier\/50 { background-color: rgba(145, 214, 48, 0.5); }

.bg-cashier\/60 { background-color: rgba(145, 214, 48, 0.6); }

.bg-cashier\/70 { background-color: rgba(145, 214, 48, 0.7); }

.bg-cashier\/75 { background-color: rgba(145, 214, 48, 0.75); }

.bg-cashier\/80 { background-color: rgba(145, 214, 48, 0.8); }

.bg-cashier\/90 { background-color: rgba(145, 214, 48, 0.9); }

.bg-cashier\/95 { background-color: rgba(145, 214, 48, 0.95); }

.bg-dark-600 { --tw-bg-opacity: 1; background-color: rgb(37 42 55 / var(--t=
w-bg-opacity)); }

.bg-dark-700 { --tw-bg-opacity: 1; background-color: rgb(23 25 35 / var(--t=
w-bg-opacity)); }

.bg-dusk { --tw-bg-opacity: 1; background-color: rgb(187 53 139 / var(--tw-=
bg-opacity)); }

.bg-dusk\/0 { background-color: rgba(187, 53, 139, 0); }

.bg-dusk\/10 { background-color: rgba(187, 53, 139, 0.1); }

.bg-dusk\/100 { background-color: rgb(187, 53, 139); }

.bg-dusk\/20 { background-color: rgba(187, 53, 139, 0.2); }

.bg-dusk\/25 { background-color: rgba(187, 53, 139, 0.25); }

.bg-dusk\/30 { background-color: rgba(187, 53, 139, 0.3); }

.bg-dusk\/40 { background-color: rgba(187, 53, 139, 0.4); }

.bg-dusk\/5 { background-color: rgba(187, 53, 139, 0.05); }

.bg-dusk\/50 { background-color: rgba(187, 53, 139, 0.5); }

.bg-dusk\/60 { background-color: rgba(187, 53, 139, 0.6); }

.bg-dusk\/70 { background-color: rgba(187, 53, 139, 0.7); }

.bg-dusk\/75 { background-color: rgba(187, 53, 139, 0.75); }

.bg-dusk\/80 { background-color: rgba(187, 53, 139, 0.8); }

.bg-dusk\/90 { background-color: rgba(187, 53, 139, 0.9); }

.bg-dusk\/95 { background-color: rgba(187, 53, 139, 0.95); }

.bg-echo { --tw-bg-opacity: 1; background-color: rgb(74 178 176 / var(--tw-=
bg-opacity)); }

.bg-echo\/0 { background-color: rgba(74, 178, 176, 0); }

.bg-echo\/10 { background-color: rgba(74, 178, 176, 0.1); }

.bg-echo\/100 { background-color: rgb(74, 178, 176); }

.bg-echo\/20 { background-color: rgba(74, 178, 176, 0.2); }

.bg-echo\/25 { background-color: rgba(74, 178, 176, 0.25); }

.bg-echo\/30 { background-color: rgba(74, 178, 176, 0.3); }

.bg-echo\/40 { background-color: rgba(74, 178, 176, 0.4); }

.bg-echo\/5 { background-color: rgba(74, 178, 176, 0.05); }

.bg-echo\/50 { background-color: rgba(74, 178, 176, 0.5); }

.bg-echo\/60 { background-color: rgba(74, 178, 176, 0.6); }

.bg-echo\/70 { background-color: rgba(74, 178, 176, 0.7); }

.bg-echo\/75 { background-color: rgba(74, 178, 176, 0.75); }

.bg-echo\/80 { background-color: rgba(74, 178, 176, 0.8); }

.bg-echo\/90 { background-color: rgba(74, 178, 176, 0.9); }

.bg-echo\/95 { background-color: rgba(74, 178, 176, 0.95); }

.bg-envoyer { --tw-bg-opacity: 1; background-color: rgb(245 104 87 / var(--=
tw-bg-opacity)); }

.bg-envoyer\/0 { background-color: rgba(245, 104, 87, 0); }

.bg-envoyer\/10 { background-color: rgba(245, 104, 87, 0.1); }

.bg-envoyer\/100 { background-color: rgb(245, 104, 87); }

.bg-envoyer\/20 { background-color: rgba(245, 104, 87, 0.2); }

.bg-envoyer\/25 { background-color: rgba(245, 104, 87, 0.25); }

.bg-envoyer\/30 { background-color: rgba(245, 104, 87, 0.3); }

.bg-envoyer\/40 { background-color: rgba(245, 104, 87, 0.4); }

.bg-envoyer\/5 { background-color: rgba(245, 104, 87, 0.05); }

.bg-envoyer\/50 { background-color: rgba(245, 104, 87, 0.5); }

.bg-envoyer\/60 { background-color: rgba(245, 104, 87, 0.6); }

.bg-envoyer\/70 { background-color: rgba(245, 104, 87, 0.7); }

.bg-envoyer\/75 { background-color: rgba(245, 104, 87, 0.75); }

.bg-envoyer\/80 { background-color: rgba(245, 104, 87, 0.8); }

.bg-envoyer\/90 { background-color: rgba(245, 104, 87, 0.9); }

.bg-envoyer\/95 { background-color: rgba(245, 104, 87, 0.95); }

.bg-forge { --tw-bg-opacity: 1; background-color: rgb(30 183 134 / var(--tw=
-bg-opacity)); }

.bg-forge\/0 { background-color: rgba(30, 183, 134, 0); }

.bg-forge\/10 { background-color: rgba(30, 183, 134, 0.1); }

.bg-forge\/100 { background-color: rgb(30, 183, 134); }

.bg-forge\/20 { background-color: rgba(30, 183, 134, 0.2); }

.bg-forge\/25 { background-color: rgba(30, 183, 134, 0.25); }

.bg-forge\/30 { background-color: rgba(30, 183, 134, 0.3); }

.bg-forge\/40 { background-color: rgba(30, 183, 134, 0.4); }

.bg-forge\/5 { background-color: rgba(30, 183, 134, 0.05); }

.bg-forge\/50 { background-color: rgba(30, 183, 134, 0.5); }

.bg-forge\/60 { background-color: rgba(30, 183, 134, 0.6); }

.bg-forge\/70 { background-color: rgba(30, 183, 134, 0.7); }

.bg-forge\/75 { background-color: rgba(30, 183, 134, 0.75); }

.bg-forge\/80 { background-color: rgba(30, 183, 134, 0.8); }

.bg-forge\/90 { background-color: rgba(30, 183, 134, 0.9); }

.bg-forge\/95 { background-color: rgba(30, 183, 134, 0.95); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(245 245 250 / var(=
--tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgb(251 251 253 / var(-=
-tw-bg-opacity)); }

.bg-herd { --tw-bg-opacity: 1; background-color: rgb(220 38 38 / var(--tw-b=
g-opacity)); }

.bg-herd\/0 { background-color: rgba(220, 38, 38, 0); }

.bg-herd\/10 { background-color: rgba(220, 38, 38, 0.1); }

.bg-herd\/100 { background-color: rgb(220, 38, 38); }

.bg-herd\/20 { background-color: rgba(220, 38, 38, 0.2); }

.bg-herd\/25 { background-color: rgba(220, 38, 38, 0.25); }

.bg-herd\/30 { background-color: rgba(220, 38, 38, 0.3); }

.bg-herd\/40 { background-color: rgba(220, 38, 38, 0.4); }

.bg-herd\/5 { background-color: rgba(220, 38, 38, 0.05); }

.bg-herd\/50 { background-color: rgba(220, 38, 38, 0.5); }

.bg-herd\/60 { background-color: rgba(220, 38, 38, 0.6); }

.bg-herd\/70 { background-color: rgba(220, 38, 38, 0.7); }

.bg-herd\/75 { background-color: rgba(220, 38, 38, 0.75); }

.bg-herd\/80 { background-color: rgba(220, 38, 38, 0.8); }

.bg-herd\/90 { background-color: rgba(220, 38, 38, 0.9); }

.bg-herd\/95 { background-color: rgba(220, 38, 38, 0.95); }

.bg-homestead { --tw-bg-opacity: 1; background-color: rgb(231 128 28 / var(=
--tw-bg-opacity)); }

.bg-homestead\/0 { background-color: rgba(231, 128, 28, 0); }

.bg-homestead\/10 { background-color: rgba(231, 128, 28, 0.1); }

.bg-homestead\/100 { background-color: rgb(231, 128, 28); }

.bg-homestead\/20 { background-color: rgba(231, 128, 28, 0.2); }

.bg-homestead\/25 { background-color: rgba(231, 128, 28, 0.25); }

.bg-homestead\/30 { background-color: rgba(231, 128, 28, 0.3); }

.bg-homestead\/40 { background-color: rgba(231, 128, 28, 0.4); }

.bg-homestead\/5 { background-color: rgba(231, 128, 28, 0.05); }

.bg-homestead\/50 { background-color: rgba(231, 128, 28, 0.5); }

.bg-homestead\/60 { background-color: rgba(231, 128, 28, 0.6); }

.bg-homestead\/70 { background-color: rgba(231, 128, 28, 0.7); }

.bg-homestead\/75 { background-color: rgba(231, 128, 28, 0.75); }

.bg-homestead\/80 { background-color: rgba(231, 128, 28, 0.8); }

.bg-homestead\/90 { background-color: rgba(231, 128, 28, 0.9); }

.bg-homestead\/95 { background-color: rgba(231, 128, 28, 0.95); }

.bg-horizon { --tw-bg-opacity: 1; background-color: rgb(140 110 211 / var(-=
-tw-bg-opacity)); }

.bg-horizon\/0 { background-color: rgba(140, 110, 211, 0); }

.bg-horizon\/10 { background-color: rgba(140, 110, 211, 0.1); }

.bg-horizon\/100 { background-color: rgb(140, 110, 211); }

.bg-horizon\/20 { background-color: rgba(140, 110, 211, 0.2); }

.bg-horizon\/25 { background-color: rgba(140, 110, 211, 0.25); }

.bg-horizon\/30 { background-color: rgba(140, 110, 211, 0.3); }

.bg-horizon\/40 { background-color: rgba(140, 110, 211, 0.4); }

.bg-horizon\/5 { background-color: rgba(140, 110, 211, 0.05); }

.bg-horizon\/50 { background-color: rgba(140, 110, 211, 0.5); }

.bg-horizon\/60 { background-color: rgba(140, 110, 211, 0.6); }

.bg-horizon\/70 { background-color: rgba(140, 110, 211, 0.7); }

.bg-horizon\/75 { background-color: rgba(140, 110, 211, 0.75); }

.bg-horizon\/80 { background-color: rgba(140, 110, 211, 0.8); }

.bg-horizon\/90 { background-color: rgba(140, 110, 211, 0.9); }

.bg-horizon\/95 { background-color: rgba(140, 110, 211, 0.95); }

.bg-inertia { --tw-bg-opacity: 1; background-color: rgb(149 83 233 / var(--=
tw-bg-opacity)); }

.bg-inertia\/0 { background-color: rgba(149, 83, 233, 0); }

.bg-inertia\/10 { background-color: rgba(149, 83, 233, 0.1); }

.bg-inertia\/100 { background-color: rgb(149, 83, 233); }

.bg-inertia\/20 { background-color: rgba(149, 83, 233, 0.2); }

.bg-inertia\/25 { background-color: rgba(149, 83, 233, 0.25); }

.bg-inertia\/30 { background-color: rgba(149, 83, 233, 0.3); }

.bg-inertia\/40 { background-color: rgba(149, 83, 233, 0.4); }

.bg-inertia\/5 { background-color: rgba(149, 83, 233, 0.05); }

.bg-inertia\/50 { background-color: rgba(149, 83, 233, 0.5); }

.bg-inertia\/60 { background-color: rgba(149, 83, 233, 0.6); }

.bg-inertia\/70 { background-color: rgba(149, 83, 233, 0.7); }

.bg-inertia\/75 { background-color: rgba(149, 83, 233, 0.75); }

.bg-inertia\/80 { background-color: rgba(149, 83, 233, 0.8); }

.bg-inertia\/90 { background-color: rgba(149, 83, 233, 0.9); }

.bg-inertia\/95 { background-color: rgba(149, 83, 233, 0.95); }

.bg-jetstream { --tw-bg-opacity: 1; background-color: rgb(104 117 245 / var=
(--tw-bg-opacity)); }

.bg-jetstream\/0 { background-color: rgba(104, 117, 245, 0); }

.bg-jetstream\/10 { background-color: rgba(104, 117, 245, 0.1); }

.bg-jetstream\/100 { background-color: rgb(104, 117, 245); }

.bg-jetstream\/20 { background-color: rgba(104, 117, 245, 0.2); }

.bg-jetstream\/25 { background-color: rgba(104, 117, 245, 0.25); }

.bg-jetstream\/30 { background-color: rgba(104, 117, 245, 0.3); }

.bg-jetstream\/40 { background-color: rgba(104, 117, 245, 0.4); }

.bg-jetstream\/5 { background-color: rgba(104, 117, 245, 0.05); }

.bg-jetstream\/50 { background-color: rgba(104, 117, 245, 0.5); }

.bg-jetstream\/60 { background-color: rgba(104, 117, 245, 0.6); }

.bg-jetstream\/70 { background-color: rgba(104, 117, 245, 0.7); }

.bg-jetstream\/75 { background-color: rgba(104, 117, 245, 0.75); }

.bg-jetstream\/80 { background-color: rgba(104, 117, 245, 0.8); }

.bg-jetstream\/90 { background-color: rgba(104, 117, 245, 0.9); }

.bg-jetstream\/95 { background-color: rgba(104, 117, 245, 0.95); }

.bg-livewire { --tw-bg-opacity: 1; background-color: rgb(251 112 169 / var(=
--tw-bg-opacity)); }

.bg-livewire\/0 { background-color: rgba(251, 112, 169, 0); }

.bg-livewire\/10 { background-color: rgba(251, 112, 169, 0.1); }

.bg-livewire\/100 { background-color: rgb(251, 112, 169); }

.bg-livewire\/20 { background-color: rgba(251, 112, 169, 0.2); }

.bg-livewire\/25 { background-color: rgba(251, 112, 169, 0.25); }

.bg-livewire\/30 { background-color: rgba(251, 112, 169, 0.3); }

.bg-livewire\/40 { background-color: rgba(251, 112, 169, 0.4); }

.bg-livewire\/5 { background-color: rgba(251, 112, 169, 0.05); }

.bg-livewire\/50 { background-color: rgba(251, 112, 169, 0.5); }

.bg-livewire\/60 { background-color: rgba(251, 112, 169, 0.6); }

.bg-livewire\/70 { background-color: rgba(251, 112, 169, 0.7); }

.bg-livewire\/75 { background-color: rgba(251, 112, 169, 0.75); }

.bg-livewire\/80 { background-color: rgba(251, 112, 169, 0.8); }

.bg-livewire\/90 { background-color: rgba(251, 112, 169, 0.9); }

.bg-livewire\/95 { background-color: rgba(251, 112, 169, 0.95); }

.bg-lumen { --tw-bg-opacity: 1; background-color: rgb(246 174 122 / var(--t=
w-bg-opacity)); }

.bg-lumen\/0 { background-color: rgba(246, 174, 122, 0); }

.bg-lumen\/10 { background-color: rgba(246, 174, 122, 0.1); }

.bg-lumen\/100 { background-color: rgb(246, 174, 122); }

.bg-lumen\/20 { background-color: rgba(246, 174, 122, 0.2); }

.bg-lumen\/25 { background-color: rgba(246, 174, 122, 0.25); }

.bg-lumen\/30 { background-color: rgba(246, 174, 122, 0.3); }

.bg-lumen\/40 { background-color: rgba(246, 174, 122, 0.4); }

.bg-lumen\/5 { background-color: rgba(246, 174, 122, 0.05); }

.bg-lumen\/50 { background-color: rgba(246, 174, 122, 0.5); }

.bg-lumen\/60 { background-color: rgba(246, 174, 122, 0.6); }

.bg-lumen\/70 { background-color: rgba(246, 174, 122, 0.7); }

.bg-lumen\/75 { background-color: rgba(246, 174, 122, 0.75); }

.bg-lumen\/80 { background-color: rgba(246, 174, 122, 0.8); }

.bg-lumen\/90 { background-color: rgba(246, 174, 122, 0.9); }

.bg-lumen\/95 { background-color: rgba(246, 174, 122, 0.95); }

.bg-mix { --tw-bg-opacity: 1; background-color: rgb(41 75 165 / var(--tw-bg=
-opacity)); }

.bg-mix\/0 { background-color: rgba(41, 75, 165, 0); }

.bg-mix\/10 { background-color: rgba(41, 75, 165, 0.1); }

.bg-mix\/100 { background-color: rgb(41, 75, 165); }

.bg-mix\/20 { background-color: rgba(41, 75, 165, 0.2); }

.bg-mix\/25 { background-color: rgba(41, 75, 165, 0.25); }

.bg-mix\/30 { background-color: rgba(41, 75, 165, 0.3); }

.bg-mix\/40 { background-color: rgba(41, 75, 165, 0.4); }

.bg-mix\/5 { background-color: rgba(41, 75, 165, 0.05); }

.bg-mix\/50 { background-color: rgba(41, 75, 165, 0.5); }

.bg-mix\/60 { background-color: rgba(41, 75, 165, 0.6); }

.bg-mix\/70 { background-color: rgba(41, 75, 165, 0.7); }

.bg-mix\/75 { background-color: rgba(41, 75, 165, 0.75); }

.bg-mix\/80 { background-color: rgba(41, 75, 165, 0.8); }

.bg-mix\/90 { background-color: rgba(41, 75, 165, 0.9); }

.bg-mix\/95 { background-color: rgba(41, 75, 165, 0.95); }

.bg-nova { --tw-bg-opacity: 1; background-color: rgb(64 153 222 / var(--tw-=
bg-opacity)); }

.bg-nova\/0 { background-color: rgba(64, 153, 222, 0); }

.bg-nova\/10 { background-color: rgba(64, 153, 222, 0.1); }

.bg-nova\/100 { background-color: rgb(64, 153, 222); }

.bg-nova\/20 { background-color: rgba(64, 153, 222, 0.2); }

.bg-nova\/25 { background-color: rgba(64, 153, 222, 0.25); }

.bg-nova\/30 { background-color: rgba(64, 153, 222, 0.3); }

.bg-nova\/40 { background-color: rgba(64, 153, 222, 0.4); }

.bg-nova\/5 { background-color: rgba(64, 153, 222, 0.05); }

.bg-nova\/50 { background-color: rgba(64, 153, 222, 0.5); }

.bg-nova\/60 { background-color: rgba(64, 153, 222, 0.6); }

.bg-nova\/70 { background-color: rgba(64, 153, 222, 0.7); }

.bg-nova\/75 { background-color: rgba(64, 153, 222, 0.75); }

.bg-nova\/80 { background-color: rgba(64, 153, 222, 0.8); }

.bg-nova\/90 { background-color: rgba(64, 153, 222, 0.9); }

.bg-nova\/95 { background-color: rgba(64, 153, 222, 0.95); }

.bg-octane { --tw-bg-opacity: 1; background-color: rgb(202 58 49 / var(--tw=
-bg-opacity)); }

.bg-octane\/0 { background-color: rgba(202, 58, 49, 0); }

.bg-octane\/10 { background-color: rgba(202, 58, 49, 0.1); }

.bg-octane\/100 { background-color: rgb(202, 58, 49); }

.bg-octane\/20 { background-color: rgba(202, 58, 49, 0.2); }

.bg-octane\/25 { background-color: rgba(202, 58, 49, 0.25); }

.bg-octane\/30 { background-color: rgba(202, 58, 49, 0.3); }

.bg-octane\/40 { background-color: rgba(202, 58, 49, 0.4); }

.bg-octane\/5 { background-color: rgba(202, 58, 49, 0.05); }

.bg-octane\/50 { background-color: rgba(202, 58, 49, 0.5); }

.bg-octane\/60 { background-color: rgba(202, 58, 49, 0.6); }

.bg-octane\/70 { background-color: rgba(202, 58, 49, 0.7); }

.bg-octane\/75 { background-color: rgba(202, 58, 49, 0.75); }

.bg-octane\/80 { background-color: rgba(202, 58, 49, 0.8); }

.bg-octane\/90 { background-color: rgba(202, 58, 49, 0.9); }

.bg-octane\/95 { background-color: rgba(202, 58, 49, 0.95); }

.bg-orange-600 { --tw-bg-opacity: 1; background-color: rgb(244 157 55 / var=
(--tw-bg-opacity)); }

.bg-passport { --tw-bg-opacity: 1; background-color: rgb(125 217 242 / var(=
--tw-bg-opacity)); }

.bg-passport\/0 { background-color: rgba(125, 217, 242, 0); }

.bg-passport\/10 { background-color: rgba(125, 217, 242, 0.1); }

.bg-passport\/100 { background-color: rgb(125, 217, 242); }

.bg-passport\/20 { background-color: rgba(125, 217, 242, 0.2); }

.bg-passport\/25 { background-color: rgba(125, 217, 242, 0.25); }

.bg-passport\/30 { background-color: rgba(125, 217, 242, 0.3); }

.bg-passport\/40 { background-color: rgba(125, 217, 242, 0.4); }

.bg-passport\/5 { background-color: rgba(125, 217, 242, 0.05); }

.bg-passport\/50 { background-color: rgba(125, 217, 242, 0.5); }

.bg-passport\/60 { background-color: rgba(125, 217, 242, 0.6); }

.bg-passport\/70 { background-color: rgba(125, 217, 242, 0.7); }

.bg-passport\/75 { background-color: rgba(125, 217, 242, 0.75); }

.bg-passport\/80 { background-color: rgba(125, 217, 242, 0.8); }

.bg-passport\/90 { background-color: rgba(125, 217, 242, 0.9); }

.bg-passport\/95 { background-color: rgba(125, 217, 242, 0.95); }

.bg-pennant { --tw-bg-opacity: 1; background-color: rgb(26 164 74 / var(--t=
w-bg-opacity)); }

.bg-pennant\/0 { background-color: rgba(26, 164, 74, 0); }

.bg-pennant\/10 { background-color: rgba(26, 164, 74, 0.1); }

.bg-pennant\/100 { background-color: rgb(26, 164, 74); }

.bg-pennant\/20 { background-color: rgba(26, 164, 74, 0.2); }

.bg-pennant\/25 { background-color: rgba(26, 164, 74, 0.25); }

.bg-pennant\/30 { background-color: rgba(26, 164, 74, 0.3); }

.bg-pennant\/40 { background-color: rgba(26, 164, 74, 0.4); }

.bg-pennant\/5 { background-color: rgba(26, 164, 74, 0.05); }

.bg-pennant\/50 { background-color: rgba(26, 164, 74, 0.5); }

.bg-pennant\/60 { background-color: rgba(26, 164, 74, 0.6); }

.bg-pennant\/70 { background-color: rgba(26, 164, 74, 0.7); }

.bg-pennant\/75 { background-color: rgba(26, 164, 74, 0.75); }

.bg-pennant\/80 { background-color: rgba(26, 164, 74, 0.8); }

.bg-pennant\/90 { background-color: rgba(26, 164, 74, 0.9); }

.bg-pennant\/95 { background-color: rgba(26, 164, 74, 0.95); }

.bg-pint { --tw-bg-opacity: 1; background-color: rgb(255 208 0 / var(--tw-b=
g-opacity)); }

.bg-pint\/0 { background-color: rgba(255, 208, 0, 0); }

.bg-pint\/10 { background-color: rgba(255, 208, 0, 0.1); }

.bg-pint\/100 { background-color: rgb(255, 208, 0); }

.bg-pint\/20 { background-color: rgba(255, 208, 0, 0.2); }

.bg-pint\/25 { background-color: rgba(255, 208, 0, 0.25); }

.bg-pint\/30 { background-color: rgba(255, 208, 0, 0.3); }

.bg-pint\/40 { background-color: rgba(255, 208, 0, 0.4); }

.bg-pint\/5 { background-color: rgba(255, 208, 0, 0.05); }

.bg-pint\/50 { background-color: rgba(255, 208, 0, 0.5); }

.bg-pint\/60 { background-color: rgba(255, 208, 0, 0.6); }

.bg-pint\/70 { background-color: rgba(255, 208, 0, 0.7); }

.bg-pint\/75 { background-color: rgba(255, 208, 0, 0.75); }

.bg-pint\/80 { background-color: rgba(255, 208, 0, 0.8); }

.bg-pint\/90 { background-color: rgba(255, 208, 0, 0.9); }

.bg-pint\/95 { background-color: rgba(255, 208, 0, 0.95); }

.bg-prompts { --tw-bg-opacity: 1; background-color: rgb(74 222 128 / var(--=
tw-bg-opacity)); }

.bg-prompts\/0 { background-color: rgba(74, 222, 128, 0); }

.bg-prompts\/10 { background-color: rgba(74, 222, 128, 0.1); }

.bg-prompts\/100 { background-color: rgb(74, 222, 128); }

.bg-prompts\/20 { background-color: rgba(74, 222, 128, 0.2); }

.bg-prompts\/25 { background-color: rgba(74, 222, 128, 0.25); }

.bg-prompts\/30 { background-color: rgba(74, 222, 128, 0.3); }

.bg-prompts\/40 { background-color: rgba(74, 222, 128, 0.4); }

.bg-prompts\/5 { background-color: rgba(74, 222, 128, 0.05); }

.bg-prompts\/50 { background-color: rgba(74, 222, 128, 0.5); }

.bg-prompts\/60 { background-color: rgba(74, 222, 128, 0.6); }

.bg-prompts\/70 { background-color: rgba(74, 222, 128, 0.7); }

.bg-prompts\/75 { background-color: rgba(74, 222, 128, 0.75); }

.bg-prompts\/80 { background-color: rgba(74, 222, 128, 0.8); }

.bg-prompts\/90 { background-color: rgba(74, 222, 128, 0.9); }

.bg-prompts\/95 { background-color: rgba(74, 222, 128, 0.95); }

.bg-purple-600 { --tw-bg-opacity: 1; background-color: rgb(131 56 236 / var=
(--tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(249 50 44 / var(--t=
w-bg-opacity)); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgb(235 68 50 / var(--t=
w-bg-opacity)); }

.bg-sail { --tw-bg-opacity: 1; background-color: rgb(56 189 247 / var(--tw-=
bg-opacity)); }

.bg-sail\/0 { background-color: rgba(56, 189, 247, 0); }

.bg-sail\/10 { background-color: rgba(56, 189, 247, 0.1); }

.bg-sail\/100 { background-color: rgb(56, 189, 247); }

.bg-sail\/20 { background-color: rgba(56, 189, 247, 0.2); }

.bg-sail\/25 { background-color: rgba(56, 189, 247, 0.25); }

.bg-sail\/30 { background-color: rgba(56, 189, 247, 0.3); }

.bg-sail\/40 { background-color: rgba(56, 189, 247, 0.4); }

.bg-sail\/5 { background-color: rgba(56, 189, 247, 0.05); }

.bg-sail\/50 { background-color: rgba(56, 189, 247, 0.5); }

.bg-sail\/60 { background-color: rgba(56, 189, 247, 0.6); }

.bg-sail\/70 { background-color: rgba(56, 189, 247, 0.7); }

.bg-sail\/75 { background-color: rgba(56, 189, 247, 0.75); }

.bg-sail\/80 { background-color: rgba(56, 189, 247, 0.8); }

.bg-sail\/90 { background-color: rgba(56, 189, 247, 0.9); }

.bg-sail\/95 { background-color: rgba(56, 189, 247, 0.95); }

.bg-sanctum { --tw-bg-opacity: 1; background-color: rgb(29 88 115 / var(--t=
w-bg-opacity)); }

.bg-sanctum\/0 { background-color: rgba(29, 88, 115, 0); }

.bg-sanctum\/10 { background-color: rgba(29, 88, 115, 0.1); }

.bg-sanctum\/100 { background-color: rgb(29, 88, 115); }

.bg-sanctum\/20 { background-color: rgba(29, 88, 115, 0.2); }

.bg-sanctum\/25 { background-color: rgba(29, 88, 115, 0.25); }

.bg-sanctum\/30 { background-color: rgba(29, 88, 115, 0.3); }

.bg-sanctum\/40 { background-color: rgba(29, 88, 115, 0.4); }

.bg-sanctum\/5 { background-color: rgba(29, 88, 115, 0.05); }

.bg-sanctum\/50 { background-color: rgba(29, 88, 115, 0.5); }

.bg-sanctum\/60 { background-color: rgba(29, 88, 115, 0.6); }

.bg-sanctum\/70 { background-color: rgba(29, 88, 115, 0.7); }

.bg-sanctum\/75 { background-color: rgba(29, 88, 115, 0.75); }

.bg-sanctum\/80 { background-color: rgba(29, 88, 115, 0.8); }

.bg-sanctum\/90 { background-color: rgba(29, 88, 115, 0.9); }

.bg-sanctum\/95 { background-color: rgba(29, 88, 115, 0.95); }

.bg-scout { --tw-bg-opacity: 1; background-color: rgb(245 93 92 / var(--tw-=
bg-opacity)); }

.bg-scout\/0 { background-color: rgba(245, 93, 92, 0); }

.bg-scout\/10 { background-color: rgba(245, 93, 92, 0.1); }

.bg-scout\/100 { background-color: rgb(245, 93, 92); }

.bg-scout\/20 { background-color: rgba(245, 93, 92, 0.2); }

.bg-scout\/25 { background-color: rgba(245, 93, 92, 0.25); }

.bg-scout\/30 { background-color: rgba(245, 93, 92, 0.3); }

.bg-scout\/40 { background-color: rgba(245, 93, 92, 0.4); }

.bg-scout\/5 { background-color: rgba(245, 93, 92, 0.05); }

.bg-scout\/50 { background-color: rgba(245, 93, 92, 0.5); }

.bg-scout\/60 { background-color: rgba(245, 93, 92, 0.6); }

.bg-scout\/70 { background-color: rgba(245, 93, 92, 0.7); }

.bg-scout\/75 { background-color: rgba(245, 93, 92, 0.75); }

.bg-scout\/80 { background-color: rgba(245, 93, 92, 0.8); }

.bg-scout\/90 { background-color: rgba(245, 93, 92, 0.9); }

.bg-scout\/95 { background-color: rgba(245, 93, 92, 0.95); }

.bg-socialite { --tw-bg-opacity: 1; background-color: rgb(227 148 186 / var=
(--tw-bg-opacity)); }

.bg-socialite\/0 { background-color: rgba(227, 148, 186, 0); }

.bg-socialite\/10 { background-color: rgba(227, 148, 186, 0.1); }

.bg-socialite\/100 { background-color: rgb(227, 148, 186); }

.bg-socialite\/20 { background-color: rgba(227, 148, 186, 0.2); }

.bg-socialite\/25 { background-color: rgba(227, 148, 186, 0.25); }

.bg-socialite\/30 { background-color: rgba(227, 148, 186, 0.3); }

.bg-socialite\/40 { background-color: rgba(227, 148, 186, 0.4); }

.bg-socialite\/5 { background-color: rgba(227, 148, 186, 0.05); }

.bg-socialite\/50 { background-color: rgba(227, 148, 186, 0.5); }

.bg-socialite\/60 { background-color: rgba(227, 148, 186, 0.6); }

.bg-socialite\/70 { background-color: rgba(227, 148, 186, 0.7); }

.bg-socialite\/75 { background-color: rgba(227, 148, 186, 0.75); }

.bg-socialite\/80 { background-color: rgba(227, 148, 186, 0.8); }

.bg-socialite\/90 { background-color: rgba(227, 148, 186, 0.9); }

.bg-socialite\/95 { background-color: rgba(227, 148, 186, 0.95); }

.bg-spark { --tw-bg-opacity: 1; background-color: rgb(155 139 251 / var(--t=
w-bg-opacity)); }

.bg-spark\/0 { background-color: rgba(155, 139, 251, 0); }

.bg-spark\/10 { background-color: rgba(155, 139, 251, 0.1); }

.bg-spark\/100 { background-color: rgb(155, 139, 251); }

.bg-spark\/20 { background-color: rgba(155, 139, 251, 0.2); }

.bg-spark\/25 { background-color: rgba(155, 139, 251, 0.25); }

.bg-spark\/30 { background-color: rgba(155, 139, 251, 0.3); }

.bg-spark\/40 { background-color: rgba(155, 139, 251, 0.4); }

.bg-spark\/5 { background-color: rgba(155, 139, 251, 0.05); }

.bg-spark\/50 { background-color: rgba(155, 139, 251, 0.5); }

.bg-spark\/60 { background-color: rgba(155, 139, 251, 0.6); }

.bg-spark\/70 { background-color: rgba(155, 139, 251, 0.7); }

.bg-spark\/75 { background-color: rgba(155, 139, 251, 0.75); }

.bg-spark\/80 { background-color: rgba(155, 139, 251, 0.8); }

.bg-spark\/90 { background-color: rgba(155, 139, 251, 0.9); }

.bg-spark\/95 { background-color: rgba(155, 139, 251, 0.95); }

.bg-telescope { --tw-bg-opacity: 1; background-color: rgb(64 64 200 / var(-=
-tw-bg-opacity)); }

.bg-telescope\/0 { background-color: rgba(64, 64, 200, 0); }

.bg-telescope\/10 { background-color: rgba(64, 64, 200, 0.1); }

.bg-telescope\/100 { background-color: rgb(64, 64, 200); }

.bg-telescope\/20 { background-color: rgba(64, 64, 200, 0.2); }

.bg-telescope\/25 { background-color: rgba(64, 64, 200, 0.25); }

.bg-telescope\/30 { background-color: rgba(64, 64, 200, 0.3); }

.bg-telescope\/40 { background-color: rgba(64, 64, 200, 0.4); }

.bg-telescope\/5 { background-color: rgba(64, 64, 200, 0.05); }

.bg-telescope\/50 { background-color: rgba(64, 64, 200, 0.5); }

.bg-telescope\/60 { background-color: rgba(64, 64, 200, 0.6); }

.bg-telescope\/70 { background-color: rgba(64, 64, 200, 0.7); }

.bg-telescope\/75 { background-color: rgba(64, 64, 200, 0.75); }

.bg-telescope\/80 { background-color: rgba(64, 64, 200, 0.8); }

.bg-telescope\/90 { background-color: rgba(64, 64, 200, 0.9); }

.bg-telescope\/95 { background-color: rgba(64, 64, 200, 0.95); }

.bg-tinker { --tw-bg-opacity: 1; background-color: rgb(236 118 88 / var(--t=
w-bg-opacity)); }

.bg-tinker\/0 { background-color: rgba(236, 118, 88, 0); }

.bg-tinker\/10 { background-color: rgba(236, 118, 88, 0.1); }

.bg-tinker\/100 { background-color: rgb(236, 118, 88); }

.bg-tinker\/20 { background-color: rgba(236, 118, 88, 0.2); }

.bg-tinker\/25 { background-color: rgba(236, 118, 88, 0.25); }

.bg-tinker\/30 { background-color: rgba(236, 118, 88, 0.3); }

.bg-tinker\/40 { background-color: rgba(236, 118, 88, 0.4); }

.bg-tinker\/5 { background-color: rgba(236, 118, 88, 0.05); }

.bg-tinker\/50 { background-color: rgba(236, 118, 88, 0.5); }

.bg-tinker\/60 { background-color: rgba(236, 118, 88, 0.6); }

.bg-tinker\/70 { background-color: rgba(236, 118, 88, 0.7); }

.bg-tinker\/75 { background-color: rgba(236, 118, 88, 0.75); }

.bg-tinker\/80 { background-color: rgba(236, 118, 88, 0.8); }

.bg-tinker\/90 { background-color: rgba(236, 118, 88, 0.9); }

.bg-tinker\/95 { background-color: rgba(236, 118, 88, 0.95); }

.bg-valet { --tw-bg-opacity: 1; background-color: rgb(94 71 205 / var(--tw-=
bg-opacity)); }

.bg-valet\/0 { background-color: rgba(94, 71, 205, 0); }

.bg-valet\/10 { background-color: rgba(94, 71, 205, 0.1); }

.bg-valet\/100 { background-color: rgb(94, 71, 205); }

.bg-valet\/20 { background-color: rgba(94, 71, 205, 0.2); }

.bg-valet\/25 { background-color: rgba(94, 71, 205, 0.25); }

.bg-valet\/30 { background-color: rgba(94, 71, 205, 0.3); }

.bg-valet\/40 { background-color: rgba(94, 71, 205, 0.4); }

.bg-valet\/5 { background-color: rgba(94, 71, 205, 0.05); }

.bg-valet\/50 { background-color: rgba(94, 71, 205, 0.5); }

.bg-valet\/60 { background-color: rgba(94, 71, 205, 0.6); }

.bg-valet\/70 { background-color: rgba(94, 71, 205, 0.7); }

.bg-valet\/75 { background-color: rgba(94, 71, 205, 0.75); }

.bg-valet\/80 { background-color: rgba(94, 71, 205, 0.8); }

.bg-valet\/90 { background-color: rgba(94, 71, 205, 0.9); }

.bg-valet\/95 { background-color: rgba(94, 71, 205, 0.95); }

.bg-vapor { --tw-bg-opacity: 1; background-color: rgb(37 196 242 / var(--tw=
-bg-opacity)); }

.bg-vapor\/0 { background-color: rgba(37, 196, 242, 0); }

.bg-vapor\/10 { background-color: rgba(37, 196, 242, 0.1); }

.bg-vapor\/100 { background-color: rgb(37, 196, 242); }

.bg-vapor\/20 { background-color: rgba(37, 196, 242, 0.2); }

.bg-vapor\/25 { background-color: rgba(37, 196, 242, 0.25); }

.bg-vapor\/30 { background-color: rgba(37, 196, 242, 0.3); }

.bg-vapor\/40 { background-color: rgba(37, 196, 242, 0.4); }

.bg-vapor\/5 { background-color: rgba(37, 196, 242, 0.05); }

.bg-vapor\/50 { background-color: rgba(37, 196, 242, 0.5); }

.bg-vapor\/60 { background-color: rgba(37, 196, 242, 0.6); }

.bg-vapor\/70 { background-color: rgba(37, 196, 242, 0.7); }

.bg-vapor\/75 { background-color: rgba(37, 196, 242, 0.75); }

.bg-vapor\/80 { background-color: rgba(37, 196, 242, 0.8); }

.bg-vapor\/90 { background-color: rgba(37, 196, 242, 0.9); }

.bg-vapor\/95 { background-color: rgba(37, 196, 242, 0.95); }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--t=
w-bg-opacity)); }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.from-\[rgba\(255\,255\,255\,\.2\)\] { --tw-gradient-from: rgba(255,255,255=
,.2) var(--tw-gradient-from-position); --tw-gradient-from-position: ; --tw-=
gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-from-position); --tw-=
gradient-to-position: ; --tw-gradient-stops: var(--tw-gradient-from), var(-=
-tw-gradient-to); }

.from-gray-100 { --tw-gradient-from: #f5f5fa var(--tw-gradient-from-positio=
n); --tw-gradient-from-position: ; --tw-gradient-to: rgb(245 245 250 / 0) v=
ar(--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient=
-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-red-500 { --tw-gradient-from: #F9322C var(--tw-gradient-from-position=
); --tw-gradient-from-position: ; --tw-gradient-to: rgb(249 50 44 / 0) var(=
--tw-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-st=
ops: var(--tw-gradient-from), var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-from-position: ; --tw-gradient-to: rgb(255 255 255 / 0) var(--t=
w-gradient-from-position); --tw-gradient-to-position: ; --tw-gradient-stops=
: var(--tw-gradient-from), var(--tw-gradient-to); }

.to-\[rgba\(255\,255\,255\,0\)\] { --tw-gradient-to: rgba(255,255,255,0) va=
r(--tw-gradient-to-position); --tw-gradient-to-position: ; }

.to-red-600 { --tw-gradient-to: #EB4432 var(--tw-gradient-to-position); --t=
w-gradient-to-position: ; }

.to-white { --tw-gradient-to: #fff var(--tw-gradient-to-position); --tw-gra=
dient-to-position: ; }

.fill-current { fill: currentcolor; }

.fill-gray-700 { fill: rgb(86, 84, 84); }

.fill-gray-900 { fill: rgb(35, 35, 35); }

.fill-purple-600 { fill: rgb(131, 56, 236); }

.stroke-gray-800 { stroke: rgb(34, 34, 34); }

.stroke-red-500 { stroke: rgb(249, 50, 44); }

.object-cover { object-fit: cover; }

.object-center { object-position: center center; }

.p-10 { padding: 2.5rem; }

.p-12 { padding: 3rem; }

.p-2 { padding: 0.5rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-8 { padding: 2rem; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; }

.py-12 { padding-top: 3rem; padding-bottom: 3rem; }

.py-16 { padding-top: 4rem; padding-bottom: 4rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-16 { padding-bottom: 4rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-24 { padding-bottom: 6rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pr-3 { padding-right: 0.75rem; }

.pt-0 { padding-top: 0px; }

.pt-12 { padding-top: 3rem; }

.pt-16 { padding-top: 4rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-4 { padding-top: 1rem; }

.pt-48 { padding-top: 12rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[4\.2rem\] { padding-top: 4.2rem; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.font-sans { font-family: scandia-web, ui-sans-serif, system-ui, -apple-sys=
tem, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto=
 Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol=
", "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-5xl { font-size: 3rem; line-height: 1; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.lowercase { text-transform: lowercase; }

.italic { font-style: italic; }

.not-italic { font-style: normal; }

.leading-4 { line-height: 1rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-8 { line-height: 2rem; }

.leading-loose { line-height: 2; }

.leading-relaxed { line-height: 1.625; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-wide { letter-spacing: 0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.text-\[\#d97707\] { --tw-text-opacity: 1; color: rgb(217 119 7 / var(--tw-=
text-opacity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-te=
xt-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(181 181 189 / var(--tw-te=
xt-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(147 147 158 / var(--tw-te=
xt-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(119 119 119 / var(--tw-te=
xt-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgb(86 84 84 / var(--tw-text-=
opacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(34 34 34 / var(--tw-text-=
opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgb(35 35 35 / var(--tw-text-=
opacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgb(34 197 94 / var(--tw-tex=
t-opacity)); }

.text-jetstream { --tw-text-opacity: 1; color: rgb(104 117 245 / var(--tw-t=
ext-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(249 50 44 / var(--tw-text-=
opacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-=
opacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgb(236 14 0 / var(--tw-text-o=
pacity)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-=
opacity)); }

.underline { text-decoration-line: underline; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-gray-900::placeholder { --tw-placeholder-opacity: 1; color: rg=
b(35 35 35 / var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-25 { opacity: 0.25; }

.opacity-75 { opacity: 0.75; }

.opacity-\[\.15\] { opacity: 0.15; }

.\!shadow-\[64px_64px_100px_-20px_theme\(colors\.red\.400\)\] { --tw-shadow=
: 64px 64px 100px -20px #f87171 !important; --tw-shadow-colored: 64px 64px =
100px -20px var(--tw-shadow-color) !important; box-shadow: var(--tw-ring-of=
fset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow) !=
important; }

.shadow-\[32px_32px_40px_-20px_theme\(colors\.gray\.400\)\] { --tw-shadow: =
32px 32px 40px -20px #B5B5BD; --tw-shadow-colored: 32px 32px 40px -20px var=
(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),va=
r(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 20px 30px -16px rgba(9, 9, 16, .2); --tw-shadow=
-colored: 0 20px 30px -16px var(--tw-shadow-color); box-shadow: var(--tw-ri=
ng-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shad=
ow); }

.shadow-sm { --tw-shadow: 0 10px 15px -8px rgba(9, 9, 16, .1); --tw-shadow-=
colored: 0 10px 15px -8px var(--tw-shadow-color); box-shadow: var(--tw-ring=
-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow=
); }

.shadow-xl { --tw-shadow: 0 10px 20px 0 rgba(9, 9, 16, .15); --tw-shadow-co=
lored: 0 10px 20px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offs=
et-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow, 0 0 #0000); }

.ring-red-500 { --tw-ring-opacity: 1; --tw-ring-color: rgb(249 50 44 / var(=
--tw-ring-opacity)); }

.ring-red-600 { --tw-ring-opacity: 1; --tw-ring-color: rgb(235 68 50 / var(=
--tw-ring-opacity)); }

.ring-offset-1 { --tw-ring-offset-width: 1px; }

.ring-offset-red-500 { --tw-ring-offset-color: #F9322C; }

.blur { --tw-blur: blur(8px); filter: var(--tw-blur) var(--tw-brightness) v=
ar(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)=
 var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.grayscale { --tw-grayscale: grayscale(100%); filter: var(--tw-blur) var(--=
tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) =
var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); =
}

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.transition { transition-property: color, background-color, border-color, t=
ext-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,=
 backdrop-filter, -webkit-backdrop-filter; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-all { transition-property: all; transition-timing-function: cub=
ic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke; transition-timing-function: cubi=
c-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.transition-transform { transition-property: transform; transition-timing-f=
unction: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

:is(.dark .docs_main h1), :is(.dark .docs_main h2), :is(.dark .docs_main h3=
), :is(.dark .docs_main h4), :is(.dark .docs_main h5), :is(.dark .docs_main=
 h6), :is(.dark .docs_main h4 a), :is(.dark .docs_main h3 a), :is(.dark .do=
cs_main h2 a) { --tw-text-opacity: 1; color: rgb(231 232 242 / var(--tw-tex=
t-opacity)); }

:is(.dark .docs_main p), :is(.dark .docs_main ul:not(:first-of-type) li), :=
is(.dark .docs_main .content-list ul li), :is(.dark .docs_main #software-li=
st), :is(.dark .docs_main #valet-support) { --tw-text-opacity: 1; color: rg=
b(181 181 189 / var(--tw-text-opacity)); }

:is(.dark .docs_main h1 + ul li a) { --tw-text-opacity: 1; color: rgb(215 2=
15 220 / var(--tw-text-opacity)); }

:is(.dark .docs_main p a), :is(.dark .docs_main ul a), :is(.dark .docs_main=
 ol a) { --tw-text-opacity: 1; color: rgb(235 68 50 / var(--tw-text-opacity=
)); }

:is(.dark .docs_main table th) { --tw-text-opacity: 1; color: rgb(231 232 2=
42 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td) { --tw-text-opacity: 1; color: rgb(181 181 1=
89 / var(--tw-text-opacity)); --tw-border-opacity: 1; border-color: rgb(86 =
84 84 / var(--tw-border-opacity)); }

:is(.dark .docs_main table td.support-policy-highlight) { --tw-text-opacity=
: 1; color: rgb(0 0 0 / var(--tw-text-opacity)); }

:is(.dark .docs_sidebar ul li h2), :is(.dark .docs_sidebar ul li a) { --tw-=
text-opacity: 1; color: rgb(181 181 189 / var(--tw-text-opacity)); }

.dark .docs_main h4 a::before, .dark .docs_main h3 a::before, .dark .docs_m=
ain h2 a::before { opacity: 1; }

:is(.dark #carbonads) { --tw-bg-opacity: 1; background-color: rgb(37 42 55 =
/ var(--tw-bg-opacity)); }

:is(.dark #carbonads .carbon-text) { --tw-text-opacity: 1; color: rgb(181 1=
81 189 / var(--tw-text-opacity)); }

:is(.dark #carbonads .carbon-poweredby) { --tw-text-opacity: 1; color: rgb(=
147 147 158 / var(--tw-text-opacity)); }

#header__sun, #header__moon, #header__indeterminate { display: none; }

html[color-theme=3D"dark"] #header__moon, html[color-theme=3D"light"] #head=
er__sun, html[color-theme=3D"system"] #header__indeterminate { display: blo=
ck; }

[x-cloak] { display: none !important; }

.bg-radial-gradient { background-image: radial-gradient(50% 50% at 50% 50%,=
 rgb(235, 68, 50) 0%, rgba(255, 255, 255, 0) 100%); }

.partners_body a { color: rgb(235, 68, 50); text-decoration: underline; }

.version-colors { margin-bottom: 0.25rem; }

:is(.dark .version-colors) { --tw-text-opacity: 1; color: rgb(181 181 189 /=
 var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .version-colors { display: flex; }
}

.version-colors .color-box { margin-right: 0.5rem; height: 0.75rem; width: =
0.75rem; }

.version-colors div.end-of-life { margin-right: 1rem; display: flex; align-=
items: center; }

.version-colors div.end-of-life div:first-child { --tw-bg-opacity: 1; backg=
round-color: rgb(249 50 44 / var(--tw-bg-opacity)); }

.version-colors div.security-fixes { display: flex; align-items: center; }

.version-colors div.security-fixes div:first-child { --tw-bg-opacity: 1; ba=
ckground-color: rgb(244 157 55 / var(--tw-bg-opacity)); }

.even\:-translate-y-1\/2:nth-child(2n) { --tw-translate-y: -50%; transform:=
 translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rot=
ate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-=
x)) scaleY(var(--tw-scale-y)); }

.focus-within\:border-gray-600:focus-within { --tw-border-opacity: 1; borde=
r-color: rgb(119 119 119 / var(--tw-border-opacity)); }

.hover\:border-gray-300:hover { --tw-border-opacity: 1; border-color: rgb(2=
15 215 220 / var(--tw-border-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgb(251 25=
1 253 / var(--tw-bg-opacity)); }

.hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgb(255 255 =
255 / var(--tw-bg-opacity)); }

.hover\:text-gray-500:hover { --tw-text-opacity: 1; color: rgb(147 147 158 =
/ var(--tw-text-opacity)); }

.hover\:text-gray-600:hover { --tw-text-opacity: 1; color: rgb(119 119 119 =
/ var(--tw-text-opacity)); }

.hover\:no-underline:hover { text-decoration-line: none; }

.hover\:grayscale-0:hover { --tw-grayscale: grayscale(0); filter: var(--tw-=
blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-=
hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-dr=
op-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.disabled\:text-gray-200:disabled { --tw-text-opacity: 1; color: rgb(231 23=
2 242 / var(--tw-text-opacity)); }

.group:hover .group-hover\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:hover .group-hover\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-x-1 { --tw-translate-x: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

.group:focus .group-focus\:-translate-y-1 { --tw-translate-y: -.25rem; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-=
scale-x)) scaleY(var(--tw-scale-y)); }

:is(.dark .dark\:block) { display: block; }

:is(.dark .dark\:inline-block) { display: inline-block; }

:is(.dark .dark\:hidden) { display: none; }

:is(.dark .dark\:border-dark-500) { --tw-border-opacity: 1; border-color: r=
gb(57 64 86 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-400) { --tw-border-opacity: 1; border-color: r=
gb(181 181 189 / var(--tw-border-opacity)); }

:is(.dark .dark\:border-gray-700) { --tw-border-opacity: 1; border-color: r=
gb(86 84 84 / var(--tw-border-opacity)); }

:is(.dark .dark\:bg-dark-600) { --tw-bg-opacity: 1; background-color: rgb(3=
7 42 55 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-dark-700) { --tw-bg-opacity: 1; background-color: rgb(2=
3 25 35 / var(--tw-bg-opacity)); }

:is(.dark .dark\:bg-gray-800) { --tw-bg-opacity: 1; background-color: rgb(3=
4 34 34 / var(--tw-bg-opacity)); }

:is(.dark .dark\:from-dark-800) { --tw-gradient-from: #12141C var(--tw-grad=
ient-from-position); --tw-gradient-from-position: ; --tw-gradient-to: rgb(1=
8 20 28 / 0) var(--tw-gradient-from-position); --tw-gradient-to-position: ;=
 --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

:is(.dark .dark\:to-dark-700) { --tw-gradient-to: #171923 var(--tw-gradient=
-to-position); --tw-gradient-to-position: ; }

:is(.dark .dark\:text-gray-200) { --tw-text-opacity: 1; color: rgb(231 232 =
242 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-400) { --tw-text-opacity: 1; color: rgb(181 181 =
189 / var(--tw-text-opacity)); }

:is(.dark .dark\:text-gray-500) { --tw-text-opacity: 1; color: rgb(147 147 =
158 / var(--tw-text-opacity)); }

:is(.dark .dark\:placeholder-gray-500)::placeholder { --tw-placeholder-opac=
ity: 1; color: rgb(147 147 158 / var(--tw-placeholder-opacity)); }

:is(.dark .dark\:hover\:text-gray-400:hover) { --tw-text-opacity: 1; color:=
 rgb(181 181 189 / var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .sm\:left-\[12\%\] { left: 12%; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-12 { margin-top: 3rem; }
  .sm\:mt-5 { margin-top: 1.25rem; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:hidden { display: none; }
  .sm\:h-\[500px\] { height: 500px; }
  .sm\:w-auto { width: auto; }
  .sm\:max-w-5xl { max-width: 64rem; }
  .sm\:max-w-\[480px\] { max-width: 480px; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:max-w-xl { max-width: 36rem; }
  .sm\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .sm\:columns-2 { columns: 2; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:justify-center { justify-content: center; }
  .sm\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .sm\:py-12 { padding-top: 3rem; padding-bottom: 3rem; }
  .sm\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .sm\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-5xl { font-size: 3rem; line-height: 1; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
}

@media (min-width: 768px) {
  .md\:absolute { position: absolute; }
  .md\:inset-y-0 { top: 0px; bottom: 0px; }
  .md\:bottom-64 { bottom: 16rem; }
  .md\:left-0 { left: 0px; }
  .md\:left-1\/2 { left: 50%; }
  .md\:left-2 { left: 0.5rem; }
  .md\:left-\[12\%\] { left: 12%; }
  .md\:right-1\/2 { right: 50%; }
  .md\:right-1\/4 { right: 25%; }
  .md\:right-\[12\%\] { right: 12%; }
  .md\:right-auto { right: auto; }
  .md\:top-48 { top: 12rem; }
  .md\:top-auto { top: auto; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:col-span-3 { grid-column: span 3 / span 3; }
  .md\:-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }
  .md\:-mx-3 { margin-left: -0.75rem; margin-right: -0.75rem; }
  .md\:ml-auto { margin-left: auto; }
  .md\:mt-0 { margin-top: 0px; }
  .md\:mt-12 { margin-top: 3rem; }
  .md\:mt-16 { margin-top: 4rem; }
  .md\:mt-24 { margin-top: 6rem; }
  .md\:mt-6 { margin-top: 1.5rem; }
  .md\:mt-8 { margin-top: 2rem; }
  .md\:block { display: block; }
  .md\:inline { display: inline; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:w-3\/4 { width: 75%; }
  .md\:w-full { width: 100%; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:flex-1 { flex: 1 1 0%; }
  .md\:-translate-x-1\/2 { --tw-translate-x: -50%; transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }
  .md\:scale-100 { --tw-scale-x: 1; --tw-scale-y: 1; transform: translate(v=
ar(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(v=
ar(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(v=
ar(--tw-scale-y)); }
  .md\:transform { transform: translate(var(--tw-translate-x),var(--tw-tran=
slate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-sk=
ew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .md\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .md\:items-end { align-items: flex-end; }
  .md\:items-center { align-items: center; }
  .md\:gap-12 { gap: 3rem; }
  .md\:gap-8 { gap: 2rem; }
  .md\:gap-x-8 { column-gap: 2rem; }
  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: =
0; margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse))); margin-bott=
om: calc(0px * var(--tw-space-y-reverse)); }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:p-8 { padding: 2rem; }
  .md\:py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .md\:pr-0 { padding-right: 0px; }
  .md\:pt-12 { padding-top: 3rem; }
  .md\:pt-24 { padding-top: 6rem; }
  .md\:pt-32 { padding-top: 8rem; }
  .md\:pt-48 { padding-top: 12rem; }
  .md\:text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-6xl { font-size: 3.75rem; line-height: 1; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-9 { line-height: 2.25rem; }
  .md\:leading-tight { line-height: 1.25; }
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:sticky { position: sticky; }
  .lg\:bottom-12 { bottom: 3rem; }
  .lg\:bottom-64 { bottom: 16rem; }
  .lg\:left-1\/2 { left: 50%; }
  .lg\:left-1\/3 { left: 33.3333%; }
  .lg\:left-\[12\%\] { left: 12%; }
  .lg\:right-auto { right: auto; }
  .lg\:top-2\/3 { top: 66.6667%; }
  .lg\:top-auto { top: auto; }
  .lg\:order-last { order: 9999; }
  .lg\:col-span-2 { grid-column: span 2 / span 2; }
  .lg\:col-span-3 { grid-column: span 3 / span 3; }
  .lg\:col-span-4 { grid-column: span 4 / span 4; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:ml-4 { margin-left: 1rem; }
  .lg\:ml-6 { margin-left: 1.5rem; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:mt-10 { margin-top: 2.5rem; }
  .lg\:mt-24 { margin-top: 6rem; }
  .lg\:mt-4 { margin-top: 1rem; }
  .lg\:mt-8 { margin-top: 2rem; }
  .lg\:block { display: block; }
  .lg\:inline { display: inline; }
  .lg\:flex { display: flex; }
  .lg\:inline-flex { display: inline-flex; }
  .lg\:grid { display: grid; }
  .lg\:hidden { display: none; }
  .lg\:h-12 { height: 3rem; }
  .lg\:h-6 { height: 1.5rem; }
  .lg\:h-8 { height: 2rem; }
  .lg\:h-\[550px\] { height: 550px; }
  .lg\:h-screen { height: 100vh; }
  .lg\:w-12 { width: 3rem; }
  .lg\:w-40 { width: 10rem; }
  .lg\:w-80 { width: 20rem; }
  .lg\:w-\[454px\] { width: 454px; }
  .lg\:w-full { width: 100%; }
  .lg\:max-w-xs { max-width: 20rem; }
  .lg\:shrink-0 { flex-shrink: 0; }
  .lg\:translate-x-20 { --tw-translate-x: 5rem; transform: translate(var(--=
tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--=
tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--=
tw-scale-y)); }
  .lg\:-rotate-2 { --tw-rotate: -2deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:-rotate-3 { --tw-rotate: -3deg; transform: translate(var(--tw-transl=
ate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x=
)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-=
y)); }
  .lg\:rotate-1 { --tw-rotate: 1deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:rotate-2 { --tw-rotate: 2deg; transform: translate(var(--tw-translat=
e-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }
  .lg\:columns-3 { columns: 3; }
  .lg\:grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }
  .lg\:flex-row { flex-direction: row; }
  .lg\:flex-row-reverse { flex-direction: row-reverse; }
  .lg\:flex-col { flex-direction: column; }
  .lg\:items-start { align-items: flex-start; }
  .lg\:items-end { align-items: flex-end; }
  .lg\:items-center { align-items: center; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-end { justify-content: flex-end; }
  .lg\:justify-center { justify-content: center; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-12 { gap: 3rem; }
  .lg\:gap-6 { gap: 1.5rem; }
  .lg\:gap-8 { gap: 2rem; }
  .lg\:divide-x-0 > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse=
: 0; border-right-width: calc(0px * var(--tw-divide-x-reverse)); border-lef=
t-width: calc(0px * calc(1 - var(--tw-divide-x-reverse))); }
  .lg\:divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: =
0; border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse))); bord=
er-bottom-width: calc(1px * var(--tw-divide-y-reverse)); }
  .lg\:overflow-hidden { overflow: hidden; }
  .lg\:overflow-y-auto { overflow-y: auto; }
  .lg\:overflow-x-visible { overflow-x: visible; }
  .lg\:overscroll-y-contain { overscroll-behavior-y: contain; }
  .lg\:border-\[16px\] { border-width: 16px; }
  .lg\:border-b-0 { border-bottom-width: 0px; }
  .lg\:border-r { border-right-width: 1px; }
  .lg\:border-red-600 { --tw-border-opacity: 1; border-color: rgb(235 68 50=
 / var(--tw-border-opacity)); }
  .lg\:bg-transparent { background-color: transparent; }
  .lg\:bg-gradient-to-b { background-image: linear-gradient(to bottom,var(-=
-tw-gradient-stops)); }
  .lg\:bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw=
-gradient-stops)); }
  .lg\:px-12 { padding-left: 3rem; padding-right: 3rem; }
  .lg\:px-24 { padding-left: 6rem; padding-right: 6rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-24 { padding-top: 6rem; padding-bottom: 6rem; }
  .lg\:py-32 { padding-top: 8rem; padding-bottom: 8rem; }
  .lg\:py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
  .lg\:pb-64 { padding-bottom: 16rem; }
  .lg\:pl-12 { padding-left: 3rem; }
  .lg\:pt-16 { padding-top: 4rem; }
  .lg\:pt-36 { padding-top: 9rem; }
  .lg\:pt-48 { padding-top: 12rem; }
  .lg\:pt-64 { padding-top: 16rem; }
  .lg\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .lg\:text-7xl { font-size: 4.5rem; line-height: 1; }
  .lg\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .lg\:leading-10 { line-height: 2.5rem; }
}

@media (min-width: 1280px) {
  .xl\:left-16 { left: 4rem; }
  .xl\:top-3\/4 { top: 75%; }
  .xl\:col-span-5 { grid-column: span 5 / span 5; }
  .xl\:col-span-7 { grid-column: span 7 / span 7; }
  .xl\:w-80 { width: 20rem; }
  .xl\:translate-x-0 { --tw-translate-x: 0px; transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw=
-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw=
-scale-y)); }
  .xl\:grid-cols-12 { grid-template-columns: repeat(12, minmax(0px, 1fr)); =
}
  .xl\:gap-10 { gap: 2.5rem; }
  .xl\:gap-16 { gap: 4rem; }
  .xl\:p-16 { padding: 4rem; }
  .xl\:px-0 { padding-left: 0px; padding-right: 0px; }
  .xl\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .xl\:pb-28 { padding-bottom: 7rem; }
  .xl\:pr-8 { padding-right: 2rem; }
  .xl\:pt-56 { padding-top: 14rem; }
  .xl\:text-6xl { font-size: 3.75rem; line-height: 1; }
}

@media (min-width: 1536px) {
  .\32 xl\:left-32 { left: 8rem; }
  .\32 xl\:w-full { width: 100%; }
  .\32 xl\:max-w-lg { max-width: 32rem; }
}

.\[\&_a\]\:text-red-600 a { --tw-text-opacity: 1; color: rgb(235 68 50 / va=
r(--tw-text-opacity)); }

.\[\&_a\]\:underline a { text-decoration-line: underline; }

.hover\:\[\&_a\]\:no-underline a:hover { text-decoration-line: none; }

.\[\&_pre\]\:bg-\[\#161414\] pre { --tw-bg-opacity: 1; background-color: rg=
b(22 20 20 / var(--tw-bg-opacity)); }

.\[\&_pre\]\:p-2 pre { padding: 0.5rem; }

.\[\&_pre\]\:leading-8 pre { line-height: 2rem; }

.\[\&_pre_code\.torchlight\]\:\!bg-\[\#161414\] pre code.torchlight { --tw-=
bg-opacity: 1 !important; background-color: rgb(22 20 20 / var(--tw-bg-opac=
ity)) !important; }

.\[\&_strong\]\:font-medium strong { font-weight: 500; }

.\[\&_ul\]\:ml-4 ul { margin-left: 1rem; }

.\[\&_ul\]\:list-disc ul { list-style-type: disc; }
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/active_marker.min.svg

<svg width=3D"8" height=3D"8" viewBox=3D"0 0 8 8" xmlns=3D"http://www.w3.or=
g/2000/svg"><title>active_marker</title><path d=3D"M4 0l3.464 2v4L4 8 .536 =
6V2z" fill=3D"#FF2D20" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/icons/ul_marker.min.svg

<svg width=3D"10" height=3D"11" viewBox=3D"0 0 10 11" xmlns=3D"http://www.w=
3.org/2000/svg"><title>Polygon</title><path d=3D"M5.036 1.965l-3.492 1.94v3=
.88l3.492 1.94 3.492-1.94v-3.88l-3.492-1.94zm0-1.12l4.5 2.5v5l-4.5 2.5-4.5-=
2.5v-5l4.5-2.5z" fill=3D"#FF2D20" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://laravel.com/img/callouts/exclamation.min.svg

<svg width=3D"6" height=3D"35" viewBox=3D"0 0 6 35" xmlns=3D"http://www.w3.=
org/2000/svg"><title>exclamation</title><path d=3D"M0 29h6v6H0v-6zM0 0h6v24=
H0V0z" fill=3D"#FFF" fill-rule=3D"nonzero"/></svg>
------MultipartBoundary--dCj5FaGQFB4G1NdwxMMnLVjIXlpHXDsvx59nl4zc5L------
